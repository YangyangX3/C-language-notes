1
00:00:04,440 --> 00:00:06,690
这个s t r c m p呢

2
00:00:06,690 --> 00:00:08,490
c m p的意思是compare

3
00:00:08,490 --> 00:00:11,259
所以它是用来比较两个字符串的

4
00:00:11,419 --> 00:00:13,460
因为这两个字符串是用来做比较的

5
00:00:13,460 --> 00:00:14,660
所以当然他们也是const

6
00:00:14,660 --> 00:00:16,519
因为在比较的过程当中

7
00:00:16,519 --> 00:00:18,879
是不可能去修改这两个字符串的

8
00:00:19,199 --> 00:00:21,460
但是他的比较的结果呢

9
00:00:22,059 --> 00:00:25,820
不仅仅是用来说这两个字符串是否相等

10
00:00:26,760 --> 00:00:30,640
它还可以表现出这两个字符串谁大谁小

11
00:00:30,679 --> 00:00:34,189
那到底大和小是怎么定义的呢

12
00:00:34,189 --> 00:00:35,600
我们来试一下

13
00:00:35,600 --> 00:00:37,340
我们现在有两个字符串

14
00:00:37,340 --> 00:00:38,840
它们的内容是一样的

15
00:00:38,840 --> 00:00:39,979
都是a b c

16
00:00:40,320 --> 00:00:42,060
那么这个时候呢

17
00:00:42,060 --> 00:00:46,020
如果我们让它输出s t r c m p的结果

18
00:00:46,020 --> 00:00:49,399
我们看到他给我们的结果是零零

19
00:00:49,399 --> 00:00:52,100
表明他们的这个呃

20
00:00:52,100 --> 00:00:54,409
这两个字符串呢是相等的

21
00:00:54,409 --> 00:00:56,990
这一点呢稍微有一点点不舒服的

22
00:00:56,990 --> 00:00:59,270
是说我们不能在程序当中这么写

23
00:00:59,270 --> 00:01:02,679
说如果s t r c m p说s1 s2 

24
00:01:03,320 --> 00:01:04,900
然后就直接就下去了

25
00:01:04,900 --> 00:01:06,640
我们如果想要说它们是相等的

26
00:01:06,640 --> 00:01:10,200
我们一定得要写上它等于等于零

27
00:01:10,200 --> 00:01:13,680
因为它返回了零的那个结果刚好就是零

28
00:01:13,680 --> 00:01:16,780
是对于衣服来说是不满足的那个结果

29
00:01:16,900 --> 00:01:20,040
那我能不能用这个方式来表达

30
00:01:20,040 --> 00:01:21,060
他们是否是相等的

31
00:01:21,060 --> 00:01:23,280
我能不能说我能不能说诶

32
00:01:23,280 --> 00:01:24,509
我们来看一下呢

33
00:01:24,509 --> 00:01:26,968
说这个s一等于等于s2 

34
00:01:26,968 --> 00:01:28,078
是个什么样的结果

35
00:01:28,078 --> 00:01:29,278
这个做法行吗

36
00:01:29,278 --> 00:01:30,399
我们试一下

37
00:01:32,359 --> 00:01:38,049
他直接就说这个数组的比较呢永远是false

38
00:01:38,049 --> 00:01:39,118
为什么

39
00:01:39,540 --> 00:01:42,030
因为这两个数组

40
00:01:42,030 --> 00:01:46,469
它们一定不会是相同的地址

41
00:01:46,469 --> 00:01:49,319
当我们要去比较这两个数组变量的时候

42
00:01:49,319 --> 00:01:50,930
用等于等于去比较的时候

43
00:01:50,930 --> 00:01:53,810
他表达的是他们是否是相同的地址

44
00:01:53,810 --> 00:01:55,489
所以他们不是相同的地址

45
00:01:55,489 --> 00:01:56,969
ok这事儿不行

46
00:01:56,969 --> 00:01:58,650
那不相同会怎么样

47
00:01:58,650 --> 00:01:59,549
我们试一下这件事情

48
00:01:59,549 --> 00:02:01,049
如果我们现在第一个是a b c

49
00:02:01,049 --> 00:02:02,739
第二个是bbc

50
00:02:02,920 --> 00:02:04,659
我们只有一个字母的差距

51
00:02:04,659 --> 00:02:05,109
对不对

52
00:02:05,109 --> 00:02:09,039
我们知道说这个b呢排在字母表a的后面

53
00:02:09,039 --> 00:02:11,979
我们看看现在它的结果是什么

54
00:02:12,199 --> 00:02:15,379
它的结果是-1-1的

55
00:02:15,379 --> 00:02:18,419
意思是说s一比s2 来的小

56
00:02:18,838 --> 00:02:20,429
a比b来的小

57
00:02:20,429 --> 00:02:22,829
因为a在字母表的前面

58
00:02:22,829 --> 00:02:24,299
b在字母表的后面

59
00:02:24,299 --> 00:02:25,610
所以b要大一点

60
00:02:25,610 --> 00:02:27,229
ok听上去挺合理的

61
00:02:27,229 --> 00:02:27,710
对不对

62
00:02:27,710 --> 00:02:28,099
好

63
00:02:28,099 --> 00:02:31,159
如果我现在呢大家都是a

64
00:02:31,159 --> 00:02:35,099
可是呢第二个a是大写的a

65
00:02:36,020 --> 00:02:37,810
那这个时候的结果呢

66
00:02:37,810 --> 00:02:39,610
他说是32

67
00:02:39,610 --> 00:02:40,900
32是什么

68
00:02:40,900 --> 00:02:42,159
首先这是大于零的数

69
00:02:42,159 --> 00:02:42,879
对不对

70
00:02:43,219 --> 00:02:44,900
它大于零大于零

71
00:02:44,900 --> 00:02:47,759
表明说s一比s2 来的大

72
00:02:47,859 --> 00:02:51,459
小写字母比大写字母来的大

73
00:02:51,459 --> 00:02:52,959
并且他给出的不是一

74
00:02:52,959 --> 00:02:53,709
而是32

75
00:02:53,709 --> 00:02:55,449
32是什么呢

76
00:02:55,449 --> 00:02:56,318
我们可以试想

77
00:02:56,318 --> 00:02:59,639
如果我们有说我们要看一下什么呢

78
00:02:59,639 --> 00:03:03,579
说这个小写的a减去大写的a是多少

79
00:03:03,579 --> 00:03:04,179
大家记不记得

80
00:03:04,179 --> 00:03:08,009
我们在讲字符类型的时候提到过这件事情

81
00:03:08,009 --> 00:03:09,300
我们运行一下

82
00:03:09,300 --> 00:03:10,840
它就是32

83
00:03:11,280 --> 00:03:13,379
也就是说当它们不相等的时候

84
00:03:13,379 --> 00:03:18,060
其实他给出的就是他和他的差值

85
00:03:19,679 --> 00:03:23,359
s一的不相等的那个字符和s2 不相等

86
00:03:23,359 --> 00:03:26,620
那个字符之间的差值就是那个返回值

87
00:03:26,719 --> 00:03:30,409
ok那如果让我们自己来写c m p

88
00:03:30,409 --> 00:03:31,490
会写成什么样呢

89
00:03:31,490 --> 00:03:32,629
我们来试试看

90
00:03:32,629 --> 00:03:35,459
我们有一个mac m p

91
00:03:35,459 --> 00:03:39,530
我们需要两个const的tra新s1 

92
00:03:39,530 --> 00:03:41,030
我们还可以再试一下这件事情

93
00:03:41,030 --> 00:03:43,069
如果他们两个其他都一样

94
00:03:43,069 --> 00:03:44,750
但是第二个呢多了个空格

95
00:03:44,750 --> 00:03:46,580
这个时候谁大呢

96
00:03:48,718 --> 00:03:51,558
他告诉我们说第二个比第一个更大

97
00:03:51,558 --> 00:03:54,379
因为在这个位置上面

98
00:03:54,959 --> 00:03:56,299
ok而且他告诉我们

99
00:03:56,299 --> 00:03:58,008
这是32哈

100
00:03:58,008 --> 00:03:59,058
这个32是什么

101
00:03:59,058 --> 00:04:00,199
和那个32没关系

102
00:04:00,199 --> 00:04:02,209
因为正好这是32

103
00:04:02,209 --> 00:04:04,129
其实我们现在是什么情况呢

104
00:04:04,129 --> 00:04:06,580
我们现在呢有一个s1 

105
00:04:07,899 --> 00:04:10,079
它里面呢是a b c

106
00:04:10,079 --> 00:04:10,979
但是别忘了

107
00:04:10,979 --> 00:04:12,960
其实它还有第四个零

108
00:04:13,139 --> 00:04:15,199
s2 里面是什么呢

109
00:04:15,379 --> 00:04:16,759
也是a b c

110
00:04:16,759 --> 00:04:18,560
可是呢多了一个空格

111
00:04:18,560 --> 00:04:20,209
然后还有一个零

112
00:04:20,209 --> 00:04:23,629
所以比较的时候发现说相等相等相等

113
00:04:23,629 --> 00:04:25,379
这个地方不相等

114
00:04:25,379 --> 00:04:25,860
对不对

115
00:04:25,860 --> 00:04:26,819
不相等

116
00:04:26,819 --> 00:04:29,879
然后拿这个去减去空格

117
00:04:29,879 --> 00:04:30,779
这得到什么呢

118
00:04:30,779 --> 00:04:33,209
因为空格阿斯克码表里面就是32

119
00:04:33,209 --> 00:04:33,930
这是零

120
00:04:33,930 --> 00:04:36,519
于是我们就得到了负的32

121
00:04:37,660 --> 00:04:40,680
所以如果要我们自己来写函数

122
00:04:40,680 --> 00:04:42,750
来做这样的s t r c m p的事情

123
00:04:42,750 --> 00:04:45,910
我们就意味着需要有一个index

124
00:04:45,910 --> 00:04:47,290
有一个下标

125
00:04:47,290 --> 00:04:49,689
先指的第一个啊

126
00:04:49,689 --> 00:04:50,560
也叫做零

127
00:04:50,560 --> 00:04:56,019
大家都是s一的零和s2 的零去做

128
00:04:56,019 --> 00:04:57,839
比较相等吧

129
00:04:57,839 --> 00:04:58,980
如果相等就往下走

130
00:04:58,980 --> 00:04:59,730
看下一个

131
00:04:59,730 --> 00:05:00,540
如果不相等

132
00:05:00,540 --> 00:05:01,829
就是走到这不相等了

133
00:05:01,829 --> 00:05:05,978
这个时候我们就来看他哪个大哪个小

134
00:05:05,978 --> 00:05:06,759
做个减法

135
00:05:06,759 --> 00:05:07,358
对不对

136
00:05:07,358 --> 00:05:09,278
假如说我们现在的局面呢

137
00:05:09,278 --> 00:05:11,819
是说它们的长度一样啊

138
00:05:11,819 --> 00:05:14,279
比如说这正好是字符的那个零对吧

139
00:05:14,279 --> 00:05:16,259
然后呢这长度一样

140
00:05:16,259 --> 00:05:19,620
当我们判断到这个的时候啊

141
00:05:19,620 --> 00:05:21,240
假如说而且他们的内容也一样啊

142
00:05:21,240 --> 00:05:22,379
那当我们判断这个的时候

143
00:05:22,379 --> 00:05:24,120
我们会发现说他们俩都相等

144
00:05:24,120 --> 00:05:27,100
并且呢都等于零

145
00:05:27,819 --> 00:05:28,829
反斜杠的零

146
00:05:28,829 --> 00:05:32,560
那我们就认为这个搜索这个比较要结束了

147
00:05:32,819 --> 00:05:34,439
ok我们照这个思路来写

148
00:05:34,439 --> 00:05:36,839
写我们的自己的s t r c m p看

149
00:05:36,839 --> 00:05:39,720
所以呢我们现在自己的mii c m p

150
00:05:39,720 --> 00:05:42,279
需要我们有一个index

151
00:05:42,980 --> 00:05:44,560
我们不知道他该走到哪儿

152
00:05:44,560 --> 00:05:46,060
所以for循环不太合适

153
00:05:46,060 --> 00:05:47,860
那我们就用while循环一下子

154
00:05:47,860 --> 00:05:49,540
我们也不知道这个娃娃循环条件是什么

155
00:05:49,540 --> 00:05:51,819
我们先先空着一会儿再来写这件事情

156
00:05:51,819 --> 00:06:03,160
我们看如果说s一的index不等于二的index了

157
00:06:03,800 --> 00:06:07,389
那么这时候呢我们就有个了结了对吧

158
00:06:07,389 --> 00:06:08,970
我们就可以出来

159
00:06:08,970 --> 00:06:11,009
那么出来的时候呢

160
00:06:11,009 --> 00:06:13,170
我们就可以返回一个结果

161
00:06:13,170 --> 00:06:17,990
说s一的index减去s2 的index

162
00:06:17,990 --> 00:06:19,790
这就是我们要返回那个结果

163
00:06:19,790 --> 00:06:20,930
但它们不相等的时候

164
00:06:20,930 --> 00:06:23,149
如果s一的index大于二零dex

165
00:06:23,149 --> 00:06:24,860
那么这个剪出来就是个正的是吧

166
00:06:24,860 --> 00:06:25,730
如果他们小的

167
00:06:25,730 --> 00:06:26,750
那减出来就是个负的

168
00:06:26,750 --> 00:06:28,860
所以break出来就好了

169
00:06:28,860 --> 00:06:32,339
那else做的else如果它们相等了

170
00:06:32,339 --> 00:06:32,910
对不对

171
00:06:32,910 --> 00:06:34,199
如果它们相等了

172
00:06:34,199 --> 00:06:36,699
那么我们要做什么

173
00:06:36,879 --> 00:06:39,040
那么我们就要继续往下走了

174
00:06:39,040 --> 00:06:43,060
但是我们还得再判断一件事情相等的时候

175
00:06:43,060 --> 00:06:49,720
如果s一的i d x是那个反斜杠零的话

176
00:06:49,720 --> 00:06:52,540
就意味着我们已经走到最后了

177
00:06:52,540 --> 00:06:53,079
对吧

178
00:06:53,079 --> 00:06:55,529
相等有一个是反斜杠铃

179
00:06:55,529 --> 00:06:56,910
那么就两个都是反斜杠铃

180
00:06:56,910 --> 00:06:59,399
所以我们也需要break呃

181
00:06:59,399 --> 00:07:01,379
现在代码看上去不那么漂亮

182
00:07:01,379 --> 00:07:01,920
没事

183
00:07:01,920 --> 00:07:04,800
我们一会儿再来看能不能再做仔细的调整

184
00:07:05,579 --> 00:07:07,908
然后都没有那个事情的话

185
00:07:07,908 --> 00:07:10,779
那i dx就要加加了

186
00:07:13,660 --> 00:07:14,699
在这种情况下

187
00:07:14,699 --> 00:07:17,819
我们似乎觉得这个while没什么好写的

188
00:07:17,819 --> 00:07:19,259
或者就是while一就可以

189
00:07:19,259 --> 00:07:21,160
这个while没什么条件可写的

190
00:07:23,120 --> 00:07:24,560
啊我们可以先试一下他

191
00:07:24,560 --> 00:07:24,860
对不对

192
00:07:24,860 --> 00:07:27,259
然后我们再来看有什么可以调整的

193
00:07:30,240 --> 00:07:32,600
跟刚才的啊s t r c m p一样

194
00:07:32,600 --> 00:07:34,399
但我们这么简单的测试是不够的

195
00:07:34,399 --> 00:07:36,170
你你得找各种情况来说吧

196
00:07:36,170 --> 00:07:38,220
哪个大哪个小箱等等

197
00:07:38,360 --> 00:07:41,060
当然我相信怎么测他都应该是对的啊

198
00:07:41,060 --> 00:07:42,439
这代码写出来是对的

199
00:07:42,439 --> 00:07:44,269
然后我们来看这代码能怎么

200
00:07:44,269 --> 00:07:45,839
怎么变得更好一点

201
00:07:45,839 --> 00:07:47,220
首先我们看到这件事情

202
00:07:47,220 --> 00:07:49,279
是说这个娃娃是个一

203
00:07:49,279 --> 00:07:50,509
我们总总觉得这不太好

204
00:07:50,509 --> 00:07:52,399
我们能不能把某个条件放进来

205
00:07:52,399 --> 00:07:54,889
什么时候什么条件下这个呃

206
00:07:54,889 --> 00:07:56,988
这个这个while这个index还要再加加的

207
00:07:56,988 --> 00:07:58,848
这个while还再再继续下去的

208
00:07:58,848 --> 00:08:02,019
我们能不能把这个条件给放进来

209
00:08:03,899 --> 00:08:06,829
因为我们看到说什么条件下他要离开呢

210
00:08:06,829 --> 00:08:08,139
他们俩不相等

211
00:08:09,120 --> 00:08:10,220
他要离开

212
00:08:10,220 --> 00:08:11,420
他们俩相等

213
00:08:11,420 --> 00:08:12,899
但是有一个是零

214
00:08:13,420 --> 00:08:15,910
也就是说他们俩相等于等于零要离开

215
00:08:15,910 --> 00:08:20,980
所以如果我们发现说s一的i d x

216
00:08:21,860 --> 00:08:25,860
等于s2 的idx

217
00:08:27,139 --> 00:08:29,459
并且还要不等于零

218
00:08:32,000 --> 00:08:38,620
就并且说s一的i dx不等于那个零

219
00:08:38,620 --> 00:08:39,159
就好了嘛

220
00:08:39,159 --> 00:08:39,839
对不对

221
00:08:40,120 --> 00:08:42,288
所以如果他们俩相等

222
00:08:42,288 --> 00:08:44,298
并且呢它不等于零的

223
00:08:44,298 --> 00:08:45,828
那我们就继续

224
00:08:45,828 --> 00:08:49,009
于是呢这中间这么大一段就可以注释掉了

225
00:08:49,009 --> 00:08:51,120
循环里面只要有一句i d x加加就可以了

226
00:08:51,120 --> 00:08:52,259
现在运气还对吗

227
00:08:52,259 --> 00:08:52,539
对

228
00:08:53,759 --> 00:08:56,389
我们可以把这个条件这里面的那么一堆

229
00:08:56,389 --> 00:08:57,500
用来做break的

230
00:08:57,500 --> 00:09:00,200
if else if的条件写到while循环里

231
00:09:00,200 --> 00:09:02,019
ui的这个括号里头去

232
00:09:04,620 --> 00:09:09,269
当然在还能够改进这个代码吗

233
00:09:09,269 --> 00:09:11,860
现在这个代码已经变成这个样子了

234
00:09:11,860 --> 00:09:15,519
我们现在是用数组的方式去做这个比较的

235
00:09:15,519 --> 00:09:18,970
我们能不能把i d x这个变量也丢掉

236
00:09:18,970 --> 00:09:21,519
我们想你想新s1 

237
00:09:21,519 --> 00:09:25,149
如果和新s2 是相等的情况下

238
00:09:25,149 --> 00:09:27,190
那么我们可以让新s一啊

239
00:09:27,190 --> 00:09:28,059
s一加加

240
00:09:28,059 --> 00:09:30,159
让s2 加加

241
00:09:31,980 --> 00:09:34,190
然后什么时候它们不相等了

242
00:09:34,190 --> 00:09:39,139
我们去了turn新s一减去新s2 就好了

243
00:09:41,299 --> 00:09:42,879
所以照这个思路写出来

244
00:09:42,879 --> 00:09:46,809
是说wow这个新s一等于等于星s2 

245
00:09:46,809 --> 00:09:54,139
并且新s一等于那个反斜杠零的时候

246
00:09:54,360 --> 00:10:01,080
那我们呢就让s一和s2 加加

247
00:10:01,080 --> 00:10:04,458
当然这个y和那个index就都不需要了

248
00:10:04,860 --> 00:10:06,198
当然这也是对

249
00:10:06,960 --> 00:10:10,460
这是在处理这些字符串的代码里面

250
00:10:10,460 --> 00:10:11,960
我们常见的两种手段

251
00:10:11,960 --> 00:10:14,029
你要么把它当作数组

252
00:10:14,029 --> 00:10:17,149
用一个整数来作为数组的下标

253
00:10:17,149 --> 00:10:18,289
遍历那个字符串

254
00:10:18,289 --> 00:10:20,990
你要么就直接用指针

255
00:10:20,990 --> 00:10:23,960
你反正函数只拿到的参数是指针

256
00:10:23,960 --> 00:10:24,919
你拿那个指针

257
00:10:24,919 --> 00:10:26,779
指针自己不断的在加加加

258
00:10:26,779 --> 00:10:29,759
然后指针所指的那个东西去做判断

259
00:10:29,779 --> 00:10:31,940
第二种while相当于什么呢

260
00:10:31,940 --> 00:10:33,289
在这张图上面

261
00:10:33,289 --> 00:10:37,129
我们一开始让s一指向它

262
00:10:37,129 --> 00:10:38,850
s2 指向它

263
00:10:38,850 --> 00:10:42,059
然后我们让s一指向下一个s2 

264
00:10:42,059 --> 00:10:43,649
指向下一个s1 

265
00:10:43,649 --> 00:10:45,210
再指向下一个s2 

266
00:10:45,210 --> 00:10:46,169
再指向下一个

267
00:10:46,169 --> 00:10:49,120
一直到他们只到了某个不相等的

268
00:10:49,120 --> 00:10:50,799
或者他们知道了相等

269
00:10:50,799 --> 00:10:52,039
但是等于零的

270
00:10:52,299 --> 00:10:53,980
我们在移动指针

271
00:10:53,980 --> 00:10:57,078
而不是在指针上面去加index

272
00:10:57,440 --> 00:10:59,259
这两种写法啊

273
00:10:59,480 --> 00:11:01,399
这个个人更喜欢啊

274
00:11:01,399 --> 00:11:03,470
呃我不能一定说哪一种写法的

275
00:11:03,470 --> 00:11:05,240
最后的执行效率会更高

276
00:11:05,240 --> 00:11:07,958
或者它看上去更加elegant

277
00:11:08,820 --> 00:11:10,809
这只是个人喜好的问题

278
00:11:10,809 --> 00:11:12,250
至于说最后的执行效率

279
00:11:12,250 --> 00:11:14,649
很大程度上编译器会替你做优化的

280
00:11:14,649 --> 00:11:15,730
你无论写成哪种样子

281
00:11:15,730 --> 00:11:18,500
最后编译产生的代码可能是差不多的

