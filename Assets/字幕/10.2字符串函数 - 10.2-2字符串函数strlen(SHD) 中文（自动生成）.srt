1
00:00:04,360 --> 00:00:05,080
对于字符串

2
00:00:06,099 --> 00:00:08,529
c语言提供了很多函数

3
00:00:08,529 --> 00:00:10,619
来帮助我们处理字符串

4
00:00:11,539 --> 00:00:14,529
这是在c的标准库当中的函数

5
00:00:14,529 --> 00:00:16,000
所以理论上说

6
00:00:16,000 --> 00:00:17,739
所有的c语言的发行版本

7
00:00:17,739 --> 00:00:19,620
都应该带有这些函数

8
00:00:20,539 --> 00:00:24,818
这些函数的原型在一个头文件叫做string.h

9
00:00:24,818 --> 00:00:27,980
所以和我们之前做print skin f一样

10
00:00:28,278 --> 00:00:30,798
那时候我们要include s t d l.h

11
00:00:30,798 --> 00:00:33,319
现在我们要使用这些字符串的处理

12
00:00:33,319 --> 00:00:34,069
函数的时候

13
00:00:34,069 --> 00:00:36,159
需要include string.h

14
00:00:36,939 --> 00:00:40,738
我们来看其中的一些非常常用的函数

15
00:00:41,759 --> 00:00:44,179
这里列出了六个函数

16
00:00:44,179 --> 00:00:46,939
我们不仅要去看这六个函数是干什么的

17
00:00:46,939 --> 00:00:49,810
我们还会去看其中的和一些函数

18
00:00:49,810 --> 00:00:52,759
它们到底可能会被写成什么样子

19
00:00:53,740 --> 00:00:56,740
我们来看看第一个函数叫做s t r l e

20
00:00:56,740 --> 00:00:57,880
所有的训练函数

21
00:00:57,880 --> 00:00:59,859
你已经看到都是s t r开头的

22
00:00:59,859 --> 00:01:01,539
l e的意思是lance

23
00:01:01,759 --> 00:01:03,560
所以这个函数会告诉你

24
00:01:03,560 --> 00:01:05,659
那个字符串它的长度是多少

25
00:01:05,659 --> 00:01:06,409
我们说过

26
00:01:06,409 --> 00:01:07,650
作为参数

27
00:01:07,650 --> 00:01:10,049
数组的形式和指针的形式是一样的

28
00:01:10,049 --> 00:01:11,609
因为数组传进去也是指针

29
00:01:11,609 --> 00:01:12,689
所以我们在这儿

30
00:01:12,689 --> 00:01:14,759
全部都用指针的形式来表达了

31
00:01:15,120 --> 00:01:18,599
在这个类型的前面有一个cost

32
00:01:19,780 --> 00:01:21,900
我们在讲到这件事情的时候

33
00:01:21,900 --> 00:01:22,859
曾经提到过

34
00:01:22,859 --> 00:01:26,370
如果你希望那个函数不来修改

35
00:01:26,370 --> 00:01:28,140
你传进去的数组

36
00:01:28,140 --> 00:01:30,329
那么你应该把它写成const

37
00:01:30,329 --> 00:01:34,159
所以在这string lengl s t r u e

38
00:01:34,159 --> 00:01:37,259
它的作用是告诉你这个字符串有多长

39
00:01:37,259 --> 00:01:38,698
显然在这个过程当中

40
00:01:38,698 --> 00:01:41,009
他不会去修改你的字符串

41
00:01:41,009 --> 00:01:42,838
所以这个const的意思是说

42
00:01:42,838 --> 00:01:44,590
我保证s t l i e

43
00:01:44,590 --> 00:01:47,079
保证不会修改你的字符串

44
00:01:47,099 --> 00:01:48,989
我们先来试一下这个函数

45
00:01:48,989 --> 00:01:50,579
我们做了一个非常简单的事情

46
00:01:50,579 --> 00:01:51,900
我们做了一个字符串

47
00:01:51,900 --> 00:01:52,920
我们用数组的方式

48
00:01:52,920 --> 00:01:54,819
因为我们希望它就在这

49
00:01:55,000 --> 00:01:56,439
它的内容是hello

50
00:01:56,439 --> 00:01:58,489
我们知道hello一共有五个字符

51
00:01:58,489 --> 00:02:00,109
我们来看一下它的s t r

52
00:02:00,109 --> 00:02:01,189
l e的结果是多少

53
00:02:01,189 --> 00:02:02,629
我们顺便也要看一下它的size of

54
00:02:02,629 --> 00:02:03,290
的结果是多少

55
00:02:03,290 --> 00:02:05,060
我们来执行一下这个程序

56
00:02:05,359 --> 00:02:08,360
他说s t i l e给我们结果是五

57
00:02:08,360 --> 00:02:11,780
因为这儿有h e l l o正好五个字符

58
00:02:11,838 --> 00:02:14,838
而它的size of也就是这个数组编译器

59
00:02:14,838 --> 00:02:16,098
听我们数出来说

60
00:02:16,098 --> 00:02:18,139
这个数组需要占据多大的空间呢

61
00:02:18,139 --> 00:02:18,859
它是六

62
00:02:18,859 --> 00:02:21,659
因为我们后面还有一个反斜杠

63
00:02:21,659 --> 00:02:23,180
n那个结尾的零

64
00:02:24,300 --> 00:02:26,300
那我们关心的事情

65
00:02:26,300 --> 00:02:26,659
其实是

66
00:02:26,659 --> 00:02:29,060
这个这个s t r l e

67
00:02:29,379 --> 00:02:31,479
大概可以什么样的方式去写出来

68
00:02:31,479 --> 00:02:33,340
我们自己是不是可以把它写得出来呢

69
00:02:33,340 --> 00:02:35,599
如果现在我们想要实现一个说

70
00:02:35,599 --> 00:02:39,120
我们这有一个函数叫做mele

71
00:02:39,259 --> 00:02:43,400
它需要有一个cos c h r型s作为输入

72
00:02:43,400 --> 00:02:45,659
我们应该怎么去写这个函数

73
00:02:45,919 --> 00:02:48,500
然后我们可以用它来代替这个s t i l e

74
00:02:48,500 --> 00:02:49,789
我们要一个mi l e

75
00:02:49,789 --> 00:02:52,300
也能够给我们得到五的那个结果呢

76
00:02:53,599 --> 00:02:56,050
我们想我们现在要写的程序是

77
00:02:56,050 --> 00:03:00,009
我们要去数出s所指的那个地方

78
00:03:00,009 --> 00:03:01,750
有多少个字符

79
00:03:01,750 --> 00:03:02,639
对不对

80
00:03:03,319 --> 00:03:05,680
我们知道size of不能解决这个问题

81
00:03:05,680 --> 00:03:07,360
因为如果现在我们去求size of s

82
00:03:07,360 --> 00:03:11,009
我们得到的是size of指针

83
00:03:11,009 --> 00:03:13,319
是指针的所占据的那个大小

84
00:03:13,319 --> 00:03:15,240
所以在这儿我们需要怎么做

85
00:03:15,240 --> 00:03:17,620
首先当然我们需要有一个计数器

86
00:03:18,699 --> 00:03:21,810
然后我们要做的事情是这样的

87
00:03:21,810 --> 00:03:24,340
我们现在面对的这个东西是什么呢

88
00:03:26,039 --> 00:03:31,438
我们写了哈l这五个字符

89
00:03:31,438 --> 00:03:33,299
在一个字符数组里

90
00:03:33,299 --> 00:03:35,139
最后还有一个反斜杠n

91
00:03:35,699 --> 00:03:38,819
我们需要去遍历这个数组

92
00:03:38,819 --> 00:03:41,189
这是一个c h a r星

93
00:03:41,189 --> 00:03:42,030
对不对

94
00:03:42,030 --> 00:03:43,199
这个指针指向的

95
00:03:43,199 --> 00:03:44,669
这我们要去遍历它

96
00:03:44,669 --> 00:03:48,650
什么时候便利到这个我们便利的

97
00:03:48,650 --> 00:03:50,930
我们访问的那个数组的下标

98
00:03:50,930 --> 00:03:52,289
那个单元是零了

99
00:03:52,289 --> 00:03:54,330
表明说他已经到头了

100
00:03:54,330 --> 00:03:56,430
那么在那个之前便利的每一步

101
00:03:56,430 --> 00:03:57,979
我们让c n t加加

102
00:03:58,118 --> 00:04:00,038
最终我们就可以得到这个

103
00:04:00,038 --> 00:04:01,718
我们来试试这个代码

104
00:04:01,718 --> 00:04:04,099
所以我们现在需要的事情是说

105
00:04:04,399 --> 00:04:07,039
我们要做一个便利

106
00:04:07,039 --> 00:04:08,000
我们要做个便利

107
00:04:08,000 --> 00:04:09,259
我们要对那个数组做便利

108
00:04:09,259 --> 00:04:10,939
可是我们又不知道那个数字有多大

109
00:04:10,939 --> 00:04:11,719
如果知道有多大

110
00:04:11,719 --> 00:04:13,699
我们用for循环不知道有多大

111
00:04:13,699 --> 00:04:15,580
我们可以考虑用while循环

112
00:04:16,220 --> 00:04:17,920
在网友循环的每一步里面

113
00:04:17,920 --> 00:04:19,480
我们要做的事情是给我们

114
00:04:19,480 --> 00:04:23,060
我们当然首先我们需要有一个index

115
00:04:23,060 --> 00:04:24,740
他从零开始

116
00:04:24,740 --> 00:04:26,959
然后我们要做的事情是说

117
00:04:26,959 --> 00:04:27,860
在循环的每一步

118
00:04:27,860 --> 00:04:30,290
我们要让index的指向下一个

119
00:04:30,290 --> 00:04:33,240
顺便我们的c n t也要加加

120
00:04:33,240 --> 00:04:37,139
当然最后我们就可以返回那个cnt了

121
00:04:38,220 --> 00:04:39,560
那条件是什么

122
00:04:41,360 --> 00:04:43,899
s是一个数组

123
00:04:43,899 --> 00:04:46,939
它的index这个下标

124
00:04:46,939 --> 00:04:49,220
也就是我们便利正好到的那个地方

125
00:04:49,220 --> 00:04:52,040
不等于这个零

126
00:04:53,779 --> 00:04:55,000
如果满足这个条件

127
00:04:55,000 --> 00:04:55,779
我们就要继续下去

128
00:04:55,779 --> 00:04:56,319
满足这个条件

129
00:04:56,319 --> 00:04:57,370
我们就要继续下去

130
00:04:57,370 --> 00:04:59,560
我们先来看看如果这么写答案

131
00:04:59,560 --> 00:05:00,310
对不对

132
00:05:00,310 --> 00:05:01,540
这是对的

133
00:05:02,600 --> 00:05:05,079
我们通过这样的一个瓦尔循环

134
00:05:05,079 --> 00:05:08,259
去便利我们的这个字符数组

135
00:05:08,259 --> 00:05:09,980
遍历我们的字符串

136
00:05:10,038 --> 00:05:11,829
找到那个灵

137
00:05:11,829 --> 00:05:14,410
在那个之前这个零那一次

138
00:05:14,410 --> 00:05:15,850
当然我们没有把它加做

139
00:05:15,850 --> 00:05:17,379
就没有做加法加进去

140
00:05:17,379 --> 00:05:19,689
所以在那个之前找到的所有的字符

141
00:05:19,689 --> 00:05:21,339
加起来就是他

142
00:05:21,939 --> 00:05:24,540
当然这段s t r

143
00:05:24,540 --> 00:05:27,079
l e有很多可以简化的地方

144
00:05:27,079 --> 00:05:29,720
比如说我们看到i d x和c n t

145
00:05:29,720 --> 00:05:30,680
同时在做加加

146
00:05:30,680 --> 00:05:31,279
好像没必要

147
00:05:31,279 --> 00:05:32,569
我们有一个就可以了

148
00:05:32,569 --> 00:05:35,660
所以不妨呢我们就只要那个i d x了

149
00:05:35,660 --> 00:05:37,550
我们返回的也是i d x

150
00:05:37,550 --> 00:05:39,220
ok这当然还是对的

