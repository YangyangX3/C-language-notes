1
00:00:04,679 --> 00:00:06,870
如果我们现在要写一个程序

2
00:00:06,870 --> 00:00:10,560
说我要去输入两个整数

3
00:00:10,560 --> 00:00:13,660
然后呢我们要输出这两个整数的平均数

4
00:00:14,019 --> 00:00:16,379
那么根据刚才的想法

5
00:00:16,379 --> 00:00:17,820
我们首先要想的是什么呢

6
00:00:17,820 --> 00:00:21,679
我要有什么样的变量来保存读进来的东西

7
00:00:21,679 --> 00:00:22,820
我们要读进两个整数

8
00:00:22,820 --> 00:00:24,800
所以我们需要有两个整型的变量

9
00:00:25,099 --> 00:00:26,928
然后我们的计算是什么呢

10
00:00:26,928 --> 00:00:28,879
我们要把它们平均数给算出来

11
00:00:28,879 --> 00:00:29,809
平均数怎么算呢

12
00:00:29,809 --> 00:00:30,978
加起来除以二

13
00:00:30,978 --> 00:00:31,879
对不对好

14
00:00:31,879 --> 00:00:34,079
所以我们现在就可以写出下面的这个代码

15
00:00:34,079 --> 00:00:36,420
说我们有a和b两个

16
00:00:36,420 --> 00:00:40,009
然后我们用skin f去把a和b给读进来

17
00:00:40,009 --> 00:00:41,030
读完了以后呢

18
00:00:41,030 --> 00:00:42,530
我们做了一个运算

19
00:00:42,530 --> 00:00:44,890
a加b去除以二点

20
00:00:44,890 --> 00:00:46,530
为什么要从二点呢

21
00:00:46,530 --> 00:00:48,689
我们在身高那个程序里面已经知道

22
00:00:48,689 --> 00:00:49,170
对不对

23
00:00:49,170 --> 00:00:50,579
如果你除以二的话

24
00:00:50,579 --> 00:00:52,000
没有小数部分了

25
00:00:52,240 --> 00:00:53,500
这个结果就不准确

26
00:00:53,500 --> 00:00:54,700
所以我们除以二点

27
00:00:54,700 --> 00:00:56,679
但是你一旦除以二点以后

28
00:00:56,679 --> 00:00:57,460
这是一个double

29
00:00:57,460 --> 00:00:58,179
就不是int了

30
00:00:58,179 --> 00:00:59,109
因此这个结果呢

31
00:00:59,109 --> 00:01:01,659
我们得要放到一个double的变量里头去

32
00:01:01,659 --> 00:01:02,979
然后在输出的时候

33
00:01:02,979 --> 00:01:04,000
因为这是double的变量

34
00:01:04,000 --> 00:01:06,099
所以我们要用百分号f来输出

35
00:01:06,379 --> 00:01:07,040
对不对

36
00:01:07,040 --> 00:01:08,540
好这个很简单对吧

37
00:01:08,540 --> 00:01:10,340
我们要看的是在这个地方

38
00:01:10,340 --> 00:01:10,879
在这个地方

39
00:01:10,879 --> 00:01:12,980
我们看到说我们在做a加b除以二

40
00:01:12,980 --> 00:01:13,640
的时候啊

41
00:01:13,640 --> 00:01:15,819
我们在a加b外面加了括号

42
00:01:16,239 --> 00:01:17,349
为什么

43
00:01:17,349 --> 00:01:19,780
因为我们知道我们小学算术就知道

44
00:01:19,780 --> 00:01:20,349
对不对

45
00:01:20,349 --> 00:01:22,459
a加b是加法

46
00:01:22,459 --> 00:01:24,500
它的优先级比除法要来得低

47
00:01:24,500 --> 00:01:26,510
所以如果你没有这个外面的括号的话

48
00:01:26,510 --> 00:01:27,439
它会做什么呢

49
00:01:27,439 --> 00:01:29,359
它会做b除以二点

50
00:01:29,359 --> 00:01:32,540
然后加上a这个显然不是平均数对吧

51
00:01:32,540 --> 00:01:36,140
所以c里面和我们的算术一样

52
00:01:36,260 --> 00:01:38,599
运算符呢是有优先级的

53
00:01:38,599 --> 00:01:40,010
优先级表达的是什么

54
00:01:40,010 --> 00:01:42,560
就是谁先算谁后算

55
00:01:43,000 --> 00:01:43,989
这张表

56
00:01:43,989 --> 00:01:46,840
列出了我们目前学到过的这些运算符

57
00:01:46,840 --> 00:01:48,159
它们的优先级啊

58
00:01:48,159 --> 00:01:49,000
我们看呢

59
00:01:49,000 --> 00:01:52,760
呃和我们的这个一般的认识都是一样的

60
00:01:52,760 --> 00:01:56,540
你看乘除还有百分号比加减要来得高啊

61
00:01:56,540 --> 00:01:58,480
在这张表上面的是更高的

62
00:01:59,060 --> 00:02:01,400
这个取余呢和除法是类似的

63
00:02:01,400 --> 00:02:02,899
所以他们的优先级是一样的

64
00:02:03,439 --> 00:02:05,989
比乘除还要高的是什么呢

65
00:02:05,989 --> 00:02:08,300
怎么会有两个加减乘除还来得高呢

66
00:02:08,300 --> 00:02:10,800
这两个啊它是单位的运算

67
00:02:11,438 --> 00:02:12,800
什么是弹幕呢

68
00:02:12,819 --> 00:02:14,020
我们前面说过

69
00:02:14,020 --> 00:02:17,770
我们表达式里有这个运算符和算子对吧

70
00:02:17,770 --> 00:02:21,199
那么每一个运算符呢有几个算子呢

71
00:02:21,199 --> 00:02:22,400
比如说对于加号来说

72
00:02:22,400 --> 00:02:23,870
我可以做5+6

73
00:02:23,870 --> 00:02:25,039
五和六是算子

74
00:02:25,039 --> 00:02:27,179
所以加号呢正常情况下

75
00:02:27,179 --> 00:02:29,038
它是一个我们叫做双目运算符

76
00:02:29,038 --> 00:02:32,129
因为有两个扇子叫双目运算符

77
00:02:32,129 --> 00:02:35,180
但是呢我们也会想做这样一个运算

78
00:02:35,180 --> 00:02:36,439
比如说a是一个变量

79
00:02:36,439 --> 00:02:38,090
这个变量里面已经有一个值了

80
00:02:38,090 --> 00:02:41,000
我想把这个a的变量里面的值呢取负

81
00:02:41,000 --> 00:02:44,740
也就是说我们想得到a的变量的那个值的

82
00:02:45,039 --> 00:02:46,419
相反数啊

83
00:02:46,419 --> 00:02:48,069
如果它里面是我们想得到-5

84
00:02:48,069 --> 00:02:51,889
这个时候呢我们只要写负a就可以了啊

85
00:02:51,889 --> 00:02:54,319
那么这个时候的负a这个运算符

86
00:02:54,319 --> 00:02:55,340
就是一个单位的运算符

87
00:02:55,340 --> 00:02:57,060
因为它只有一个算子a

88
00:02:57,459 --> 00:02:59,378
他没有第二个算式啊

89
00:02:59,378 --> 00:03:00,758
所以这是一个单位的运算符

90
00:03:00,758 --> 00:03:04,939
单位的运算优先级比乘除还要来得高

91
00:03:05,960 --> 00:03:06,939
所以这样的话呢

92
00:03:06,939 --> 00:03:08,080
我们就可以写出这样的式子

93
00:03:08,080 --> 00:03:09,740
你看a乘以负b

94
00:03:09,819 --> 00:03:12,580
它实际上呢会先去做负b

95
00:03:12,580 --> 00:03:16,498
做完以后再和a去相乘啊

96
00:03:16,498 --> 00:03:18,329
这叫做单位的运算

97
00:03:18,329 --> 00:03:20,639
那么另外呢我们还看到有结合关系

98
00:03:20,639 --> 00:03:24,469
我们看到说乘除加减全部都是自左向右的

99
00:03:24,469 --> 00:03:25,759
这结合根据什么意思呢

100
00:03:25,759 --> 00:03:28,009
如果有相同优先级的运算符放在一起

101
00:03:28,009 --> 00:03:29,629
比如说a加b加c

102
00:03:29,629 --> 00:03:32,750
那么他会先做a加b a加b的结果

103
00:03:32,750 --> 00:03:33,819
再去加c

104
00:03:34,000 --> 00:03:37,659
显然这符合我们一般的算术的认识对吧

105
00:03:37,659 --> 00:03:40,000
他不会说a加b加c先做b加c

106
00:03:40,000 --> 00:03:40,719
如果先做b加c

107
00:03:40,719 --> 00:03:42,419
那就自右向左结合

108
00:03:42,539 --> 00:03:44,580
那弹幕呢是自由向左结合的

109
00:03:44,580 --> 00:03:47,370
因为单目运算符的这个算子

110
00:03:47,370 --> 00:03:48,810
一定出现在它右边

111
00:03:48,810 --> 00:03:50,860
所以它必须自由向左结合

112
00:03:51,019 --> 00:03:52,459
那么在c语言呢

113
00:03:52,459 --> 00:03:55,338
还有一点可能和某些呃

114
00:03:55,338 --> 00:03:57,288
其他的程序设计语言不一样的地方

115
00:03:57,288 --> 00:04:01,400
就是我们的赋值也是一个运算符

116
00:04:01,919 --> 00:04:03,240
辅助是一个运算符

117
00:04:03,240 --> 00:04:06,060
而不是一个特殊的这个语句

118
00:04:06,060 --> 00:04:09,919
有的语言赋值是一个语句啊

119
00:04:09,919 --> 00:04:10,939
是一个特殊的动作

120
00:04:10,939 --> 00:04:12,139
但是呢对于c语言来说

121
00:04:12,139 --> 00:04:13,340
腐值是一个运算符

122
00:04:13,340 --> 00:04:15,919
赋值是一个运算符的意思是什么呢

123
00:04:17,119 --> 00:04:20,259
这个赋值运算它也是有结果的

124
00:04:20,560 --> 00:04:23,500
也就是说如果我们做了一个复制

125
00:04:23,500 --> 00:04:24,660
比如说a等于六

126
00:04:25,300 --> 00:04:28,680
那么它的结果当然a会变成六

127
00:04:28,680 --> 00:04:29,189
对不对

128
00:04:29,189 --> 00:04:32,129
但是a等于六这个式子本身是有结果

129
00:04:32,129 --> 00:04:34,920
好像a加b有个结果是a加b的结果对吧

130
00:04:34,920 --> 00:04:36,269
那a等于六也有个结果

131
00:04:36,269 --> 00:04:40,329
就是a得到六的结果以后的那个结果

132
00:04:40,329 --> 00:04:41,588
那么也就是六

133
00:04:41,588 --> 00:04:43,879
所以这样子呢你就能够理解说

134
00:04:43,879 --> 00:04:45,620
或者说计算机能够理解哈

135
00:04:45,620 --> 00:04:46,399
对于人来说

136
00:04:46,399 --> 00:04:47,899
其实你要去理解a等于b等于六

137
00:04:47,899 --> 00:04:48,860
没什么难度对吧

138
00:04:48,860 --> 00:04:50,000
我们知道这个做完以后

139
00:04:50,000 --> 00:04:51,500
a和b都等都等于六了

140
00:04:51,500 --> 00:04:54,269
这个我们从算术的角度可以去理解它

141
00:04:54,269 --> 00:04:55,230
但是对计算机来说

142
00:04:55,230 --> 00:04:57,089
怎么去理解a等于b等于六呢

143
00:04:57,089 --> 00:05:00,009
它其实是被理解成a等于

144
00:05:00,009 --> 00:05:01,509
b等于六的那个结果

145
00:05:01,509 --> 00:05:04,579
因为你有没有注意到前面那张表里头

146
00:05:04,579 --> 00:05:09,079
我们说赋值这个运算它是自右向左结合的

147
00:05:09,980 --> 00:05:12,730
所以自右向左结合的意思就是

148
00:05:12,730 --> 00:05:14,740
我先这两个都是复制

149
00:05:14,740 --> 00:05:15,819
他们的优先级是一样的

150
00:05:15,819 --> 00:05:16,389
对不对

151
00:05:16,389 --> 00:05:18,579
那么我们会先做b等于六

152
00:05:18,699 --> 00:05:19,600
b等于六

153
00:05:19,600 --> 00:05:20,709
有了结果之后

154
00:05:20,709 --> 00:05:21,879
这个结果就是六

155
00:05:21,879 --> 00:05:24,279
再把这个六这个结果付给a

156
00:05:25,000 --> 00:05:27,660
而为什么我们要说腐值的优先级

157
00:05:27,660 --> 00:05:30,149
比所有的四则运算都要来得低呢

158
00:05:30,149 --> 00:05:31,350
你看这个式子

159
00:05:31,350 --> 00:05:33,439
如果说a等于b加五

160
00:05:33,978 --> 00:05:36,079
我们现在的优先级是说

161
00:05:36,079 --> 00:05:37,519
加号的优先级来的高

162
00:05:37,519 --> 00:05:39,168
因此b加五会先算

163
00:05:39,168 --> 00:05:42,250
算完以后b加五的值拿来做赋值

164
00:05:42,250 --> 00:05:44,769
如果反过来辅助优先级很高

165
00:05:44,769 --> 00:05:48,009
那么这个式子这个表达式从左向右计算

166
00:05:48,009 --> 00:05:49,930
就会先做a等于b

167
00:05:49,930 --> 00:05:51,129
a等于b的结果

168
00:05:51,129 --> 00:05:52,180
算出来以后

169
00:05:52,180 --> 00:05:54,430
也就是说把b付给a以后

170
00:05:54,430 --> 00:05:56,170
再拿这个结果去加五

171
00:05:56,170 --> 00:05:58,959
然后就没有下文了啊

172
00:05:58,959 --> 00:06:01,060
所以为了让这些表达式

173
00:06:01,060 --> 00:06:03,220
看起来和正常的算式是一样的

174
00:06:03,220 --> 00:06:05,860
我们必须让这个赋值是一个非常低的

175
00:06:05,860 --> 00:06:07,220
优先级的运算符

176
00:06:07,579 --> 00:06:10,040
那么既然腐值是一个运算符

177
00:06:10,040 --> 00:06:11,750
既然赋值运算有结果

178
00:06:11,750 --> 00:06:14,180
就有人呢会去写出这样的式子来

179
00:06:14,180 --> 00:06:18,889
你看这里说c呢等于一加b等于a

180
00:06:18,889 --> 00:06:21,199
然后我们用括号使得它优先级比较高

181
00:06:21,199 --> 00:06:22,259
他会先去算

182
00:06:22,279 --> 00:06:25,879
他想呢用一个式子同时做两件事情

183
00:06:25,879 --> 00:06:27,470
既把a的值赋给了b

184
00:06:27,470 --> 00:06:30,199
同时呢又去让ca等于一

185
00:06:30,199 --> 00:06:32,680
加上a的那个值的结果

186
00:06:34,180 --> 00:06:35,579
这种这种腐殖呢

187
00:06:35,579 --> 00:06:37,379
我们把它叫做嵌入式复制啊

188
00:06:37,379 --> 00:06:38,430
嵌套的复制

189
00:06:38,430 --> 00:06:39,709
这种腐殖不好

190
00:06:39,709 --> 00:06:40,790
它不利于阅读

191
00:06:40,790 --> 00:06:41,810
而且容易产生错误

192
00:06:41,810 --> 00:06:44,149
所以我不希望大家在程序当中

193
00:06:44,149 --> 00:06:45,500
这样子来写代码好

194
00:06:46,060 --> 00:06:47,680
我们前面提到过结合关系

195
00:06:47,680 --> 00:06:49,970
我们知道说一般的结合关系呢

196
00:06:49,970 --> 00:06:51,019
都是自左向右

197
00:06:51,019 --> 00:06:53,480
但是呢单位和辅值呢是自由向左

198
00:06:53,480 --> 00:06:55,879
所以我们可以看一下在这个式子里头

199
00:06:56,399 --> 00:06:58,279
这个式子该怎么解释

200
00:06:58,399 --> 00:06:59,839
在这个四式子里头

201
00:06:59,839 --> 00:07:00,920
我们出现了一个加

202
00:07:00,920 --> 00:07:02,180
我们出现了三个负值

203
00:07:02,180 --> 00:07:02,660
对不对

204
00:07:02,660 --> 00:07:04,220
然后我们知道负值的优先级很低

205
00:07:04,220 --> 00:07:06,509
因此呢三加c会先算

206
00:07:06,509 --> 00:07:07,230
算完以后

207
00:07:07,230 --> 00:07:09,569
这个结果给b这个结果再给a这个结果

208
00:07:09,569 --> 00:07:11,279
最后再给result啊

209
00:07:11,279 --> 00:07:12,600
如果是这里

210
00:07:12,600 --> 00:07:14,970
你看我们就这就是我们前面说的

211
00:07:14,970 --> 00:07:16,529
大家不要去做的那种东西

212
00:07:16,529 --> 00:07:17,009
对不对

213
00:07:17,009 --> 00:07:18,240
嵌入式的复制

214
00:07:18,240 --> 00:07:20,928
我们做了result等于result乘二

215
00:07:20,928 --> 00:07:21,709
还要去乘六

216
00:07:21,709 --> 00:07:24,329
还要做上result等于三加result

217
00:07:24,329 --> 00:07:26,250
那这个式子的结果

218
00:07:26,250 --> 00:07:28,290
因为在这个式子里头啊

219
00:07:28,290 --> 00:07:30,540
在这个乘法两个乘法上面

220
00:07:30,540 --> 00:07:33,300
我们有两个对对照的做腐殖的动作对吧

221
00:07:33,300 --> 00:07:35,879
所以从左往右去算result

222
00:07:35,879 --> 00:07:38,750
还是从右往左算result就会不一样

223
00:07:38,750 --> 00:07:42,759
还有这个result是在进入这个表达式的时候

224
00:07:42,759 --> 00:07:43,959
result值是多少

225
00:07:43,959 --> 00:07:44,920
就确定是多少

226
00:07:44,920 --> 00:07:47,839
还是随着这个计算result的值会变化

227
00:07:47,839 --> 00:07:51,339
都存在可能都存在可能

228
00:07:51,339 --> 00:07:53,500
所以这样的式子不要去写出来

229
00:07:53,500 --> 00:07:55,930
这样的式子太复杂了

230
00:07:55,930 --> 00:07:58,209
它不利于阅读和理解

231
00:07:58,209 --> 00:08:00,569
而且可能造成读程序时候的误解

232
00:08:00,569 --> 00:08:02,189
所以要避免写出这种式子来

233
00:08:02,189 --> 00:08:03,870
这个表达式应该被拆开来

234
00:08:03,870 --> 00:08:05,759
拆成几个表达式

235
00:08:05,759 --> 00:08:09,250
用你心中想要他做的那个顺序

236
00:08:09,250 --> 00:08:11,050
去给它写出来

237
00:08:11,050 --> 00:08:13,569
明确的表达出来来做计算啊

238
00:08:13,569 --> 00:08:15,720
这种表达式这样写出来是不好的

239
00:08:16,279 --> 00:08:18,259
我们再来看一个计算的例子哈

240
00:08:18,259 --> 00:08:20,350
我们在银行存定期的时候呢

241
00:08:20,350 --> 00:08:22,269
我们可以选择到期后自动转存

242
00:08:22,269 --> 00:08:23,560
那么如果这样子的话呢

243
00:08:23,560 --> 00:08:25,389
你到期的利息会计入本金

244
00:08:25,389 --> 00:08:26,620
然后呢合并转存

245
00:08:26,620 --> 00:08:28,540
那假如说1年期的定期利率

246
00:08:28,540 --> 00:08:29,860
是3.3%啊

247
00:08:29,860 --> 00:08:32,590
那么自连续自动转成3年以后

248
00:08:32,590 --> 00:08:34,389
最初存入的x元

249
00:08:34,389 --> 00:08:37,379
定期会得到多少本息的余额呢

250
00:08:37,379 --> 00:08:39,779
我们想要写个程序来计算这个东西

251
00:08:39,779 --> 00:08:42,429
所以回顾一下我们刚才在说写程序的时候

252
00:08:42,429 --> 00:08:43,570
你要考虑两件事情

253
00:08:43,570 --> 00:08:43,870
对不对

254
00:08:43,870 --> 00:08:46,029
第一件事情是我有什么样的数据

255
00:08:46,029 --> 00:08:47,470
我这个数据要读进来

256
00:08:47,470 --> 00:08:48,549
我要保存在内存里头

257
00:08:48,549 --> 00:08:49,568
我要有变量

258
00:08:49,568 --> 00:08:51,489
那显然我们这里会要有x

259
00:08:51,489 --> 00:08:53,649
我要让用户输入一个x

260
00:08:53,649 --> 00:08:55,318
你最初存了多少钱

261
00:08:56,259 --> 00:08:58,830
然后我们要有计算计算是什么

262
00:08:58,830 --> 00:09:00,240
怎么去算这个复利

263
00:09:00,240 --> 00:09:01,620
那这个是数学上的知识

264
00:09:01,620 --> 00:09:02,740
对不对好

265
00:09:03,740 --> 00:09:04,929
那我们知道呢

266
00:09:04,929 --> 00:09:06,820
我们本息合计呢可以做成这个样子

267
00:09:06,820 --> 00:09:10,779
说是x乘以一加3.3%的三次方

268
00:09:11,159 --> 00:09:13,219
那我们程序要怎么去写呢

269
00:09:14,659 --> 00:09:16,269
我们可以写成这个样子

270
00:09:16,269 --> 00:09:17,860
我们有个x变量

271
00:09:17,860 --> 00:09:18,220
对不对

272
00:09:20,590 --> 00:09:22,000
读进来之后呢

273
00:09:22,000 --> 00:09:26,740
我们去做一加3.3%

274
00:09:26,740 --> 00:09:30,659
这个百分号在c里面已经用来做什么

275
00:09:30,659 --> 00:09:31,500
用来做表达

276
00:09:31,500 --> 00:09:32,429
说我要做取

277
00:09:32,429 --> 00:09:33,059
对不对

278
00:09:33,059 --> 00:09:35,100
所以呢你在这个表达式里头啊

279
00:09:35,100 --> 00:09:38,328
你如果再写上3.300分号

280
00:09:38,328 --> 00:09:40,360
肯定就不对了啊

281
00:09:40,360 --> 00:09:41,019
肯定就不对了

282
00:09:41,019 --> 00:09:42,940
所以呢这个时候我们必须把那个百分号

283
00:09:42,940 --> 00:09:45,039
3.3%呢展开啊

284
00:09:45,039 --> 00:09:46,919
变成0.033

285
00:09:46,919 --> 00:09:49,139
那么三次方怎么做呢

286
00:09:49,139 --> 00:09:53,059
我们也没有运算符来做幂次

287
00:09:53,059 --> 00:09:53,840
c语言的

288
00:09:53,840 --> 00:09:55,279
没有直接做幂次的运算符

289
00:09:55,279 --> 00:09:56,179
有的语言有

290
00:09:56,179 --> 00:09:57,139
但是c语言没有

291
00:09:57,139 --> 00:09:58,279
所以呢三次方

292
00:09:58,279 --> 00:10:00,440
我们就只能把这个东西乘三遍是吧

293
00:10:00,440 --> 00:10:02,659
1+零点乘以1+2x3遍

294
00:10:02,659 --> 00:10:03,200
真三遍

295
00:10:03,200 --> 00:10:04,940
最后再去乘以x我们就得到这么一个值

296
00:10:04,940 --> 00:10:08,100
当然这个结果一定是一个浮点数

297
00:10:08,100 --> 00:10:10,440
所以呢我们要用double来表达它

298
00:10:10,440 --> 00:10:14,110
最后我们把这个double给输出了啊

299
00:10:14,110 --> 00:10:16,450
有变量有算法

300
00:10:16,450 --> 00:10:18,190
最后我们可以得到一个结果

301
00:10:18,190 --> 00:10:22,090
那如果我们想要计算任意年

302
00:10:22,090 --> 00:10:23,559
现在我们是3年对吧

303
00:10:23,559 --> 00:10:25,659
想要算5年大概也还可以啊

304
00:10:25,659 --> 00:10:26,500
再再存三个

305
00:10:26,500 --> 00:10:28,059
而且大家都会用拷贝粘贴嘛

306
00:10:28,059 --> 00:10:29,529
所以这事也不算太复杂

307
00:10:29,529 --> 00:10:32,110
但如果我们想要让用户输入一个x

308
00:10:32,110 --> 00:10:33,399
还要输入一个n

309
00:10:33,399 --> 00:10:34,659
你要多少年

310
00:10:35,120 --> 00:10:37,639
那这个时候你需要去做一加

311
00:10:37,639 --> 00:10:39,950
0.033的n次方的计算

312
00:10:39,950 --> 00:10:43,059
这个计算我们现在还做不来啊

313
00:10:43,059 --> 00:10:45,700
我们等到后面学到循环的时候

314
00:10:45,700 --> 00:10:46,600
我们才能够知道

315
00:10:50,879 --> 00:10:51,919
怎么去把它给做出来

