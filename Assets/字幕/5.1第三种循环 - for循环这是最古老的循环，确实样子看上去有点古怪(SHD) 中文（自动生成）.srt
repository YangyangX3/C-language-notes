1
00:00:00,800 --> 00:00:03,359
那天呢这故事是这样

2
00:00:13,179 --> 00:00:14,419
不一会儿呢

3
00:00:15,060 --> 00:00:16,699
闺女来按门铃了

4
00:00:17,719 --> 00:00:20,379
打开门一看好嘛

5
00:00:21,219 --> 00:00:23,519
两个手各拎一大袋子

6
00:00:25,359 --> 00:00:26,579
仔细一数

7
00:00:26,579 --> 00:00:28,169
每袋12个

8
00:00:31,518 --> 00:00:32,198
为啥

9
00:00:35,439 --> 00:00:40,409
这个所以实际上n加感叹号

10
00:00:42,119 --> 00:00:45,179
阶乘就是从一开始1x2x3x4

11
00:00:45,179 --> 00:00:46,549
一乘到n位置

12
00:00:46,549 --> 00:00:48,380
因此四的阶乘就是什么

13
00:00:48,380 --> 00:00:52,039
1x2x3x4就是24

14
00:00:52,039 --> 00:00:54,539
如果我们现在要写一个程序

15
00:00:54,539 --> 00:00:56,159
让用户输入这个n

16
00:00:58,799 --> 00:01:00,918
我们要怎么来写这个程序

17
00:01:01,000 --> 00:01:02,140
我们反复的再讲

18
00:01:02,140 --> 00:01:03,219
我们想一个程序

19
00:01:03,219 --> 00:01:05,049
我们从问题到程序

20
00:01:05,049 --> 00:01:06,219
我们要想几件事情

21
00:01:06,219 --> 00:01:08,879
首先我们要想我们要有什么样的数据

22
00:01:09,659 --> 00:01:12,140
我们在这个运算过程当中会得到什么数

23
00:01:12,140 --> 00:01:12,260
据

24
00:01:12,260 --> 00:01:14,299
会产生什么数据作为计算

25
00:01:14,299 --> 00:01:16,519
我们可能还需要什么样的数据来辅助

26
00:01:16,519 --> 00:01:18,200
也就是在这个过程当中

27
00:01:18,200 --> 00:01:19,609
我们要有什么样的变量呢

28
00:01:19,609 --> 00:01:22,519
显然我们读用户的输入需要有一个变量

29
00:01:22,519 --> 00:01:23,599
我们要有一个变量去保存

30
00:01:23,599 --> 00:01:24,980
用户输进来的这个n

31
00:01:25,840 --> 00:01:27,959
然后算出来的那个结果

32
00:01:30,120 --> 00:01:31,640
我们把它叫做factor

33
00:01:32,040 --> 00:01:33,480
在这个计算的过程当中

34
00:01:33,480 --> 00:01:36,870
我们需要有个变量不断的从1d增到m

35
00:01:36,870 --> 00:01:37,739
先是一

36
00:01:37,739 --> 00:01:39,500
然后这个一要去乘二

37
00:01:39,519 --> 00:01:43,078
二要去1x2的结果要去乘三啊

38
00:01:43,078 --> 00:01:45,599
不断的要求和一个逐渐加1+1的

39
00:01:45,599 --> 00:01:47,069
那么一个数据相乘

40
00:01:47,069 --> 00:01:50,599
那么这个数呢我们可以是一个变量叫做i

41
00:01:50,900 --> 00:01:54,709
根据这样的这个三个变量的这个设计

42
00:01:54,709 --> 00:01:56,480
我们可以做出这样的代码来

43
00:01:56,560 --> 00:01:58,870
我们用我们学到的这个循环的知识

44
00:01:58,870 --> 00:01:59,920
显然这是一个循环

45
00:01:59,920 --> 00:02:03,370
因为我们要不断的从12341直变到你

46
00:02:03,370 --> 00:02:04,939
所以我们需要有个循环

47
00:02:05,280 --> 00:02:07,560
那么我们不妨先用while循环来做做

48
00:02:07,560 --> 00:02:08,430
看对吧

49
00:02:08,430 --> 00:02:09,300
我们发现说呢

50
00:02:09,300 --> 00:02:11,219
我们可以先让这个factor呢等于一

51
00:02:11,219 --> 00:02:12,490
这是一个初始值

52
00:02:12,490 --> 00:02:15,189
然后呢呃我们让这个i等于1i

53
00:02:15,189 --> 00:02:17,590
因为要从一开始乘乘乘乘到后面的是吧

54
00:02:17,590 --> 00:02:20,020
那么当i还是小于等于n的时候

55
00:02:20,020 --> 00:02:23,919
循环成立的条件是i还是小于等于n

56
00:02:23,919 --> 00:02:25,060
那么我们做的事情呢

57
00:02:25,060 --> 00:02:27,610
就是让factor等于fact乘以i

58
00:02:27,610 --> 00:02:29,280
然后i加加

59
00:02:30,378 --> 00:02:31,989
这么循环往复

60
00:02:31,989 --> 00:02:35,459
我们就可以把这个这个这个factor啊

61
00:02:38,158 --> 00:02:41,979
这个程序呢我们还可以有一个变化

62
00:02:42,379 --> 00:02:44,389
我们看到在我们现在这个程序里面

63
00:02:44,389 --> 00:02:46,939
我们有一个i这个变量

64
00:02:46,939 --> 00:02:52,400
这是循环当中呢要用来判断它的条件

65
00:02:52,400 --> 00:02:54,500
我们先做了一个初始化的动作

66
00:02:54,500 --> 00:02:55,459
让i等于一

67
00:02:55,459 --> 00:02:58,158
然后呢判断这个i是不是小于等于n

68
00:02:58,158 --> 00:02:59,239
如果小于等于n的话

69
00:02:59,239 --> 00:03:00,468
我们要进入循环

70
00:03:00,468 --> 00:03:01,579
在循环的每一步

71
00:03:01,579 --> 00:03:02,979
我们要让i加加

72
00:03:03,019 --> 00:03:05,269
如果我们写出了这样一个循环

73
00:03:05,269 --> 00:03:07,699
c语言有另外一种结构

74
00:03:07,699 --> 00:03:10,769
另外一种语句来表达这种循环

75
00:03:10,769 --> 00:03:13,020
就是这样的一条for语句

76
00:03:13,399 --> 00:03:15,109
在这条for语句当中呢

77
00:03:15,109 --> 00:03:17,628
我们看到在for的后面有一个圆括号

78
00:03:17,628 --> 00:03:19,218
然后是一个大括号

79
00:03:19,218 --> 00:03:22,900
所以呢大致的样子和while很像是吧

80
00:03:22,900 --> 00:03:23,740
也是一个关键字

81
00:03:23,740 --> 00:03:24,219
一个圆口

82
00:03:24,219 --> 00:03:25,259
一个大括号

83
00:03:25,359 --> 00:03:27,459
但是呢你仔细看这个圆括号呢

84
00:03:27,459 --> 00:03:30,150
比while的这个圆框要复杂很多

85
00:03:30,150 --> 00:03:31,530
在这个圆括号里面

86
00:03:31,530 --> 00:03:33,659
我们用分号隔开

87
00:03:40,438 --> 00:03:41,639
如果没有学过编程

88
00:03:41,639 --> 00:03:44,030
看到这个for循环的是非常迷茫的

89
00:03:44,030 --> 00:03:45,349
因为while循环

90
00:03:45,349 --> 00:03:48,199
对于呃这个英语为母语的人来说

91
00:03:48,199 --> 00:03:50,240
它可以自己直接就把它念出来

92
00:03:50,240 --> 00:03:52,909
当什么什么的时候好做下面的事情

93
00:03:52,909 --> 00:03:54,289
所以他很容易去接受

94
00:03:54,289 --> 00:03:56,300
而for循环这个写出来呢

95
00:03:56,639 --> 00:03:58,680
这和任何人的母语都没有关系

96
00:04:00,270 --> 00:04:01,319
没有经过训练

97
00:04:07,599 --> 00:04:10,620
第二个表达式是循环继续的条件

98
00:04:10,620 --> 00:04:11,610
也就是循环条件

99
00:04:13,740 --> 00:04:15,719
每一轮要做的事情

100
00:04:16,259 --> 00:04:18,600
我们来给bug一下这个程序

101
00:04:18,600 --> 00:04:20,149
看看它是怎么运行的

102
00:04:20,149 --> 00:04:23,329
现在呢我们在这个程序的这个

103
00:04:23,329 --> 00:04:25,548
for循环的前面加一个断点啊

104
00:04:25,548 --> 00:04:27,168
这样程序在这里会停下来

105
00:04:27,168 --> 00:04:28,959
现在我们来调试运行它

106
00:04:30,740 --> 00:04:32,560
我们呢就来算四的阶乘

107
00:04:32,560 --> 00:04:33,560
我们输入四

108
00:04:34,800 --> 00:04:36,259
现在我们程序停在这儿

109
00:04:36,259 --> 00:04:38,569
我们现在i的这个只能是一啊

110
00:04:38,569 --> 00:04:40,600
那么我们来走下一步

111
00:04:41,779 --> 00:04:43,480
下一步呢我们就进了循环里头了

112
00:04:43,480 --> 00:04:44,800
因为这时候他判断说

113
00:04:44,800 --> 00:04:46,360
i和n的关系是什么呢

114
00:04:46,360 --> 00:04:48,819
因为我们的n呢是四

115
00:04:49,379 --> 00:04:53,379
所以呢i和四的关系是i小于等于n

116
00:04:53,379 --> 00:04:53,920
这是成立的

117
00:04:53,920 --> 00:04:54,639
所以我们就进来了

118
00:04:54,639 --> 00:04:55,120
进来以后呢

119
00:04:55,120 --> 00:04:58,000
我们就做了fact乘等于i fe现在是一

120
00:04:58,000 --> 00:05:01,250
那么下一步乘等于i以后1x1还是一

121
00:05:01,250 --> 00:05:05,180
然后我们就回到了for的那个地方

122
00:05:05,399 --> 00:05:08,279
所以你看这个时候i还是一

123
00:05:08,279 --> 00:05:10,379
i还没有做过加那件事情啊

124
00:05:10,379 --> 00:05:14,389
然后我在下一步的时候进了for循环

125
00:05:14,389 --> 00:05:15,500
又进了for循环

126
00:05:15,500 --> 00:05:18,839
但是呢i的值已经变成二了

127
00:05:19,360 --> 00:05:21,339
i的值已经变成二了啊

128
00:05:21,339 --> 00:05:24,519
那么当然它其实呢还做了一次

129
00:05:24,519 --> 00:05:26,000
i小于等于n的判断

130
00:05:26,000 --> 00:05:28,009
他发现说i是小于等于n的

131
00:05:28,009 --> 00:05:30,110
于是呢又进了这个循环

132
00:05:30,110 --> 00:05:32,360
那么fact再来做次计算

133
00:05:34,060 --> 00:05:37,540
fact变成了二啊

134
00:05:37,540 --> 00:05:38,319
fiat变成了二

135
00:05:38,319 --> 00:05:39,220
i还是二

136
00:05:39,220 --> 00:05:40,329
再回到four

137
00:05:40,329 --> 00:05:42,579
再下来i又加了一

138
00:05:42,579 --> 00:05:43,600
变成三了

139
00:05:43,839 --> 00:05:46,959
那么再做一次factor乘等于三

140
00:05:46,959 --> 00:05:48,279
factor就变成六了

141
00:05:48,279 --> 00:05:49,750
又回到了for循环那里

142
00:05:49,750 --> 00:05:52,100
这个时候再做一次加法

143
00:05:52,100 --> 00:05:53,180
i等于四

144
00:05:53,180 --> 00:05:54,439
四仍然小于等于四

145
00:05:54,439 --> 00:05:55,639
所以我们还是进来了

146
00:05:55,639 --> 00:05:57,529
做了一次factor乘等于i

147
00:05:57,529 --> 00:05:59,480
下一步我们回到了for那里

148
00:05:59,480 --> 00:06:00,740
现在i等于四

149
00:06:00,740 --> 00:06:02,689
我们要去做一次i加加

150
00:06:02,689 --> 00:06:04,550
就会使得i等于五

151
00:06:04,550 --> 00:06:05,899
而这个i等于五

152
00:06:05,899 --> 00:06:08,750
使得它不满足i小于等于n的条件

153
00:06:08,750 --> 00:06:12,029
于是我们就离开了for到了佛下一句了

154
00:06:12,029 --> 00:06:13,500
所以我们的for循环呢

155
00:06:13,500 --> 00:06:15,329
呃像一个计数器循环啊

156
00:06:15,329 --> 00:06:15,930
像个计数器

157
00:06:15,930 --> 00:06:17,040
我们设定一个计数器

158
00:06:17,040 --> 00:06:18,509
像这里的i就是个计数器

159
00:06:18,509 --> 00:06:19,500
计数器的变量

160
00:06:19,500 --> 00:06:21,800
我们初始化它i等于零

161
00:06:21,800 --> 00:06:22,699
就是在做初始化

162
00:06:22,699 --> 00:06:23,420
我们初始化它

163
00:06:23,420 --> 00:06:26,300
然后呢在计数器到达某个值的之前

164
00:06:26,300 --> 00:06:28,720
我们要重复执行这个循环体

165
00:06:28,720 --> 00:06:30,730
而每执行一轮循环呢

166
00:06:30,730 --> 00:06:33,220
我们都会以一定的步骤进行调整

167
00:06:33,220 --> 00:06:35,059
比如说加一或者减一

168
00:06:35,059 --> 00:06:36,259
也可以是乘二

169
00:06:36,259 --> 00:06:38,779
做任何的调整都可以

170
00:06:38,978 --> 00:06:41,079
这是你设计的表达式

171
00:06:41,079 --> 00:06:42,819
不是一定要加一或者减一啊

172
00:06:42,819 --> 00:06:44,168
都可以做其他的运算

173
00:06:44,168 --> 00:06:45,668
那么这个for呢

174
00:06:45,668 --> 00:06:49,829
我们可以把它念作是对于这样子的话呢

175
00:06:49,829 --> 00:06:51,060
这样写出来的一个循环

176
00:06:51,060 --> 00:06:52,560
我们就可以把它读成是说

177
00:06:52,560 --> 00:06:55,189
对于一开始呢count等于十

178
00:06:55,189 --> 00:06:56,870
当count等于零的时候呢

179
00:06:56,870 --> 00:06:58,600
我们要重复做循环体

180
00:06:58,600 --> 00:06:59,860
那每一轮循环呢

181
00:06:59,860 --> 00:07:01,600
在做完循环体内的语句以后呢

182
00:07:01,600 --> 00:07:02,920
我们要让count减减

183
00:07:02,920 --> 00:07:07,360
你看这就是一个递减的循环啊

184
00:07:07,360 --> 00:07:09,639
一开始我们的count等于一个比较大的值啊

185
00:07:09,639 --> 00:07:12,170
然后我们判断它的循环维持的条件

186
00:07:12,170 --> 00:07:14,060
是要他大于一个呃零

187
00:07:14,060 --> 00:07:16,310
然后每一轮呢看到减减啊

188
00:07:16,310 --> 00:07:18,420
这也是一种很常见的循环

189
00:07:18,500 --> 00:07:19,939
当然刚才前面这个程序里面

190
00:07:19,939 --> 00:07:20,779
我们还有个小套路

191
00:07:20,779 --> 00:07:24,360
就是因为我们的这个程序呢是要去算

192
00:07:24,360 --> 00:07:26,879
这个factor是求积啊

193
00:07:26,879 --> 00:07:28,589
每一轮要不断的去求机

194
00:07:28,589 --> 00:07:29,819
所以在求g的时候呢

195
00:07:29,819 --> 00:07:32,829
我们需要让它的初始值是这个factor的

196
00:07:32,829 --> 00:07:33,939
初始值是一

197
00:07:33,939 --> 00:07:34,990
而不能是零

198
00:07:34,990 --> 00:07:36,009
如果是零的话

199
00:07:36,009 --> 00:07:39,129
那么乘起来永远都是零了啊

200
00:07:39,129 --> 00:07:41,199
第一次乘算是零以后永远乘出来是零

201
00:07:41,199 --> 00:07:44,060
所以如果我们是做求和的程序

202
00:07:44,060 --> 00:07:46,819
比如说我们要去算累加

203
00:07:46,819 --> 00:07:47,899
那么这个时候呢

204
00:07:47,899 --> 00:07:50,120
记录结果的变量的初始化应该是零

205
00:07:50,120 --> 00:07:52,310
但是如果做球机的变量的时候呢

206
00:07:52,310 --> 00:07:54,819
这个记录结果的变量初始化应该是一

207
00:07:54,819 --> 00:07:57,579
那么我们的这个循环控制变量i呢

208
00:07:57,579 --> 00:07:59,470
它只在循环里面被使用了

209
00:07:59,470 --> 00:08:00,879
在循环外面它是没用的

210
00:08:00,879 --> 00:08:01,120
对不对

211
00:08:01,120 --> 00:08:04,379
我们只是在这个循环里面去让factor就乘

212
00:08:04,379 --> 00:08:06,110
等于i那这种情况下呢

213
00:08:06,110 --> 00:08:07,939
我们就可以把这个变量i呢

214
00:08:07,939 --> 00:08:10,730
它的定义从for循环的外面

215
00:08:10,730 --> 00:08:13,660
移到for循环的里面去写成这个样子

216
00:08:13,660 --> 00:08:16,180
说我们在初始化的表达式的时候

217
00:08:16,180 --> 00:08:17,920
不仅仅是去初始化这个i的值

218
00:08:17,920 --> 00:08:21,569
并且我们定义说i是在这里的一个变量

219
00:08:21,569 --> 00:08:23,040
我们来试一下这件事情

220
00:08:23,040 --> 00:08:26,269
也就是说我们现在呢是这样写int i

221
00:08:26,269 --> 00:08:29,120
然后外面的字句英台呢是不存在的

222
00:08:30,980 --> 00:08:33,309
我们来看一下这个行不行

223
00:08:33,309 --> 00:08:35,750
编译结果呢

224
00:08:35,750 --> 00:08:38,318
一编译他给了这样一个错误信息

225
00:08:40,360 --> 00:08:43,210
他说在这个函数里头啊

226
00:08:43,210 --> 00:08:45,490
这个for循环的初始化的声明呢

227
00:08:45,490 --> 00:08:47,409
只能在c99 模式底下用

228
00:08:47,409 --> 00:08:50,110
所以呢你需要在编译代码的时候

229
00:08:50,110 --> 00:08:52,779
加上一个特殊的定义选项

230
00:08:52,779 --> 00:08:54,639
叫杠sd等于c99 

231
00:08:55,960 --> 00:08:59,200
c99 的标准虽然已经很多年了

232
00:08:59,200 --> 00:09:03,899
但是呢有一些用法在不同的编译器里面

233
00:09:04,200 --> 00:09:06,339
它的接受程度是不一样的

234
00:09:06,340 --> 00:09:08,860
所以呢我们前面用过一些c9 的东西

235
00:09:08,860 --> 00:09:10,539
比如说c o n s t const

236
00:09:10,539 --> 00:09:12,370
用来表达一个常量的

237
00:09:12,370 --> 00:09:13,559
直接可以编译

238
00:09:13,559 --> 00:09:17,399
可是当我们想要把这个变量的定义

239
00:09:17,399 --> 00:09:18,960
放到for循环里头去的时候呢

240
00:09:18,960 --> 00:09:21,899
仍然需要给我们的编译器一个特殊的选项

241
00:09:22,559 --> 00:09:24,899
那么这个特殊选项在d e v c加加里面

242
00:09:24,899 --> 00:09:25,919
怎么加进去呢

243
00:09:25,919 --> 00:09:27,960
我们在讨论区里面来讨论这件事情

244
00:09:27,960 --> 00:09:30,179
所以这种写法虽然看上去很美妙

245
00:09:30,179 --> 00:09:32,100
但是呢只有c9 能够用

246
00:09:32,100 --> 00:09:35,500
而且呃即使是宣称支持c9 的编译器

247
00:09:35,500 --> 00:09:37,710
也需要加特殊的选项才能去使用它

248
00:09:37,710 --> 00:09:39,029
我们可以再试一下

249
00:09:39,029 --> 00:09:39,690
呃

250
00:09:39,690 --> 00:09:41,698
我们知道说1x1还是一

251
00:09:41,740 --> 00:09:44,080
所以也许我们这个程序的循环呢

252
00:09:44,080 --> 00:09:45,370
它不需要从一开始

253
00:09:45,370 --> 00:09:46,389
是不是这样子

254
00:09:46,389 --> 00:09:48,610
那么从多少开始是合适的呢

255
00:09:48,610 --> 00:09:52,809
比如说对于我们现在这个代码i等于一

256
00:09:52,809 --> 00:09:56,110
意味着循环的第一轮i是一

257
00:09:56,110 --> 00:10:01,159
那么在第一轮做的事情是factor乘等于一

258
00:10:01,159 --> 00:10:03,220
也就是factor等于1x1

259
00:10:03,220 --> 00:10:06,129
这完全是一个没有任何意义的循环

260
00:10:06,129 --> 00:10:08,259
这一轮循环的这一轮是没有任何意义的

261
00:10:08,259 --> 00:10:10,779
所以我们是不是可以把它改成二呢

262
00:10:11,639 --> 00:10:13,970
我一滴得的那个一不用做

263
00:10:13,970 --> 00:10:15,440
我直接一上来就做

264
00:10:15,440 --> 00:10:17,629
factor等于1x2

265
00:10:17,629 --> 00:10:18,529
然后得到了一个二

266
00:10:18,529 --> 00:10:21,080
然后下一轮说factor等于2x3

267
00:10:21,080 --> 00:10:22,198
得到了一个六

268
00:10:22,740 --> 00:10:24,179
是不是可以这样

269
00:10:24,179 --> 00:10:26,669
那么如果这样子做的话

270
00:10:26,669 --> 00:10:32,919
这个程序当我输入v2 的时候

271
00:10:33,320 --> 00:10:34,399
没有任何问题

272
00:10:34,399 --> 00:10:36,080
因为i小于等于二

273
00:10:36,080 --> 00:10:36,769
对不对

274
00:10:36,769 --> 00:10:38,809
当我n输入为一的时候

275
00:10:38,809 --> 00:10:39,799
有没有问题

276
00:10:39,799 --> 00:10:41,330
如果是一

277
00:10:41,330 --> 00:10:43,879
就意味着我循环到了这个地方

278
00:10:43,879 --> 00:10:45,080
到了这个地方的时候

279
00:10:45,080 --> 00:10:46,730
首先我们做的事情是i等于二

280
00:10:46,730 --> 00:10:47,750
初始化为二

281
00:10:47,750 --> 00:10:49,759
当然factor是一个一的值

282
00:10:49,759 --> 00:10:53,259
然后我们要去判断i是否小于等于n

283
00:10:54,799 --> 00:10:59,149
因此很重要的一件事情就是我们的for循环

284
00:10:59,149 --> 00:11:02,840
它的这个条件判断是在循环开始的时候

285
00:11:02,840 --> 00:11:04,460
做的跟while循环是一样的

286
00:11:04,460 --> 00:11:06,590
所以如果你i等于二

287
00:11:06,590 --> 00:11:08,340
而这时候n等于一

288
00:11:08,340 --> 00:11:09,419
i小于等于n

289
00:11:09,419 --> 00:11:11,009
n的条件是不满足的

290
00:11:11,009 --> 00:11:12,929
所以我们就要离开这个循环

291
00:11:12,929 --> 00:11:14,698
因此这个循环就一次都没做

292
00:11:15,320 --> 00:11:17,740
还好一次都没做的时候

293
00:11:17,740 --> 00:11:19,419
factor的值是一

294
00:11:19,419 --> 00:11:23,820
刚刚好和我们的一的阶乘是一

295
00:11:23,820 --> 00:11:26,460
这个这个结论是满足的

296
00:11:26,460 --> 00:11:29,059
所以我把它改成i等于二

297
00:11:29,059 --> 00:11:30,049
i从二开始

298
00:11:30,049 --> 00:11:31,610
我可以省去一轮的循环

299
00:11:36,019 --> 00:11:38,970
还有一个有意思的可以尝试的东西

300
00:11:41,519 --> 00:11:43,769
我们是不是还可以从n乘到一来计算

301
00:11:43,769 --> 00:11:44,479
对不对

302
00:11:44,860 --> 00:11:49,000
我们是不是可以算先算先让factor等于n

303
00:11:49,000 --> 00:11:51,009
然后算n乘以n减一

304
00:11:51,009 --> 00:11:52,899
然后这个结果再去乘以n减二

305
00:11:52,899 --> 00:11:54,419
一直乘到二为止

306
00:11:55,159 --> 00:11:56,750
是不是这样子啊

307
00:11:56,750 --> 00:11:59,059
这个时候我们把代码可以改成什么样子呢

308
00:11:59,059 --> 00:12:01,559
这个时候呢我们可以这样来改这个代码

309
00:12:03,860 --> 00:12:05,980
我们换一个方式来写我们的for

310
00:12:05,980 --> 00:12:07,840
说我们的for呢是这样说

311
00:12:07,840 --> 00:12:10,029
这个i呢等于n从n开始

312
00:12:10,029 --> 00:12:13,799
然后呢i呢大于等于二

313
00:12:14,159 --> 00:12:15,419
当然大于等于二

314
00:12:15,419 --> 00:12:16,860
也就相当于大于一啊

315
00:12:16,860 --> 00:12:19,019
这这这两种写法都可以取决于个人喜好

316
00:12:19,019 --> 00:12:21,179
i减减i每次是减一的

317
00:12:21,179 --> 00:12:22,409
而不是每次是加一的

318
00:12:22,409 --> 00:12:25,698
那么factor呢每次还是乘等于i

319
00:12:25,899 --> 00:12:29,100
因此循环的第一轮fact原来是一的

320
00:12:29,100 --> 00:12:31,259
那么就变成是一乘以n循环的

321
00:12:31,259 --> 00:12:33,269
第二轮呢就是n乘以n的-1

322
00:12:33,269 --> 00:12:35,580
循环的第三轮就是n乘以n-1的结果

323
00:12:35,580 --> 00:12:37,919
去乘以n减二啊

324
00:12:37,919 --> 00:12:42,000
所以这样子一个倒过来的循环就可以来算

325
00:12:42,000 --> 00:12:43,529
也可以来算出factor

326
00:12:43,529 --> 00:12:47,879
那么其实呢如果我们这么写这个循环的话

327
00:12:47,879 --> 00:12:49,279
我们就发现说

328
00:12:49,279 --> 00:12:51,649
我似乎还可以做另外一个改动

329
00:12:51,649 --> 00:12:54,940
既然i是从n到二的

330
00:12:54,940 --> 00:12:56,830
那我可不可以这样

331
00:12:56,830 --> 00:12:59,409
我不要这个i这个变量了

332
00:12:59,409 --> 00:13:01,879
我直接用n这个变量

333
00:13:04,700 --> 00:13:10,480
我直接让n从自己减到二为止

334
00:13:10,480 --> 00:13:13,399
我不需要另外再有一个叫做i的变量

335
00:13:14,919 --> 00:13:18,799
当然这个时候我们在输出结果的时候

336
00:13:18,799 --> 00:13:19,820
不能再用这个了

337
00:13:19,820 --> 00:13:22,309
这和我们之前讲过的一个小技巧有关

338
00:13:22,309 --> 00:13:23,750
我们可以用另外一个变量

339
00:13:23,750 --> 00:13:26,269
比如说就算叫做and i好了

340
00:13:26,269 --> 00:13:28,669
我们用它来暂存一下那个n

341
00:13:28,669 --> 00:13:31,740
然后说来输出这个

342
00:13:33,860 --> 00:13:37,120
也就是说我可以不要那个i那个变量来替

343
00:13:37,120 --> 00:13:38,769
我们从n走到二

344
00:13:38,769 --> 00:13:42,799
我们让自己逐渐的把自己减小减到二为止

345
00:13:42,940 --> 00:13:44,740
可以省掉那个i

346
00:13:44,740 --> 00:13:48,019
当然前提是我不要做这样的输出是吧

347
00:13:48,580 --> 00:13:50,519
好如果我在这儿

348
00:13:50,519 --> 00:13:52,080
既然出现了n等于n

349
00:13:52,080 --> 00:13:54,318
其实我还可以把这句话给省了

350
00:13:54,480 --> 00:13:56,460
n等于n就没做任何事情嘛

351
00:13:56,460 --> 00:13:58,049
那我干脆就把它拿掉

352
00:13:58,049 --> 00:14:00,710
对于我for循环来说

