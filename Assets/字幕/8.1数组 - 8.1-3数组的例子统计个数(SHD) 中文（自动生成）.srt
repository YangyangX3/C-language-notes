1
00:00:05,120 --> 00:00:07,160
看过了数组的理论之后啊

2
00:00:07,160 --> 00:00:08,820
我们再来看一个应用题

3
00:00:08,939 --> 00:00:10,619
我们现在要写一个程序

4
00:00:10,619 --> 00:00:14,410
要输入数量不确定的0~9范围内的整数

5
00:00:14,410 --> 00:00:16,210
然后呢我们不去求平均

6
00:00:16,210 --> 00:00:17,050
不去求和

7
00:00:17,050 --> 00:00:20,859
我们来统计每一种数字出现的次数

8
00:00:21,199 --> 00:00:24,230
当然和前面要我们输入-1表示结束

9
00:00:24,230 --> 00:00:26,750
那么这个程序要不要记录

10
00:00:26,750 --> 00:00:28,480
输入进来的每一个数呢

11
00:00:28,859 --> 00:00:30,539
第一次求平均的时候不需要

12
00:00:30,539 --> 00:00:32,060
因为我们只要有平均就可以了

13
00:00:32,060 --> 00:00:33,560
第二次求平均的时候需要用

14
00:00:33,560 --> 00:00:36,380
我们要输出所有大于平均的那些数字

15
00:00:36,380 --> 00:00:39,999
现在我要统计每一种数字出现的次数

16
00:00:39,999 --> 00:00:42,378
我要不要把每个数字都记录下来呢

17
00:00:42,659 --> 00:00:43,829
不需要

18
00:00:43,829 --> 00:00:45,119
那我要记录什么呢

19
00:00:45,119 --> 00:00:47,640
我要记录的是每一种数字

20
00:00:47,640 --> 00:00:49,659
曾经出现过多少次

21
00:00:50,759 --> 00:00:52,880
0~91共十个数字

22
00:00:52,880 --> 00:00:54,838
所以我有十个变量就可以了

23
00:00:54,859 --> 00:00:56,179
十个变量太复杂

24
00:00:56,179 --> 00:00:57,469
我可不可以用数组

25
00:00:57,469 --> 00:00:59,329
我们来看这程序要怎么写

26
00:00:59,329 --> 00:01:00,920
显然我们需要有那个x

27
00:01:00,920 --> 00:01:03,039
我们要去读入那个x

28
00:01:03,179 --> 00:01:07,359
然后呢当这个x呢不等于-1的时候呢

29
00:01:07,359 --> 00:01:08,890
啊我们要去做我们的事情

30
00:01:08,890 --> 00:01:10,599
但循环的结束的时候

31
00:01:10,599 --> 00:01:10,900
别忘了

32
00:01:10,900 --> 00:01:14,219
我们还要继续的把下一个s给读进来

33
00:01:14,219 --> 00:01:16,079
那做的事情是什么呢

34
00:01:16,859 --> 00:01:20,359
如果说这个x大于等于零

35
00:01:20,359 --> 00:01:23,409
并且x小于等于九

36
00:01:23,409 --> 00:01:24,700
在有效范围内

37
00:01:24,700 --> 00:01:27,579
那我们要让那个计数器去加加

38
00:01:27,579 --> 00:01:29,200
我们要让一个什么东西去加加

39
00:01:29,200 --> 00:01:29,760
对不对

40
00:01:29,760 --> 00:01:31,109
那个计数器是什么呢

41
00:01:31,109 --> 00:01:34,219
我们不妨定义说我们有一个数组叫做count

42
00:01:34,239 --> 00:01:36,010
他呢总共有十个

43
00:01:36,010 --> 00:01:40,578
所以count 0就代表零这个数字出现了多少次

44
00:01:40,578 --> 00:01:43,368
抗的九就代表九那个数字出现了多少次

45
00:01:43,368 --> 00:01:45,640
所以在读到了x之后

46
00:01:45,640 --> 00:01:49,780
我们要做的事情就变成是说count那个x加加

47
00:01:51,700 --> 00:01:52,530
对不对

48
00:01:52,530 --> 00:01:53,189
好

49
00:01:53,189 --> 00:01:54,989
这些都做完之后

50
00:01:54,989 --> 00:01:59,790
我们结束的时候要让要去遍历这个数组

51
00:01:59,790 --> 00:02:01,799
说i小于十

52
00:02:01,799 --> 00:02:04,109
i加加的这些数字呢

53
00:02:04,109 --> 00:02:05,760
好我们要输出

54
00:02:05,760 --> 00:02:10,680
说我们这个数字出现了多少次

55
00:02:10,680 --> 00:02:15,159
也就是i这个数字出现了count i

56
00:02:16,938 --> 00:02:19,179
当然既然我们这儿有一个数组

57
00:02:19,179 --> 00:02:21,699
我们就应该在恰当的地方去做初始化

58
00:02:21,699 --> 00:02:23,829
所以我们需要说i等于零

59
00:02:23,829 --> 00:02:25,079
i小于十

60
00:02:25,079 --> 00:02:26,308
i加加

61
00:02:26,308 --> 00:02:30,539
然后呢我们让这个count的i等于零

62
00:02:31,699 --> 00:02:33,099
还有我们用到了i

63
00:02:33,099 --> 00:02:34,300
我们得把i给定义出来

64
00:02:34,300 --> 00:02:34,780
对不对

65
00:02:34,780 --> 00:02:39,549
好这样的一个代码就可以实现我们的要求

66
00:02:39,549 --> 00:02:41,438
我们读到了一个数

67
00:02:41,438 --> 00:02:43,139
然后呢根据这个数

68
00:02:43,500 --> 00:02:45,780
用这个读进来的数作为下标

69
00:02:45,780 --> 00:02:46,979
作为数组的下标

70
00:02:46,979 --> 00:02:50,039
来让对应的那个计数器加一

71
00:02:51,218 --> 00:02:52,318
当然在这个地方呢

72
00:02:52,318 --> 00:02:53,758
我们还看到我们这个程序里面啊

73
00:02:53,758 --> 00:02:55,229
到处出现了这个十

74
00:02:55,229 --> 00:02:56,998
我们出现了三次十

75
00:02:56,998 --> 00:02:57,838
在这儿有10

76
00:02:57,838 --> 00:02:58,498
这有一个十

77
00:02:58,498 --> 00:03:00,430
这有一个十这种数字

78
00:03:00,430 --> 00:03:02,469
我们叫做magic number

79
00:03:02,469 --> 00:03:04,419
像魔术一样的数

80
00:03:05,639 --> 00:03:07,400
别人很难一下子想明白

81
00:03:07,400 --> 00:03:08,360
你这些时

82
00:03:08,360 --> 00:03:10,400
首先他们互相之间有没有关系

83
00:03:10,400 --> 00:03:12,259
他们是不是表达了相同的意思

84
00:03:12,259 --> 00:03:13,400
对吧好

85
00:03:13,899 --> 00:03:15,519
我们比较好的做法是

86
00:03:15,519 --> 00:03:16,778
我们之前其实提到过

87
00:03:16,778 --> 00:03:18,758
我们可以有一个const int

88
00:03:18,758 --> 00:03:20,709
比如说我们把它叫做number等于十

89
00:03:20,709 --> 00:03:25,229
然后我们就可以把下面所有的十

90
00:03:25,229 --> 00:03:26,838
都改成这个number

91
00:03:26,838 --> 00:03:29,959
这就是我们做出来的这个统计数的

92
00:03:29,959 --> 00:03:31,120
个数的程序

93
00:03:31,120 --> 00:03:33,099
我们看到这个程序是非常经典的

94
00:03:33,099 --> 00:03:34,120
用数组的程序

95
00:03:34,120 --> 00:03:37,270
首先我们要用一个const的变量

96
00:03:37,270 --> 00:03:39,259
来决定我们数组的大小

97
00:03:39,639 --> 00:03:40,900
这其实还是一个编译

98
00:03:40,900 --> 00:03:42,039
时刻确定值的常量

99
00:03:42,039 --> 00:03:42,550
对不对

100
00:03:42,550 --> 00:03:43,780
但是因为用了cost

101
00:03:43,780 --> 00:03:45,459
所以只有c9 以后才能用

102
00:03:45,459 --> 00:03:47,649
然后我们要去定义一个数组

103
00:03:47,649 --> 00:03:49,299
我们说我们要有一个count数组

104
00:03:49,299 --> 00:03:50,729
它的大小是number gi

105
00:03:50,729 --> 00:03:52,949
接着呢我们必须去初始化那个数组

106
00:03:52,949 --> 00:03:56,558
因为数组变量和本地变量一样

107
00:03:56,558 --> 00:03:58,508
我们讲函数的时候讲过本地变量

108
00:03:58,508 --> 00:04:01,800
本地变量不能够自动的得到默认的初始值

109
00:04:01,800 --> 00:04:03,240
所以安全的做法

110
00:04:03,240 --> 00:04:04,560
在第一次使用它之前

111
00:04:04,560 --> 00:04:05,550
你必须要促使它

112
00:04:05,550 --> 00:04:06,599
对于数组也是这样

113
00:04:06,599 --> 00:04:09,800
我们必须要主动的去初始化它

114
00:04:09,800 --> 00:04:12,500
那初始化数组当中的每一个元素比较麻烦

115
00:04:12,500 --> 00:04:14,689
你得写循环遍历数组

116
00:04:14,689 --> 00:04:16,500
去给每一个元素赋值

117
00:04:17,439 --> 00:04:19,468
然后在代码当中

118
00:04:19,468 --> 00:04:21,269
数组要参与运算

119
00:04:21,269 --> 00:04:23,728
参与运算的方式当然有很多种

120
00:04:23,728 --> 00:04:24,899
求平均数的时候

121
00:04:24,899 --> 00:04:26,560
我们要把数记录下来

122
00:04:27,300 --> 00:04:28,639
在做技术的时候

123
00:04:28,639 --> 00:04:31,279
我们要用独到的数做下标

124
00:04:31,279 --> 00:04:34,519
来让某一个计数器加一

125
00:04:34,519 --> 00:04:38,149
最后我们还要遍历这个数组做输出

126
00:04:38,149 --> 00:04:39,139
通常来说

127
00:04:39,139 --> 00:04:41,819
用到数组的程序都需要这么一些环节

