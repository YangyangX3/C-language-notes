1
00:00:04,500 --> 00:00:09,720
你看我们啊总是在做这种分而治之的事情

2
00:00:10,439 --> 00:00:14,140
一开始我们写的所有的程序就在命里头

3
00:00:14,638 --> 00:00:15,778
然后写着写着呢

4
00:00:15,778 --> 00:00:18,480
我们觉得哎呀这个命啊写的太大了

5
00:00:19,199 --> 00:00:22,739
于是我们觉得呢应该分出一些函数来

6
00:00:24,719 --> 00:00:27,079
所以我们有了函数在main里面

7
00:00:27,079 --> 00:00:28,899
我们要去调用哪些函数

8
00:00:29,500 --> 00:00:32,549
相应的一些功能剥离出来

9
00:00:32,549 --> 00:00:34,679
放在一个的函数里头

10
00:00:37,240 --> 00:00:38,399
后来我们会发现

11
00:00:38,399 --> 00:00:43,119
说你这一个点c文件里头函数太多了

12
00:00:43,119 --> 00:00:44,140
也不好

13
00:00:44,140 --> 00:00:46,279
整个点c文件很大

14
00:00:46,939 --> 00:00:48,670
从第一行到最后一行

15
00:00:48,670 --> 00:00:51,880
你要拿鼠标那个滚轮歘歘歘歘歘

16
00:00:51,880 --> 00:00:55,439
拼命的转才能看到最后是什么样子的

17
00:00:55,759 --> 00:00:58,969
于是呢我们又开始要做一件事情

18
00:00:58,969 --> 00:01:03,359
把函数从一个点c文件里头拿出来

19
00:01:03,359 --> 00:01:05,849
放到很多个典型文件里头去

20
00:01:07,709 --> 00:01:11,900
可是我们把函数从一个点c拿出来

21
00:01:11,900 --> 00:01:13,310
放到多个点c以后

22
00:01:13,310 --> 00:01:17,719
怎么能够把它们再组合成一个有效的程序

23
00:01:17,879 --> 00:01:20,819
是不是拿出来就可以了呢

24
00:01:20,819 --> 00:01:22,299
有没有别的事情要做

25
00:01:23,439 --> 00:01:24,920
我们先来试试看

26
00:01:25,120 --> 00:01:27,939
假如呢我们是这样来开始做这个事情啊

27
00:01:27,939 --> 00:01:31,480
我们先呢是去新建了一个源代码对吧

28
00:01:31,480 --> 00:01:33,099
我们之前都是这么做的啊

29
00:01:33,099 --> 00:01:34,159
然后呢

30
00:01:34,319 --> 00:01:37,319
我们就做了这么一个非常简单的程序是吧

31
00:01:37,319 --> 00:01:39,489
呃我们可以有一个main函数

32
00:01:39,489 --> 00:01:42,129
然后呢幂函数里面呢会去调用一个max函数

33
00:01:42,129 --> 00:01:44,560
那我们在内函数前面的有max函数的原型

34
00:01:44,560 --> 00:01:46,769
后面呢有max函数的实体

35
00:01:46,769 --> 00:01:50,719
那我们现在呢把它保存啊

36
00:01:50,719 --> 00:01:53,259
我们把它保存为呢叫做min.c

37
00:01:54,879 --> 00:01:58,299
然后呢我们可以先来编译运行它

38
00:02:02,439 --> 00:02:04,019
但是程序没有任何问题啊

39
00:02:04,019 --> 00:02:06,719
这么简单的事情到现在应该是很容易的

40
00:02:06,719 --> 00:02:08,340
接下来我们想要做一件事情

41
00:02:08,340 --> 00:02:10,379
我们想要把这个max函数拿出去

42
00:02:10,379 --> 00:02:13,509
我们想要再来一个点c好呃

43
00:02:13,509 --> 00:02:14,590
好像我们已经太多了

44
00:02:14,590 --> 00:02:14,949
是不是啊

45
00:02:14,949 --> 00:02:15,789
我们再来一个

46
00:02:15,789 --> 00:02:18,539
如果我们说新建再新建一个源代码

47
00:02:19,498 --> 00:02:20,628
然后呢

48
00:02:20,628 --> 00:02:25,520
我们把这儿的这个max函数的这个body control

49
00:02:25,739 --> 00:02:26,878
剪切啊

50
00:02:26,878 --> 00:02:28,079
然后呢到这儿呢

51
00:02:28,079 --> 00:02:28,889
ctrl v

52
00:02:28,889 --> 00:02:33,800
我们把这个程序文件命名为叫做max.c

53
00:02:35,838 --> 00:02:37,658
有一个命点c

54
00:02:37,658 --> 00:02:39,620
还有一个max.c

55
00:02:39,620 --> 00:02:41,479
现在我们小a那好

56
00:02:41,479 --> 00:02:42,800
我们有两个文件了

57
00:02:42,800 --> 00:02:44,240
而且放在同一个目录底下

58
00:02:44,240 --> 00:02:44,719
对不对

59
00:02:44,719 --> 00:02:46,460
那我们就来编译它

60
00:02:46,460 --> 00:02:47,419
看行不行

61
00:02:49,599 --> 00:02:53,460
结果呢编译以后他说在这个函数

62
00:02:54,680 --> 00:02:58,360
在函数main里面呢有undefined reference to max

63
00:02:59,000 --> 00:03:03,409
有没有定义的max的这么一个引用

64
00:03:03,409 --> 00:03:06,680
最后呢说l d l d呢指的是那个连接器

65
00:03:06,680 --> 00:03:09,479
返回的是一腿粗了

66
00:03:10,118 --> 00:03:10,598
呃

67
00:03:10,598 --> 00:03:11,739
顺便说呃

68
00:03:11,739 --> 00:03:13,598
有同学在讨论区里面呢

69
00:03:13,598 --> 00:03:14,979
就把最后自己去拿出来说

70
00:03:14,979 --> 00:03:16,360
哎我遇到了这样一个错误

71
00:03:16,739 --> 00:03:20,549
这一句话其实不是你真正出错的原因

72
00:03:20,549 --> 00:03:23,579
而是一个结果告诉你编译没完成

73
00:03:23,579 --> 00:03:25,650
没有产生那个可行文件

74
00:03:25,650 --> 00:03:27,689
真正的原因是前面的啊

75
00:03:27,689 --> 00:03:29,250
你如果想让大家帮你解决问题

76
00:03:29,250 --> 00:03:31,289
你把前面那些话拿出来搞出来

77
00:03:31,289 --> 00:03:32,469
到底发生了什么

78
00:03:32,469 --> 00:03:34,659
那现在他是说找不到max

79
00:03:34,659 --> 00:03:39,679
因为现在在我们这个命点c里头没有max max

80
00:03:39,679 --> 00:03:40,519
在另外的地方

81
00:03:40,519 --> 00:03:42,049
在max.c里头

82
00:03:42,049 --> 00:03:43,399
当然你如果现在说啊

83
00:03:43,399 --> 00:03:45,020
我来编辑这个max.c

84
00:03:45,938 --> 00:03:48,539
他会有一个错误说找不到命

85
00:03:49,240 --> 00:03:50,550
找不到妹

86
00:03:50,550 --> 00:03:55,020
ok所以其实这里头有问题

87
00:03:55,960 --> 00:03:58,050
对于这样的一个id来说

88
00:03:58,050 --> 00:04:01,210
实际上他需要我们先做一件事情

89
00:04:01,210 --> 00:04:03,009
才能够把这两个东西放在一起

90
00:04:03,009 --> 00:04:06,060
我们需要新建一个项目

91
00:04:08,139 --> 00:04:12,340
当然现在我们可以选择为conserve application

92
00:04:12,340 --> 00:04:14,710
是一个终端应用程序啊

93
00:04:14,710 --> 00:04:16,480
然后呢我们给它起个名字

94
00:04:16,480 --> 00:04:17,800
比如说叫做

95
00:04:19,678 --> 00:04:21,319
这是一个c的项目啊

96
00:04:21,319 --> 00:04:22,879
叫做max确定

97
00:04:22,879 --> 00:04:23,869
接下来呢

98
00:04:23,869 --> 00:04:28,899
我们就需要找到我们刚才放mmin和max的

99
00:04:28,899 --> 00:04:29,560
那个地方

100
00:04:29,560 --> 00:04:31,459
然后呢把它保存下来

101
00:04:32,920 --> 00:04:36,060
ok然后他会替我们自作主张做一个main dc哈

102
00:04:36,060 --> 00:04:38,699
因为这是这个dvc加加会做的事情

103
00:04:38,699 --> 00:04:39,779
我们已经有m.c了

104
00:04:39,779 --> 00:04:40,860
我们关掉它就好了

105
00:04:40,860 --> 00:04:42,019
我们不需要

106
00:04:42,699 --> 00:04:44,699
但是这么做完以后没用啊

107
00:04:44,699 --> 00:04:46,678
因为你看如果在这里项目管理这里

108
00:04:46,678 --> 00:04:48,699
我们我们放大一点

109
00:04:48,699 --> 00:04:49,089
看

110
00:04:49,089 --> 00:04:50,139
在项目管理这里

111
00:04:50,139 --> 00:04:51,379
我们点开max

112
00:04:51,459 --> 00:04:52,779
他这里有一个命点c

113
00:04:52,779 --> 00:04:54,100
但这个命点c呢是假的

114
00:04:54,100 --> 00:04:56,259
是我们之前的被我们删掉了

115
00:04:56,259 --> 00:04:57,579
那个不要的那个东西哈

116
00:04:57,579 --> 00:05:00,019
所以我们接下来要做的事情是在项目里面

117
00:05:00,720 --> 00:05:04,819
我们要把这个东西呢给它移除掉

118
00:05:04,819 --> 00:05:06,439
因为这是这不是我们真的那个

119
00:05:06,439 --> 00:05:09,329
然后呢我们要添加添加什么呢

120
00:05:09,329 --> 00:05:13,519
我们这里有main和max这两个点c都选中打开

121
00:05:13,620 --> 00:05:15,930
现在在这个项目里面有了main

122
00:05:15,930 --> 00:05:17,040
有了max

123
00:05:17,040 --> 00:05:18,420
如果你点击这两个呢

124
00:05:18,420 --> 00:05:21,509
它会打开相应的源代码文件

125
00:05:21,509 --> 00:05:26,189
然后这个时候我们把这两个点c都放在max

126
00:05:26,189 --> 00:05:27,149
这个项目里头了

127
00:05:27,149 --> 00:05:29,060
我们再来编译它的时候

128
00:05:31,199 --> 00:05:33,439
ok编译就完成了

129
00:05:33,439 --> 00:05:35,060
然后我们去执行

130
00:05:35,060 --> 00:05:37,600
当然我们依然得到了原来的结果

131
00:05:38,480 --> 00:05:41,620
所以我们需要在d e v c加加

132
00:05:41,620 --> 00:05:43,519
里面新建一个项目

133
00:05:44,319 --> 00:05:47,579
然后呢把几个源代码文件呢都加进去

134
00:05:47,579 --> 00:05:48,959
加到那个项目里头去

135
00:05:48,959 --> 00:05:50,098
加进去以后

136
00:05:50,098 --> 00:05:53,040
这些文件就在一起了

137
00:05:53,060 --> 00:05:55,639
一个项目会对应产生

138
00:05:55,639 --> 00:05:57,290
最后产生一个可执行文件

139
00:05:57,290 --> 00:05:59,480
这个可执行文件所用的所有的代码

140
00:05:59,480 --> 00:06:02,980
是这个项目里面的那些点c文件

141
00:06:03,459 --> 00:06:06,459
那么这个dvc加加呢

142
00:06:06,459 --> 00:06:07,480
会把这个项目当中

143
00:06:07,480 --> 00:06:09,220
所有的源代码文件都编译以后呢

144
00:06:09,220 --> 00:06:11,560
最后链接起来形成一个可执行的东西

145
00:06:11,560 --> 00:06:15,738
其实d e p c加c i是一个比较特别的

146
00:06:15,738 --> 00:06:17,389
i d集成开发环境

147
00:06:17,389 --> 00:06:19,038
绝大多数其他集成开发环境

148
00:06:19,038 --> 00:06:22,089
什么维修studio啊啊code bx啊

149
00:06:22,089 --> 00:06:24,899
都必须要求你先建一个项目

150
00:06:24,899 --> 00:06:26,519
哪怕你只有一个点c文件

151
00:06:26,519 --> 00:06:27,870
也必须先建一个项目

152
00:06:27,870 --> 00:06:29,579
然后那个项目里面放一个点c

153
00:06:29,579 --> 00:06:31,449
然后你才能够继续做事情

154
00:06:31,449 --> 00:06:34,480
dvc加加呢允许你不建项目

155
00:06:34,480 --> 00:06:35,829
但是不建项目的时候

156
00:06:35,829 --> 00:06:37,980
你就只能是一个点c文件

157
00:06:38,819 --> 00:06:40,218
如果你有多个点c文件

158
00:06:40,218 --> 00:06:41,598
你就必须建项目

159
00:06:41,598 --> 00:06:43,759
然后把它们放到项目里头去

160
00:06:44,420 --> 00:06:47,418
呃另外呢有的这个集成开发环境

161
00:06:47,418 --> 00:06:48,619
比如像visual studio

162
00:06:48,619 --> 00:06:50,658
它会有两个不同的分开的按钮

163
00:06:50,658 --> 00:06:52,399
我们现在在dbc加加里面

164
00:06:52,399 --> 00:06:54,269
只有一个叫做编译的按钮

165
00:06:54,269 --> 00:06:55,649
有的会分开

166
00:06:55,649 --> 00:06:56,639
一个叫做编译

167
00:06:56,639 --> 00:06:57,930
一个叫做构建

168
00:06:57,930 --> 00:07:03,369
这是因为呢实际上呃从编译器的角度看哈

169
00:07:03,369 --> 00:07:04,899
一个点c文件呃

170
00:07:04,899 --> 00:07:06,939
我们把它叫做一个编译单元

171
00:07:07,019 --> 00:07:10,139
而编译器呢同一个时间一次

172
00:07:10,139 --> 00:07:12,000
它只能处理一个编译单元

173
00:07:12,000 --> 00:07:15,990
也就是说它只会对一个编译单元去做编译

174
00:07:15,990 --> 00:07:17,009
编译完以后

175
00:07:17,009 --> 00:07:19,529
形成的是我们在之前看到的那个

176
00:07:19,529 --> 00:07:21,029
点o文件啊

177
00:07:21,029 --> 00:07:22,399
目标代码文件

178
00:07:22,399 --> 00:07:25,699
然后由link由链接器去把它们连接在一起

179
00:07:25,699 --> 00:07:29,600
所以有的i d里头呢它分开两个按钮

180
00:07:29,600 --> 00:07:30,560
一个叫做编译

181
00:07:30,560 --> 00:07:31,459
一个叫做构建

182
00:07:32,540 --> 00:07:34,519
build compile

183
00:07:34,519 --> 00:07:35,779
只是去产生点o

184
00:07:35,779 --> 00:07:38,120
然后build再把这些点o连接起来

185
00:07:38,120 --> 00:07:40,600
形成一个可执行的程序啊

186
00:07:40,600 --> 00:07:42,939
啊dbc加加呢就没有分开啊

187
00:07:42,939 --> 00:07:43,699
就只有一个

