1
00:00:04,259 --> 00:00:08,039
我们在之前求身高的那个代码里头

2
00:00:08,039 --> 00:00:09,419
出现过这样的东西

3
00:00:09,419 --> 00:00:11,400
反斜杠双引号

4
00:00:11,400 --> 00:00:14,939
反斜杠双引号这个东西的意思是说

5
00:00:15,000 --> 00:00:19,339
这个反斜杠加上双引号成为一个字符

6
00:00:19,339 --> 00:00:20,300
这是一个字符

7
00:00:20,300 --> 00:00:21,440
这不是两个字符

8
00:00:21,440 --> 00:00:23,910
这个字符表示的就是那个双引号

9
00:00:23,910 --> 00:00:24,870
之所以要这么做

10
00:00:24,870 --> 00:00:26,489
是因为在双引号里面

11
00:00:26,489 --> 00:00:27,989
你不能直接出现双引号

12
00:00:27,989 --> 00:00:29,129
如果直接出现双引号

13
00:00:29,129 --> 00:00:31,140
他认为这个双引号到这个双引号之间

14
00:00:31,140 --> 00:00:32,429
是一个字符串

15
00:00:32,429 --> 00:00:34,649
那这个东西就没有意义了

16
00:00:34,649 --> 00:00:38,219
所以要用反斜杠加双引号来表达双引号

17
00:00:38,219 --> 00:00:40,679
这种东西呢就叫做逃逸字符啊

18
00:00:40,679 --> 00:00:44,140
它是两个符号连起来算一个字符的

19
00:00:44,240 --> 00:00:45,710
我们用哪一套a字符呢

20
00:00:45,710 --> 00:00:48,740
我们有回退一格好吧

21
00:00:48,740 --> 00:00:52,409
所以在之前的那个呃编程练习题当中

22
00:00:52,409 --> 00:00:54,630
有同学就想用这个回退一格

23
00:00:54,630 --> 00:00:57,640
来试图把最后多出来的那个空格

24
00:00:57,640 --> 00:00:59,259
因为我们要求说航母没有空格

25
00:00:59,259 --> 00:01:00,759
那看啊大家都输出空格

26
00:01:00,759 --> 00:01:01,600
到了航墨的时候

27
00:01:01,600 --> 00:01:02,350
回退一格

28
00:01:02,350 --> 00:01:03,799
把那个空格给删了

29
00:01:03,799 --> 00:01:05,959
回退一格的意思并不是删除

30
00:01:05,959 --> 00:01:06,859
我们来试一下

31
00:01:06,859 --> 00:01:08,819
如果我们现在输出是这样的

32
00:01:09,340 --> 00:01:15,099
说我们有123回退一格换行

33
00:01:16,120 --> 00:01:18,359
456换行

34
00:01:18,359 --> 00:01:20,079
这样的输出会是什么呢

35
00:01:20,879 --> 00:01:23,120
我们现在在这个sublime text里头

36
00:01:23,120 --> 00:01:24,500
去运行这个程序啊

37
00:01:24,500 --> 00:01:27,319
他很搞笑的给了我们一个这个东西

38
00:01:27,319 --> 00:01:29,319
说哎呀这里有个回推制服了

39
00:01:29,859 --> 00:01:31,540
我们换个地方来运行它

40
00:01:31,540 --> 00:01:32,920
这是我们这个程序

41
00:01:32,920 --> 00:01:34,060
我们现在来运行

42
00:01:34,060 --> 00:01:35,579
它啥也没有

43
00:01:37,000 --> 00:01:38,280
为什么在不同的地方

44
00:01:38,280 --> 00:01:39,060
我们看到这个程

45
00:01:39,060 --> 00:01:40,260
这个程序运行的这个

46
00:01:40,260 --> 00:01:41,840
出现的样子会不一样呢

47
00:01:42,359 --> 00:01:45,540
这事儿还得说的挺细哈

48
00:01:45,540 --> 00:01:47,980
我们知道我们的那个程序运行的时候啊

49
00:01:48,140 --> 00:01:50,000
比如说你们d e v c加加运行

50
00:01:50,000 --> 00:01:51,650
会有一个黑色的窗口

51
00:01:51,650 --> 00:01:53,569
那个窗口呢我们叫做终端

52
00:01:53,569 --> 00:01:54,739
其实你有没有想过

53
00:01:54,739 --> 00:01:56,959
这个黑色的窗口是什么东西呢

54
00:01:57,840 --> 00:02:00,829
这个黑色的窗口本身是一个程序

55
00:02:00,829 --> 00:02:02,810
是一个别人写的程序

56
00:02:02,810 --> 00:02:07,019
那个程序我们有一种说法把它叫做sh

57
00:02:07,938 --> 00:02:11,199
他会在背后去执行我们的那个程序

58
00:02:11,199 --> 00:02:12,459
这才是我们自己写的

59
00:02:12,459 --> 00:02:13,599
就是那个hello

60
00:02:14,060 --> 00:02:16,759
我们的程序是由这个黑色的窗口

61
00:02:16,759 --> 00:02:18,719
去执行起来的

62
00:02:19,099 --> 00:02:21,319
所以呢他做了一件事情

63
00:02:21,319 --> 00:02:23,479
他接管了我们的键盘

64
00:02:25,199 --> 00:02:27,379
是和他联系在一起的

65
00:02:27,379 --> 00:02:32,000
我们的眼睛看到的东西是他发送给我们的

66
00:02:32,000 --> 00:02:33,110
对不对

67
00:02:33,110 --> 00:02:37,719
我们的程序和这个黑黑的这个窗口

68
00:02:37,719 --> 00:02:38,500
去打交道

69
00:02:38,500 --> 00:02:43,408
他把键盘上送过来的东西给我们的程序

70
00:02:43,408 --> 00:02:47,099
我们程序print输出的东西交给我们的眼睛

71
00:02:47,379 --> 00:02:49,030
在这个过程当中

72
00:02:49,030 --> 00:02:51,039
它不是那么诚实的

73
00:02:51,039 --> 00:02:53,419
他要去做一些翻译的事情

74
00:02:53,560 --> 00:02:56,919
比如说你的键盘上面去做了一些

75
00:02:56,919 --> 00:02:58,240
比如说回推啊

76
00:02:58,240 --> 00:02:59,439
回车啊

77
00:03:00,378 --> 00:03:02,520
他要把这些事情给处理掉的

78
00:03:02,838 --> 00:03:05,479
你在这里面输出了有个反斜杠n啊

79
00:03:05,479 --> 00:03:06,829
有个反斜杠b啊

80
00:03:06,829 --> 00:03:10,459
他要帮我们去把你程序里面的这些反斜杠

81
00:03:10,459 --> 00:03:14,379
b反斜杠n变成你能够看见的那个结果

82
00:03:14,679 --> 00:03:16,658
所以不同的shell

83
00:03:16,658 --> 00:03:19,239
就会对不同的这些特殊的控制字符

84
00:03:19,239 --> 00:03:22,379
尤其是有特殊控制字符去做出不同的反应

85
00:03:22,819 --> 00:03:24,439
那个反斜杠

86
00:03:24,439 --> 00:03:26,719
b在我们sublime text里头运行的时候

87
00:03:26,719 --> 00:03:29,729
被他的那个因为他没有黑黑的窗口用

88
00:03:29,729 --> 00:03:30,240
对不对

89
00:03:30,240 --> 00:03:33,090
他是在他下面那个编辑区的下面

90
00:03:33,090 --> 00:03:34,379
出一个地方给我们看

91
00:03:34,379 --> 00:03:38,090
他以那个bs这样一个字符来表示

92
00:03:38,090 --> 00:03:39,379
这个backspace

93
00:03:39,379 --> 00:03:43,460
我们在这个making touch的这个终端下运行的时

94
00:03:43,460 --> 00:03:43,819
候

95
00:03:43,819 --> 00:03:45,949
他以另外的方式去做这个事情

96
00:03:45,949 --> 00:03:50,740
所以我们的程序和我们的人之间

97
00:03:50,740 --> 00:03:53,080
其实还有另外一个东西来帮我们解释

98
00:03:53,080 --> 00:03:55,659
你在print里面输出的那些控制字符的

99
00:03:55,879 --> 00:03:58,879
这些都是控制字符好

100
00:03:58,879 --> 00:04:00,889
因此回到这儿

101
00:04:00,889 --> 00:04:02,259
我们再来看说

102
00:04:02,618 --> 00:04:04,598
确实我们那个反斜杠b

103
00:04:04,598 --> 00:04:05,739
好像没起到任何效果

104
00:04:05,739 --> 00:04:06,229
对不对

105
00:04:06,229 --> 00:04:07,129
他没有回退吗

106
00:04:07,129 --> 00:04:10,069
我们想象回退就是键盘上那个back space键

107
00:04:10,069 --> 00:04:11,389
你要一回头就删了

108
00:04:11,389 --> 00:04:12,889
好我们再来改一下代码

109
00:04:12,889 --> 00:04:15,409
如果我们现在在回退之后

110
00:04:15,409 --> 00:04:17,600
又输出了一个大写的a

111
00:04:17,600 --> 00:04:19,189
我们看看结果是什么

112
00:04:19,189 --> 00:04:21,680
我们到了控制台来运行

113
00:04:23,279 --> 00:04:24,620
这是什么结果

114
00:04:24,620 --> 00:04:28,579
他把那个三替换成了a

115
00:04:28,639 --> 00:04:30,800
所以bs做的事是什么事情

116
00:04:30,800 --> 00:04:32,060
反斜杠b做的什么事情

117
00:04:32,060 --> 00:04:34,858
是说我要回去一格

118
00:04:34,858 --> 00:04:38,009
我要让下一个输出回到这个位置上去

119
00:04:38,009 --> 00:04:40,579
但是你如果不输出东西的话

120
00:04:40,978 --> 00:04:42,988
那就什么结果也没有了

121
00:04:42,988 --> 00:04:44,939
你如果在这个位置再输出点东西

122
00:04:44,939 --> 00:04:47,519
那就把刚才的东西给盖掉了

123
00:04:47,658 --> 00:04:52,038
所以b反斜杠b通常做的事情是回去

124
00:04:52,038 --> 00:04:53,149
但不删除

125
00:04:53,149 --> 00:04:58,509
但是我不否认你也许能够找到一个sure

126
00:04:58,509 --> 00:05:00,370
找到一个终端软件

127
00:05:00,370 --> 00:05:02,199
它运行你的程序的时候

128
00:05:02,199 --> 00:05:05,279
会把反斜杠b解释为删除

129
00:05:05,360 --> 00:05:06,980
这完全是可能的

130
00:05:06,980 --> 00:05:08,660
还有反斜杠t是什么呢

131
00:05:08,660 --> 00:05:10,370
是到到下一个表格位哦

132
00:05:10,370 --> 00:05:11,240
这件事情

133
00:05:11,240 --> 00:05:12,439
表格位是说

134
00:05:12,439 --> 00:05:15,009
在每一行当中有一些固定的位置

135
00:05:15,009 --> 00:05:17,230
用一个反斜杠t可以使得输出

136
00:05:17,230 --> 00:05:19,550
从下一个表格表格未开始

137
00:05:19,550 --> 00:05:24,139
反斜杠t不代表固定的字符的数量

138
00:05:24,218 --> 00:05:26,678
而是代表着输出的位置

139
00:05:26,678 --> 00:05:27,428
比如说

140
00:05:27,428 --> 00:05:29,769
其实如果你经常用这样的

141
00:05:29,769 --> 00:05:31,449
一种文本编辑器的话

142
00:05:31,449 --> 00:05:33,519
你会知道说在这个文本编辑器里面

143
00:05:33,519 --> 00:05:34,939
你敲一个table键

144
00:05:34,939 --> 00:05:36,439
他会到下一个位置去

145
00:05:36,439 --> 00:05:37,399
敲一个tab键

146
00:05:37,399 --> 00:05:38,300
会到下一个位置去

147
00:05:38,300 --> 00:05:39,709
现在我是敲了三个tab键

148
00:05:39,709 --> 00:05:41,038
在这个位置上面了

149
00:05:41,038 --> 00:05:42,629
如果我输了两个字符

150
00:05:42,629 --> 00:05:43,829
我敲一个tab键

151
00:05:43,829 --> 00:05:44,968
他到了这个位置

152
00:05:44,968 --> 00:05:45,809
我换一行

153
00:05:45,809 --> 00:05:47,129
我输入三个字符

154
00:05:47,129 --> 00:05:48,379
再敲一个tab键

155
00:05:48,379 --> 00:05:49,699
他还是到了这个位置

156
00:05:50,839 --> 00:05:55,449
table的意思就是在行当中的一些固定的位置

157
00:05:55,449 --> 00:05:58,970
而不是固定大小的字符数量

158
00:05:58,970 --> 00:06:00,290
所以我们可以试下说

159
00:06:00,290 --> 00:06:02,689
如果我们在第一行输出了123

160
00:06:02,689 --> 00:06:04,980
然后反斜杠t456 

161
00:06:04,980 --> 00:06:07,439
我们在第二行输出的是一二

162
00:06:07,439 --> 00:06:09,569
反斜杠t456 

163
00:06:09,569 --> 00:06:11,610
我们会看到后面的四

164
00:06:11,610 --> 00:06:14,569
出现在相同的位置上面啊

165
00:06:14,569 --> 00:06:16,300
这个叫做制表位

166
00:06:16,339 --> 00:06:17,899
而这两个字符啊

167
00:06:17,899 --> 00:06:21,620
反斜杠n和反斜杠r叫做回车换行

168
00:06:21,620 --> 00:06:25,540
他们的是源自于早期打字机的动作

169
00:06:25,540 --> 00:06:26,920
我们知道计算机的键盘

170
00:06:26,920 --> 00:06:29,399
就是打字机的键盘是一样的排列

171
00:06:29,399 --> 00:06:32,759
打字机上面的这个东西叫做carrier

172
00:06:32,759 --> 00:06:33,899
叫做一个车啊

173
00:06:33,899 --> 00:06:35,579
我们中文把它翻译叫做车

174
00:06:35,759 --> 00:06:37,259
随着你的打字的动作

175
00:06:37,259 --> 00:06:40,439
这个车会逐渐的往左边移动

176
00:06:40,439 --> 00:06:44,478
那么你把这个车从左在打完以后

177
00:06:44,478 --> 00:06:45,199
他在这个位置了

178
00:06:45,199 --> 00:06:47,838
你把这个车从这个位置移到右边去

179
00:06:47,838 --> 00:06:49,158
叫做回车

180
00:06:49,158 --> 00:06:51,319
然后在这个过程当中

181
00:06:51,319 --> 00:06:53,389
你要让这个滚筒滚一下

182
00:06:53,389 --> 00:06:55,908
让这个值往上卷一点

183
00:06:55,908 --> 00:06:57,379
这个叫做换行

184
00:06:57,399 --> 00:07:01,149
所以回车和换行在打字机上是两个动作

185
00:07:01,149 --> 00:07:03,459
因此反映在我们c语言里头

186
00:07:03,459 --> 00:07:05,350
反斜杠n和反斜杠r

187
00:07:05,350 --> 00:07:08,529
这是两个特殊的逃逸字符

188
00:07:08,529 --> 00:07:10,269
但是我们之前所有的程序里面

189
00:07:10,269 --> 00:07:12,639
都只用了一个反斜杠n

190
00:07:12,639 --> 00:07:15,839
这是因为同样是我们刚才说的那个sh

191
00:07:15,839 --> 00:07:18,779
它会替我们把反斜杠n翻译成为

192
00:07:18,779 --> 00:07:21,879
要做回车和换行两个动作

