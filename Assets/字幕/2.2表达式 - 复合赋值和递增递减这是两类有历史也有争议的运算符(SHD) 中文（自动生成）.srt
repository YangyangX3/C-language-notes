1
00:00:04,219 --> 00:00:06,440
除了我们之前提到过的加减乘除

2
00:00:06,440 --> 00:00:08,220
这些运算符以外呢啊

3
00:00:08,220 --> 00:00:10,859
c语言还有一系列很有意思的运算符

4
00:00:10,859 --> 00:00:12,929
比如说所有的这些四则运算

5
00:00:12,929 --> 00:00:13,830
加减乘除

6
00:00:16,399 --> 00:00:18,019
形成一个复合运算符

7
00:00:18,019 --> 00:00:19,480
复合赋值符啊

8
00:00:19,480 --> 00:00:22,179
呃比如说我们有加等于减等于乘

9
00:00:22,179 --> 00:00:22,780
等于是吧

10
00:00:22,780 --> 00:00:24,579
比如说total加等于五是什么意思呢

11
00:00:24,579 --> 00:00:26,719
其实就是total等于total加五

12
00:00:28,239 --> 00:00:29,129
呃

13
00:00:29,129 --> 00:00:32,700
这个加和等号中间呢你不能留空格啊

14
00:00:32,700 --> 00:00:34,479
有空格它就是另外的意思了

15
00:00:35,320 --> 00:00:36,479
连在一起啊

16
00:00:36,479 --> 00:00:38,579
它就是一个特殊的赋值运算符

17
00:00:38,799 --> 00:00:41,049
这种呃运算符呢

18
00:00:44,140 --> 00:00:46,990
我们在讲c的历史的时候

19
00:00:46,990 --> 00:00:47,920
大概提到过

20
00:00:47,920 --> 00:00:49,359
说当年在pdp eleven

21
00:00:49,359 --> 00:00:51,359
那个机器上面去做出c语言的

22
00:00:51,359 --> 00:00:52,140
那c语言

23
00:00:52,140 --> 00:00:54,539
当时是想要做一个底层的编程语言

24
00:00:54,539 --> 00:00:57,060
所以呢c语言当时有一个设计

25
00:00:57,060 --> 00:00:57,479
c语言的时候

26
00:00:57,479 --> 00:00:58,200
有一个想法

27
00:00:58,200 --> 00:01:03,219
就是说我要能够用c语言表达出机器语言

28
00:01:03,219 --> 00:01:04,299
所有的指令

29
00:01:04,299 --> 00:01:06,489
如果机器言有一种特殊的指令

30
00:01:06,489 --> 00:01:07,989
我用c语言写了以后

31
00:01:07,989 --> 00:01:10,090
没有办法让编译器直接能够产生那个指令

32
00:01:10,090 --> 00:01:10,569
那是不行的

33
00:01:10,569 --> 00:01:12,799
所以一定要有能够对应过来的东西

34
00:01:12,799 --> 00:01:15,140
而加等于减等于这样的运算呢

35
00:01:15,140 --> 00:01:16,519
在p dp a i m里面呢

36
00:01:16,519 --> 00:01:18,379
正好是有一条机器指令

37
00:01:18,379 --> 00:01:20,269
专门是做这个事情的啊

38
00:01:20,269 --> 00:01:22,250
所以呢就在c语言里面设计了这样的一

39
00:01:22,250 --> 00:01:24,640
种复合的赋值运算符

40
00:01:26,239 --> 00:01:29,019
所以你看如果我们要做total加等于some

41
00:01:29,019 --> 00:01:29,859
加100÷2

42
00:01:29,859 --> 00:01:31,959
那就是偷偷加等于这个东西对吧

43
00:01:31,959 --> 00:01:35,319
如果是偷偷乘等于some加12呢

44
00:01:35,680 --> 00:01:37,540
这个时候你要特别小心

45
00:01:37,540 --> 00:01:38,890
其实把它展开的时候呢

46
00:01:38,890 --> 00:01:40,150
这里是有括号的

47
00:01:40,150 --> 00:01:42,040
也就是说这种运算符啊

48
00:01:42,040 --> 00:01:45,349
都会要把赋值右边的那个式子先算完

49
00:01:45,349 --> 00:01:46,459
得到一个结果

50
00:01:46,459 --> 00:01:47,030
然后呢

51
00:01:47,030 --> 00:01:50,039
再来和左边的那个变量做一个结合啊

52
00:01:50,039 --> 00:01:50,578
所以一样

53
00:01:50,578 --> 00:01:52,528
你看toto初等于12+6呢

54
00:01:52,528 --> 00:01:55,090
会先把12+6变成18

55
00:01:55,090 --> 00:01:57,750
然后再去和偷偷做一个除法

56
00:01:57,750 --> 00:01:59,129
除了这些运算符之外

57
00:01:59,129 --> 00:02:01,890
我们还有一对非常特殊的运算符

58
00:02:01,890 --> 00:02:03,379
叫做加加减减

59
00:02:03,500 --> 00:02:06,920
它们是递增和递减运算符

60
00:02:06,920 --> 00:02:09,860
这个加加减减呢他们是单目运算符

61
00:02:09,860 --> 00:02:11,909
意思是说他们只有一个算子

62
00:02:11,909 --> 00:02:14,069
但是呢这个算子有个特殊的要求

63
00:02:14,069 --> 00:02:16,199
就这个扇子呢必须是一个变量

64
00:02:16,199 --> 00:02:19,349
也就是说你不能说加加五没有任何意义

65
00:02:19,349 --> 00:02:21,780
你只能说加加a加加b啊

66
00:02:21,780 --> 00:02:23,139
它必须是一个变量

67
00:02:23,139 --> 00:02:25,750
那么它的作用是什么呢

68
00:02:25,750 --> 00:02:27,669
就是让那个变量加一

69
00:02:27,669 --> 00:02:28,840
所以叫做递增

70
00:02:28,840 --> 00:02:30,789
如果减减的就是让那个变量减一

71
00:02:30,789 --> 00:02:32,199
所以叫做递减啊

72
00:02:32,199 --> 00:02:35,340
所以你看如果我们有count加加

73
00:02:35,780 --> 00:02:39,860
那么这个cd加加的意思呢就是cd加等于一

74
00:02:39,860 --> 00:02:42,979
也就是cd等于cd加一啊

75
00:02:42,979 --> 00:02:44,210
所以这就是佳佳

76
00:02:44,210 --> 00:02:46,400
如果只是看到这一步

77
00:02:46,400 --> 00:02:47,479
那很简单对吧

78
00:02:47,479 --> 00:02:48,500
但加加减减呢

79
00:02:48,500 --> 00:02:51,319
会有很多很有意思的事情出来

80
00:02:51,439 --> 00:02:53,509
我们的加加和减减呢

81
00:02:53,509 --> 00:02:56,419
这两个运算符啊可以放在变量的前面

82
00:02:56,419 --> 00:02:58,159
也可以放在变量的后面

83
00:02:58,159 --> 00:03:00,139
当我们把它放在变量前面的时候呢

84
00:03:00,139 --> 00:03:02,060
说是它的前缀形式

85
00:03:02,060 --> 00:03:03,710
把它放在变量的后面呢

86
00:03:03,710 --> 00:03:05,060
是它的后缀形式

87
00:03:05,060 --> 00:03:07,340
所以它有前缀与后缀

88
00:03:07,379 --> 00:03:08,729
这是第一件事情

89
00:03:08,729 --> 00:03:10,379
所以你们可以有a加加

90
00:03:10,379 --> 00:03:11,500
可以有加加a

91
00:03:11,539 --> 00:03:13,879
可是a加加和加加a有什么不一样呢

92
00:03:13,879 --> 00:03:15,199
他们都会做一件事情

93
00:03:15,199 --> 00:03:16,819
就是a等于a加一

94
00:03:16,819 --> 00:03:17,780
这是一样的

95
00:03:17,780 --> 00:03:22,318
但是我们提过说运算符都有结果对吧

96
00:03:22,318 --> 00:03:26,860
所以加加a和a加加的结果不一样

97
00:03:28,179 --> 00:03:29,158
怎么结果就不一样

98
00:03:29,158 --> 00:03:31,709
你刚刚不是说他们都让a等于a加一吗

99
00:03:31,709 --> 00:03:33,389
对于加加减减来说

100
00:03:33,389 --> 00:03:34,438
a等于a加一

101
00:03:34,438 --> 00:03:36,620
是这个运算符的副作用

102
00:03:36,780 --> 00:03:38,550
我做了这个动作

103
00:03:38,550 --> 00:03:41,520
它附带着会让a加加

104
00:03:41,520 --> 00:03:43,110
会让a加一

105
00:03:43,110 --> 00:03:47,319
但是a加加和加加a的结果是不一样的

106
00:03:47,338 --> 00:03:50,758
a加加的结果是a加一以前的那个值

107
00:03:50,758 --> 00:03:54,159
而加加a的结果呢是a加一以后的那个值

108
00:03:56,058 --> 00:03:57,368
我们来试一下

109
00:03:57,368 --> 00:03:59,258
现在我们有一个int a

110
00:04:00,579 --> 00:04:02,599
我们让a等于十

111
00:04:03,338 --> 00:04:05,960
然后我们要输出

112
00:04:06,299 --> 00:04:10,039
第一次呢是a加加的结果

113
00:04:10,280 --> 00:04:12,199
为了让我们的输出看起来比较明确

114
00:04:12,199 --> 00:04:17,488
我们得在这儿加上说这是a加加等于多少

115
00:04:17,488 --> 00:04:18,718
做完这个之后

116
00:04:18,718 --> 00:04:19,798
我们再来检查一下

117
00:04:19,798 --> 00:04:21,418
这个时候a等于多少

118
00:04:21,418 --> 00:04:27,689
然后类似的我们再来说加加a等于多少

119
00:04:27,689 --> 00:04:29,250
这是加加a的

120
00:04:29,250 --> 00:04:30,329
然后做完之后呢

121
00:04:30,329 --> 00:04:35,120
我们也要来检查一下a变成多少了

122
00:04:35,399 --> 00:04:38,040
好现在我们把这个程序运行一下

123
00:04:38,040 --> 00:04:42,990
看我们看到a原来是十

124
00:04:42,990 --> 00:04:45,629
a加加的结果是十

125
00:04:45,629 --> 00:04:48,449
因为a加加作为一个表达式

126
00:04:48,449 --> 00:04:51,139
它的结果是a加一以前的结果

127
00:04:51,420 --> 00:04:55,680
但是做完以后作为副作用a变成11了

128
00:04:56,360 --> 00:04:59,360
然后在11的基础上加加a

129
00:04:59,538 --> 00:05:01,699
这个表达式的结果是12

130
00:05:01,699 --> 00:05:03,048
因为前缀的话

131
00:05:03,048 --> 00:05:05,538
那么它的结果就是加一以后的结果

132
00:05:05,538 --> 00:05:06,639
作为他的结果

133
00:05:06,639 --> 00:05:10,180
然后当然作为副作用也是使得a加了一

134
00:05:10,180 --> 00:05:14,240
所以加完以后a是等于12了啊

135
00:05:14,240 --> 00:05:16,279
这就是前缀和后缀的不同

136
00:05:16,939 --> 00:05:19,000
前缀是加以后的

137
00:05:19,000 --> 00:05:20,819
后缀是加一以前的

138
00:05:21,420 --> 00:05:23,910
当然对于减减来说它是一样的

139
00:05:23,910 --> 00:05:25,350
所以我们可以总结一下呢

140
00:05:25,350 --> 00:05:26,879
呃如果是看的加加

141
00:05:26,879 --> 00:05:28,399
这是一个后缀

142
00:05:28,399 --> 00:05:30,560
那么它的运算是给count加一

143
00:05:30,560 --> 00:05:32,209
就是它的副作用给count加一

144
00:05:32,209 --> 00:05:33,860
但是这个表达式就count

145
00:05:33,860 --> 00:05:36,310
加加的表达式是count原来的值

146
00:05:36,310 --> 00:05:38,439
cn加加抗的就是前缀

147
00:05:38,439 --> 00:05:40,209
所以它的运算呢是count加一

148
00:05:40,209 --> 00:05:43,269
但是它的表达式的值是count加一以后的值

149
00:05:43,269 --> 00:05:45,269
那么减减也是类似的

150
00:05:45,269 --> 00:05:47,069
那么加加减减这两个运算符啊

151
00:05:47,069 --> 00:05:48,689
和我们前面提的这个呃

152
00:05:48,689 --> 00:05:51,990
加等于减等于这个复合复制符一样啊

153
00:05:51,990 --> 00:05:53,439
它也有它的历史来源

154
00:05:53,439 --> 00:05:56,500
因为当年呢在那个p dp eleven上面

155
00:05:56,500 --> 00:05:58,540
它的机器指令有两条特殊的指令

156
00:05:58,540 --> 00:06:00,019
i n c和d e c

157
00:06:00,019 --> 00:06:02,120
那么有了加加减减之后呢

158
00:06:02,120 --> 00:06:03,079
c语言的编译器啊

159
00:06:03,079 --> 00:06:04,250
就可以很方便的

160
00:06:04,250 --> 00:06:06,139
把它编译成这两条对应的指令

161
00:06:06,139 --> 00:06:07,879
那么运算可以加快对吧

162
00:06:07,879 --> 00:06:09,850
但是呢到今天呢

163
00:06:09,850 --> 00:06:11,649
这个事情已经不太有意义了

164
00:06:11,649 --> 00:06:13,509
因为现在的编译器更聪明啊

165
00:06:13,509 --> 00:06:15,430
你不写成那个加加的形式

166
00:06:15,430 --> 00:06:16,750
你写的是a等于a加一

167
00:06:16,750 --> 00:06:18,459
他也能给你产生的一个指令

168
00:06:18,459 --> 00:06:20,620
或者呢现在今年今天的

169
00:06:20,620 --> 00:06:21,959
现在有些cpu

170
00:06:21,959 --> 00:06:25,500
他根本就没有那个特殊的nc和dc指令啊

171
00:06:25,500 --> 00:06:27,408
你没办法去加快它

172
00:06:27,408 --> 00:06:31,279
所以呃今天我们在还在使用加加减减

173
00:06:31,279 --> 00:06:33,079
纯粹是因为它有这个东西是吧

174
00:06:33,079 --> 00:06:35,240
然后呢毕竟你写起来比较短嘛

175
00:06:35,240 --> 00:06:38,139
i加加b你写成i等于i加e要短很多嘛

176
00:06:38,139 --> 00:06:39,459
所以还有人继续去用它

177
00:06:39,459 --> 00:06:40,129
但是呢

178
00:06:40,129 --> 00:06:44,209
我们希望你不要把它组合到表达式里头去

179
00:06:44,209 --> 00:06:46,209
因为那一组合进去很复杂

180
00:06:46,209 --> 00:06:50,050
你像我们这里这个式子a等于b加等于c

181
00:06:50,050 --> 00:06:53,259
加加减d加减减一除以负f

182
00:06:53,259 --> 00:06:55,500
这个都这个式子该怎么解释呢

183
00:06:55,740 --> 00:06:57,379
我们到讨论区去讨论吧

