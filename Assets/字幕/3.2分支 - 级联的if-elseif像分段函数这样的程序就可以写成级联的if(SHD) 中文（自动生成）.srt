1
00:00:04,519 --> 00:00:08,089
如果啊我们要来算这样一个分段函数

2
00:00:08,089 --> 00:00:09,650
分段函数在数学上很常见

3
00:00:09,650 --> 00:00:11,539
是在某种条件下

4
00:00:11,539 --> 00:00:12,710
它是一个什么结果

5
00:00:12,710 --> 00:00:14,570
另外一种条件下又是一个什么结果

6
00:00:14,570 --> 00:00:16,140
这个条件kd很多

7
00:00:16,339 --> 00:00:18,320
我们现在有这样一个分段函数

8
00:00:18,320 --> 00:00:20,839
说如果x小于零

9
00:00:20,839 --> 00:00:22,500
那么结果就是-1

10
00:00:22,500 --> 00:00:23,699
如果x等于零

11
00:00:23,699 --> 00:00:24,960
那么结果就是零

12
00:00:24,960 --> 00:00:26,100
所以这里这个等于零

13
00:00:26,100 --> 00:00:27,920
这是数学上的表示法啊

14
00:00:27,980 --> 00:00:29,300
如果x大于零

15
00:00:29,300 --> 00:00:32,338
那么结果就是2x也就是x的两倍

16
00:00:32,579 --> 00:00:35,130
那么这样一个分段函数

17
00:00:35,130 --> 00:00:37,740
当然一般来说我们就要用fl来解决

18
00:00:37,740 --> 00:00:38,280
对不对

19
00:00:38,280 --> 00:00:40,539
所以呢我们可以写出这样的代码

20
00:00:40,659 --> 00:00:42,759
说如果x小于零的

21
00:00:42,759 --> 00:00:45,079
那么f等于-1 else

22
00:00:45,880 --> 00:00:47,759
else以后我们还要接一个衣服

23
00:00:47,759 --> 00:00:48,359
对不对

24
00:00:48,359 --> 00:00:50,850
那么因为else后面还要接一个衣服呢

25
00:00:50,850 --> 00:00:54,270
我们就可以把if和else连在一块

26
00:00:54,270 --> 00:00:57,030
当然所谓的连在一块只是摆在一块儿哈

27
00:00:57,030 --> 00:00:59,399
中间还是要有空格给它分开的

28
00:00:59,399 --> 00:01:02,759
那么l x等于零的话

29
00:01:02,759 --> 00:01:03,750
f等于零

30
00:01:03,750 --> 00:01:06,819
再那么f等于二乘以x

31
00:01:06,980 --> 00:01:08,359
按照我们刚才讲的那个事情

32
00:01:08,359 --> 00:01:11,180
我们先要去呃确认一个事情

33
00:01:11,180 --> 00:01:13,679
就是我们最后这个else到底是谁的

34
00:01:14,000 --> 00:01:16,700
事实上呢这个else按照我们的原则

35
00:01:16,700 --> 00:01:18,680
就是离他最近的那个f对不对

36
00:01:18,680 --> 00:01:19,849
所以最近的衣服谁呢

37
00:01:19,849 --> 00:01:21,540
就这个衣服啊

38
00:01:21,540 --> 00:01:23,099
所以这个else是这个衣服的

39
00:01:23,099 --> 00:01:24,698
这个else是这个衣服的

40
00:01:24,698 --> 00:01:25,808
换句话说

41
00:01:25,808 --> 00:01:29,679
这里头好像看上去呢没有那种包含的关系

42
00:01:29,679 --> 00:01:30,938
不是里面外面

43
00:01:30,938 --> 00:01:33,780
而是一层一层连下来的

44
00:01:33,879 --> 00:01:35,920
最后的else是最后的衣服的

45
00:01:35,920 --> 00:01:37,728
前面一个else是前面的衣服的

46
00:01:37,728 --> 00:01:40,009
或者如果说我们给它画出流程图来呢

47
00:01:40,009 --> 00:01:41,328
我们这样分段函数的流程图

48
00:01:41,328 --> 00:01:42,649
是长得像这个样子的

49
00:01:42,649 --> 00:01:43,429
x小于零吗

50
00:01:43,429 --> 00:01:44,920
如果是的f等于一

51
00:01:44,920 --> 00:01:47,980
那么然后他就结束了就出去了啊

52
00:01:47,980 --> 00:01:49,289
这个出口在这

53
00:01:49,289 --> 00:01:51,088
如果x不等于不小于零

54
00:01:51,088 --> 00:01:53,368
那么我们再来判断一下fx是否等于零

55
00:01:53,368 --> 00:01:54,209
如果等于零的话

56
00:01:54,209 --> 00:01:54,748
f等于零

57
00:01:54,748 --> 00:01:56,489
然后也从这儿出去了

58
00:01:56,489 --> 00:01:59,230
当然最后x大于零就不用判断了

59
00:01:59,230 --> 00:02:01,620
因为前面两个条件都不满足的话

60
00:02:01,620 --> 00:02:03,060
一定就是x大于零

61
00:02:03,060 --> 00:02:05,040
所以我们不需要再做第三个判断

62
00:02:05,040 --> 00:02:06,030
x是否大于零

63
00:02:06,030 --> 00:02:08,889
我们直接在最后的else那里做的事情

64
00:02:08,889 --> 00:02:10,360
就是f等于二乘以x

65
00:02:10,360 --> 00:02:13,360
然后也统一的出去了

66
00:02:13,479 --> 00:02:16,569
所以这样呢就构成了一种吉连的if else

67
00:02:16,569 --> 00:02:18,069
衣服一个条件

68
00:02:18,069 --> 00:02:20,419
else的话紧跟着一个衣服

69
00:02:20,419 --> 00:02:22,939
再else当然还可以再跟音符

70
00:02:22,939 --> 00:02:24,020
在这种时候呢

71
00:02:24,020 --> 00:02:28,319
我们会习惯于把这个else和if连在一起

72
00:02:28,319 --> 00:02:30,659
也就是说所有的else都对齐啊

73
00:02:30,659 --> 00:02:31,860
所有的else都对齐

74
00:02:31,860 --> 00:02:34,069
那么当然最后会有一个孤lead

75
00:02:34,069 --> 00:02:35,419
这个else后面是没有if

76
00:02:35,419 --> 00:02:37,550
但当中呢每个if都在那

77
00:02:37,550 --> 00:02:39,519
因为如果我们不这么写哈

78
00:02:39,519 --> 00:02:40,899
如果我们不这么写

79
00:02:40,899 --> 00:02:42,759
我们这代码会写成什么样呢

80
00:02:42,759 --> 00:02:44,319
因为呢我们觉得呃

81
00:02:44,319 --> 00:02:45,819
按照我们前面讲的一个原则呢

82
00:02:45,819 --> 00:02:47,500
所有的fl后面都要有大括号

83
00:02:47,500 --> 00:02:47,800
对不对

84
00:02:47,800 --> 00:02:49,270
所以在这个else后面

85
00:02:49,270 --> 00:02:51,159
其实你本来应该要有一个大括号

86
00:02:51,159 --> 00:02:52,689
而这个大括号呢

87
00:02:52,689 --> 00:02:55,870
需要在后面有一个对应的结尾的大括号

88
00:02:55,870 --> 00:02:59,808
那么这里面的语句呢再往里面推好

89
00:02:59,808 --> 00:03:02,838
于是呢我们就要本来应该要写成这个样子

90
00:03:02,838 --> 00:03:05,889
也就是说在第一个if的else

91
00:03:05,889 --> 00:03:07,449
后面是一个大括号

92
00:03:07,449 --> 00:03:10,949
这个大括号后面呢里面呢会有一个if语句

93
00:03:10,949 --> 00:03:13,409
那假如说在这个else后面还有衣服的话

94
00:03:13,409 --> 00:03:15,629
那么我们需要在这里再来一个if f

95
00:03:15,629 --> 00:03:19,218
比如说f x大于五的话

96
00:03:19,218 --> 00:03:21,318
我们是一种什么样的计算

97
00:03:21,318 --> 00:03:24,498
然后再else的话是一种什么样的计算

98
00:03:24,498 --> 00:03:26,340
比如说x等于三乘以x

99
00:03:28,438 --> 00:03:29,568
那你可以想见

100
00:03:29,568 --> 00:03:30,829
如果这么走下去呢

101
00:03:30,829 --> 00:03:33,659
这个随着我的这个啊

102
00:03:34,079 --> 00:03:36,650
分段函数的各种条件的增加

103
00:03:36,650 --> 00:03:40,280
我的这个代码呢会越来越往右边偏

104
00:03:40,280 --> 00:03:41,990
会越来越往右边偏

105
00:03:41,990 --> 00:03:45,349
那最终呢可能会很往右边去

106
00:03:45,349 --> 00:03:47,759
我们的屏幕的大小是有限的

107
00:03:48,759 --> 00:03:50,280
尤其是在早年

108
00:03:50,280 --> 00:03:52,800
我们现在当然这个屏幕可以很宽

109
00:03:52,800 --> 00:03:54,389
你可以做宽屏

110
00:03:54,389 --> 00:03:55,560
甚至你觉得宽屏不够

111
00:03:55,560 --> 00:03:57,520
我可以搞两块屏幕摆在那

112
00:03:57,539 --> 00:04:00,199
但是当年没有那么幸运

113
00:04:01,179 --> 00:04:02,818
所以在那个时候呢

114
00:04:02,818 --> 00:04:05,819
人们就想出了一种另外的编排

115
00:04:05,819 --> 00:04:07,349
这些if else的方式

116
00:04:07,349 --> 00:04:09,240
就是让所有的else对齐

117
00:04:09,240 --> 00:04:10,830
其实这样看起来也很整齐

118
00:04:10,830 --> 00:04:11,780
也很好看

119
00:04:11,780 --> 00:04:12,620
那样子的时候呢

120
00:04:12,620 --> 00:04:15,780
我们就把这个else后面的大括号给取消掉

121
00:04:16,939 --> 00:04:19,418
让这个f和这个else对在一起

122
00:04:19,418 --> 00:04:22,819
那么它后面所有东西都可以往左边

123
00:04:22,819 --> 00:04:23,629
回来一个

124
00:04:23,629 --> 00:04:27,470
然后这个衣服再去和else拼在一起

125
00:04:27,470 --> 00:04:28,970
又可以再回去一个

126
00:04:28,970 --> 00:04:32,019
最后还可以省掉两个结尾的大括号

127
00:04:32,620 --> 00:04:37,189
这样子做出来的这个我们叫做吉连的fs

128
00:04:37,189 --> 00:04:38,120
另外呢

129
00:04:38,120 --> 00:04:40,490
我们刚才的代码是长成这个样子的啊

130
00:04:40,490 --> 00:04:43,310
我们有一个专门的变量f

131
00:04:43,310 --> 00:04:46,408
来记录你在这个级联的各种条件当中

132
00:04:46,408 --> 00:04:49,048
每一步到底最终确定下来

133
00:04:49,048 --> 00:04:50,519
这个f的值是多少

134
00:04:50,519 --> 00:04:52,839
也有人喜欢写出这样的代码来

135
00:04:53,879 --> 00:04:57,259
他没有用那个f变量啊

136
00:04:57,259 --> 00:04:58,310
他发现说

137
00:04:58,310 --> 00:05:00,620
你反正最后是要把这个f的值输出嘛

138
00:05:00,620 --> 00:05:03,529
所以每次衣服有一个条件决定了

139
00:05:03,529 --> 00:05:04,730
那我就put in the f

140
00:05:04,730 --> 00:05:06,110
每次有一个条件决定了

141
00:05:06,110 --> 00:05:08,750
我就pa这两种代码

142
00:05:08,750 --> 00:05:11,959
我个人会比较推荐左边的这种

143
00:05:12,360 --> 00:05:14,129
左边这种好处在哪儿呢

144
00:05:14,129 --> 00:05:15,899
我们叫做单一出口

145
00:05:16,600 --> 00:05:19,170
也就是说这个程序里头

146
00:05:19,170 --> 00:05:23,420
这一大段都和你怎么去使用那个f没关系

147
00:05:23,718 --> 00:05:25,459
右边这个代码就写死了

148
00:05:25,459 --> 00:05:28,338
你的f只能做你的这个结果只做一件事情

149
00:05:28,338 --> 00:05:30,300
就是print f给人家看

150
00:05:30,560 --> 00:05:32,240
而左边这段代码呢

151
00:05:32,240 --> 00:05:34,040
我只是去把这个结果算出来

152
00:05:34,040 --> 00:05:36,910
至于说我最终是给人家看

153
00:05:36,910 --> 00:05:38,529
还是在参与其他计算

154
00:05:38,529 --> 00:05:40,029
还是如果我写一个函数

155
00:05:40,029 --> 00:05:41,709
接下来我们会学到怎么写一个函数

156
00:05:41,709 --> 00:05:42,430
我写一个函数

157
00:05:42,430 --> 00:05:45,850
要把这个值返回给更高层的地方去做处理

158
00:05:45,850 --> 00:05:48,199
都可以是灵活的

159
00:05:48,199 --> 00:05:50,629
而右边的代码呢就写死了

160
00:05:50,629 --> 00:05:54,059
他在每一个衣服里头都有出口

161
00:05:54,059 --> 00:05:56,158
所谓出口不一定指的是

162
00:05:56,158 --> 00:05:57,449
离开这个代码的地方

163
00:05:57,449 --> 00:06:00,939
我们再把这个值直接不给用户看了

164
00:06:00,939 --> 00:06:02,170
这就是一种出口

165
00:06:02,170 --> 00:06:03,790
所以左边的好处是什么

166
00:06:03,790 --> 00:06:04,660
单一出口

