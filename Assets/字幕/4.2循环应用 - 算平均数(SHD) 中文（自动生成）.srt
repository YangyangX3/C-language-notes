1
00:00:04,419 --> 00:00:05,139
我们再来看一个例子

2
00:00:05,139 --> 00:00:06,439
我们要来算平均数

3
00:00:06,439 --> 00:00:07,158
算平均数

4
00:00:07,158 --> 00:00:08,599
大家都知道这个公式很简单

5
00:00:08,599 --> 00:00:09,739
我把所有的数都加起来

6
00:00:09,739 --> 00:00:10,398
加起来以后呢

7
00:00:10,398 --> 00:00:12,528
去除以那个n他们的个数

8
00:00:12,528 --> 00:00:13,939
我们就得到平均数了

9
00:00:15,058 --> 00:00:17,359
那么我们程序呢可能是要这样子

10
00:00:17,359 --> 00:00:20,820
我们去读入一系列的正整数

11
00:00:21,019 --> 00:00:24,199
然后如果你读到了一个-1

12
00:00:24,199 --> 00:00:27,589
就表示说这个数据呢读完了

13
00:00:27,589 --> 00:00:30,289
因为我们一开始不知道到底有多少个整数

14
00:00:30,289 --> 00:00:32,390
要来要读进来做这个平均数

15
00:00:32,390 --> 00:00:33,929
所以我们先一个个的读

16
00:00:33,929 --> 00:00:36,719
读到什么时候读进来的那个数是-1了

17
00:00:36,719 --> 00:00:38,479
那么我们就要停下来

18
00:00:39,000 --> 00:00:41,130
然后把之前那些书都加起来

19
00:00:41,130 --> 00:00:43,560
最后呢去除以那个n n是什么

20
00:00:43,560 --> 00:00:45,119
就是你在读那个书的过程当中

21
00:00:45,119 --> 00:00:45,659
读一个加一个

22
00:00:45,659 --> 00:00:46,200
读一个加一个

23
00:00:46,200 --> 00:00:47,219
你有个计数器

24
00:00:47,219 --> 00:00:48,450
有个计数的值

25
00:00:48,450 --> 00:00:49,829
这个计数的值会表达

26
00:00:49,829 --> 00:00:51,689
你到底读进了多少个整数

27
00:00:51,689 --> 00:00:54,619
然后用那个和去除以那个整数

28
00:00:54,719 --> 00:00:56,640
最后去输出那个结果

29
00:00:56,640 --> 00:00:59,338
所以这个程序要怎么写

30
00:00:59,579 --> 00:01:00,659
那同样的

31
00:01:00,659 --> 00:01:03,899
我们知道我们想一个程序需要想什么

32
00:01:03,960 --> 00:01:06,689
有什么数据要要读进来

33
00:01:06,689 --> 00:01:08,579
要做计算要处理的

34
00:01:08,579 --> 00:01:10,719
然后有什么样的算法

35
00:01:10,819 --> 00:01:12,799
然后把这个算法画成流程图

36
00:01:12,799 --> 00:01:14,900
最后变成我的程序

37
00:01:14,900 --> 00:01:16,519
我们要什么变量呢

38
00:01:16,780 --> 00:01:20,500
显然呃我们需要有变量去记下来

39
00:01:20,500 --> 00:01:24,200
我们读到的用户输入的那一个数对吧

40
00:01:24,200 --> 00:01:25,819
这个是要有的

41
00:01:25,819 --> 00:01:30,739
然后我们要不要把每一个数都记下来

42
00:01:31,180 --> 00:01:32,200
第一个数记下来

43
00:01:32,200 --> 00:01:33,159
第二个数加第三个数据

44
00:01:33,159 --> 00:01:35,079
一直到第1万个数也都记下来了

45
00:01:35,340 --> 00:01:37,469
其实不需要对吧

46
00:01:37,469 --> 00:01:39,000
因为我们只要求平均数

47
00:01:39,000 --> 00:01:41,840
所以我们可以先用一个变量呢

48
00:01:42,200 --> 00:01:44,239
每次读到的时候都加起来

49
00:01:44,239 --> 00:01:44,900
每次都加起来

50
00:01:44,900 --> 00:01:45,920
每次都加起来

51
00:01:45,920 --> 00:01:46,819
读一个数进来

52
00:01:46,819 --> 00:01:49,989
加到那个累加和的那个变量里头去

53
00:01:49,989 --> 00:01:51,250
有一个summary啊

54
00:01:51,250 --> 00:01:51,909
有个sum

55
00:01:51,909 --> 00:01:53,200
一般我们就会起这个名字

56
00:01:53,200 --> 00:01:54,730
把那个变量加进去加进去

57
00:01:54,730 --> 00:01:56,200
加进去一直都加进去

58
00:01:56,219 --> 00:01:58,230
另外呢我们还需要有个变量

59
00:01:58,230 --> 00:01:59,459
每读一个数进来

60
00:01:59,459 --> 00:02:02,670
它要加加加1+1+1+1+1做计数

61
00:02:02,670 --> 00:02:03,500
对不对

62
00:02:03,680 --> 00:02:05,618
当读到-1的时候

63
00:02:06,519 --> 00:02:08,310
我们这个循环就结束

64
00:02:08,310 --> 00:02:11,099
然后去把这两个数

65
00:02:11,099 --> 00:02:14,659
这个累加和和这个个数呢去做一个除法

66
00:02:15,460 --> 00:02:17,099
所以这是我们在这个程序当中

67
00:02:17,099 --> 00:02:18,300
要用到的变量

68
00:02:19,338 --> 00:02:21,338
我们的算法呢是这样子

69
00:02:21,338 --> 00:02:22,538
可以是这样子的啊

70
00:02:22,538 --> 00:02:24,248
我们先初始化我们的变量上

71
00:02:24,248 --> 00:02:25,808
表达这个累加和的

72
00:02:25,808 --> 00:02:28,558
表达那个count个数的初始化

73
00:02:28,558 --> 00:02:29,549
它们两个为零

74
00:02:29,549 --> 00:02:31,139
然后呢我们读一个number进来

75
00:02:31,139 --> 00:02:32,278
我们总要读一个number

76
00:02:32,278 --> 00:02:34,289
所以先去判断条件没有意义

77
00:02:34,289 --> 00:02:35,699
我们先去读个number好了

78
00:02:35,699 --> 00:02:37,319
如果这个不是-1

79
00:02:37,319 --> 00:02:39,479
那我们把这个number呢加到sum里头去

80
00:02:39,479 --> 00:02:40,830
然后cd加一

81
00:02:40,830 --> 00:02:41,949
再回到二

82
00:02:41,949 --> 00:02:43,629
那如果number是-1的

83
00:02:43,629 --> 00:02:45,310
那我们就算结果出来就好了

84
00:02:45,310 --> 00:02:47,409
所以流程图呢就可以画成这样子

85
00:02:47,409 --> 00:02:50,439
do number啊不等于-1吗啊条件满足的

86
00:02:50,439 --> 00:02:53,860
那么some加加some加等于number count加加

87
00:02:53,860 --> 00:02:54,550
然后回去

88
00:02:54,550 --> 00:02:56,740
否则的话呢我们就计算和打印结果

89
00:02:57,139 --> 00:03:00,199
这是我们的算法好

90
00:03:00,199 --> 00:03:02,090
我们来看能不能把这个程序给做出来哈

91
00:03:02,090 --> 00:03:04,490
那我们现在呃有了这三个变量啊

92
00:03:04,490 --> 00:03:07,009
number是我们准备要读进来的那个东西

93
00:03:07,009 --> 00:03:10,169
所以呢显然我们会需要有一个caf呢

94
00:03:10,169 --> 00:03:11,860
来帮我们读那个number

95
00:03:13,498 --> 00:03:16,068
千万别忘了那个and符号啊

96
00:03:16,068 --> 00:03:17,449
然后读进来之后呢

97
00:03:17,449 --> 00:03:20,580
呃我们首先要判断一下说如果这个number呢

98
00:03:21,338 --> 00:03:23,489
这个不是-1的话

99
00:03:23,489 --> 00:03:26,389
那我们要来做那个加的事情

100
00:03:26,389 --> 00:03:26,750
对不对

101
00:03:26,750 --> 00:03:30,319
所以我们要让some呢加等于这个number

102
00:03:30,319 --> 00:03:33,050
所以我们在前面已经让sam的初始值为零了

103
00:03:33,050 --> 00:03:35,449
我们要做一个累积的核

104
00:03:38,349 --> 00:03:39,789
它是一个干净的呃

105
00:03:39,789 --> 00:03:42,069
开始的地方每每读到一个number

106
00:03:42,069 --> 00:03:44,729
我们就把那个number呢加到那个sum里面去

107
00:03:44,729 --> 00:03:46,289
另外呢我们还需要做一件事情

108
00:03:46,289 --> 00:03:48,449
就是我们要用这个count加加count

109
00:03:48,449 --> 00:03:50,719
表明的是我们在这个过程当中

110
00:03:50,719 --> 00:03:52,629
读进来了多少个数据

111
00:03:52,629 --> 00:03:54,099
所以每读一个数

112
00:03:54,099 --> 00:03:55,270
并且它不是-1的话

113
00:03:55,270 --> 00:03:56,439
我们就要讲一下

114
00:03:56,439 --> 00:03:57,800
那接下来呢

115
00:03:59,099 --> 00:04:01,770
我们要跟我们要不断的去读这些东西

116
00:04:01,770 --> 00:04:02,129
对不对

117
00:04:02,129 --> 00:04:03,389
只要它不是-1

118
00:04:03,389 --> 00:04:05,129
我们就要继续读下去

119
00:04:05,129 --> 00:04:05,969
只要他不是-1

120
00:04:05,969 --> 00:04:07,169
就要继续读下去

121
00:04:07,169 --> 00:04:09,060
读到它是-1为止

122
00:04:09,060 --> 00:04:11,099
所以我们需要在这儿有循环

123
00:04:12,180 --> 00:04:13,360
用哪个循环

124
00:04:13,719 --> 00:04:16,000
我们先把代码写成这个样子之后

125
00:04:16,000 --> 00:04:17,439
我们再来想用哪个循环

126
00:04:17,439 --> 00:04:19,060
我们就很容易想到说好

127
00:04:19,060 --> 00:04:20,269
那我们是不是这样

128
00:04:20,269 --> 00:04:21,738
我们在这儿有一个while

129
00:04:21,738 --> 00:04:25,189
说这个number不等于-1的话

130
00:04:25,189 --> 00:04:26,449
我们是要继续的

131
00:04:26,449 --> 00:04:30,750
所以我们在最前面就需要有一个do了

132
00:04:30,750 --> 00:04:33,029
说我们来做这个循环

133
00:04:33,029 --> 00:04:35,298
我们读进一个数

134
00:04:35,298 --> 00:04:36,769
如果它不等于-1

135
00:04:36,769 --> 00:04:39,500
那我们要把它加到那个sum里头去

136
00:04:39,500 --> 00:04:40,759
计数要加一

137
00:04:40,759 --> 00:04:43,459
然后如果确实刚才读到的不是-1

138
00:04:43,459 --> 00:04:47,139
那么我们要回头回到这里再来读下一个数

139
00:04:47,218 --> 00:04:50,278
ok如果这些数都读到了

140
00:04:50,278 --> 00:04:52,139
最后那个number已经是-1了

141
00:04:52,139 --> 00:04:53,699
那我们接下来要做的事情

142
00:04:53,699 --> 00:04:57,319
就应该是要去输出一个说呃

143
00:04:57,319 --> 00:04:58,879
我们有一个嗯

144
00:04:58,879 --> 00:04:59,899
我现在还不知道是什么

145
00:04:59,899 --> 00:05:04,100
如果说我们现在就让这个some去除以

146
00:05:04,100 --> 00:05:06,459
那个count的话

147
00:05:07,319 --> 00:05:08,718
ok这里会有一点点小问题

148
00:05:08,718 --> 00:05:11,908
就是我们的sum和count都是整数

149
00:05:11,908 --> 00:05:13,889
所以如果我直接用百分号d

150
00:05:13,889 --> 00:05:14,788
当然这是对的

151
00:05:14,788 --> 00:05:15,509
没有问题

152
00:05:15,509 --> 00:05:17,189
那唯一的缺点是说

153
00:05:17,189 --> 00:05:20,550
这个平均数是不带小数点的

154
00:05:20,550 --> 00:05:23,149
如果我们希望这个平均数带小数点

155
00:05:23,149 --> 00:05:24,829
ok我们有几种做法

156
00:05:24,829 --> 00:05:26,870
其中一个做法是说

157
00:05:26,870 --> 00:05:28,370
那我们可不可以先这样

158
00:05:28,370 --> 00:05:31,459
我们让一点去乘以那个su

159
00:05:31,839 --> 00:05:34,240
于是因为一点是浮点数

160
00:05:35,680 --> 00:05:36,699
它就变成浮点了

161
00:05:36,699 --> 00:05:37,899
然后再除以cd

162
00:05:37,899 --> 00:05:38,860
那就是浮点的运算

163
00:05:38,860 --> 00:05:39,639
那这里呢

164
00:05:39,639 --> 00:05:41,560
我们就要把百分号d改成百分号f

165
00:05:41,560 --> 00:05:43,259
顺便我们加一个反斜杠n

166
00:05:43,259 --> 00:05:45,480
让他有个回车换行输出

167
00:05:45,480 --> 00:05:46,439
看起来好看一点

168
00:05:46,439 --> 00:05:50,339
ok这个代码是可以做平均的

169
00:05:51,720 --> 00:05:55,459
不过我们觉得这有一点点小小不舒服的地

170
00:05:55,459 --> 00:05:59,089
方是你看我们在第11行判断了一下

171
00:05:59,089 --> 00:06:00,800
number不等于-1

172
00:06:01,259 --> 00:06:03,779
然后到了第15行

173
00:06:03,779 --> 00:06:07,579
我们还要再判断一下number是不是不等于-1

174
00:06:08,660 --> 00:06:10,360
因为这是在循环里面的

175
00:06:10,360 --> 00:06:10,779
这句衣服

176
00:06:10,779 --> 00:06:13,569
在循环里面意味着我们循环的每一轮

177
00:06:13,569 --> 00:06:15,399
对于number是否等于-1

178
00:06:15,399 --> 00:06:16,980
要做两次判断

179
00:06:18,139 --> 00:06:20,798
这是比较浪费的

180
00:06:20,798 --> 00:06:22,600
能不能只做一次

181
00:06:23,759 --> 00:06:25,218
能不能只做一次

182
00:06:25,218 --> 00:06:29,490
就在于说你看我们做了这个skin f之后

183
00:06:29,490 --> 00:06:33,149
我们要做的事情是判断number不等于-1

184
00:06:33,149 --> 00:06:34,379
如果它不等于-1

185
00:06:34,379 --> 00:06:35,910
我们要去把它加进去

186
00:06:35,910 --> 00:06:40,500
如果我们把这个循环去掉

187
00:06:40,500 --> 00:06:46,848
如果我们让这个衣服变成while对吧

188
00:06:46,848 --> 00:06:48,199
while也是要判断条件

189
00:06:48,199 --> 00:06:48,858
条件满足了

190
00:06:48,858 --> 00:06:49,699
我们就进去

191
00:06:49,699 --> 00:06:52,038
当然while还要做的事情是他还要再回来

192
00:06:52,038 --> 00:06:53,718
所以做完这个count加加以后

193
00:06:53,718 --> 00:06:54,819
他要回来

194
00:06:56,199 --> 00:06:58,569
如果我们只是把代码写成这个样子

195
00:06:58,569 --> 00:06:59,800
你读了一个数

196
00:06:59,800 --> 00:07:01,569
然后这个程序就死循环了

197
00:07:01,569 --> 00:07:04,100
因为我们在循环里面没有去改变

198
00:07:04,100 --> 00:07:06,560
循环条件当中的那个变量number

199
00:07:06,560 --> 00:07:08,329
我们没有去读第二个数

200
00:07:08,329 --> 00:07:09,850
我们怎么去读第二个数

201
00:07:09,850 --> 00:07:12,759
我们可以在这里加上一句caf

202
00:07:12,779 --> 00:07:18,040
说我还要再次的来读下一个number

203
00:07:20,920 --> 00:07:23,459
我们也可以把这个循环写成这个样子

204
00:07:23,459 --> 00:07:24,689
用while循环

205
00:07:24,689 --> 00:07:25,920
而不是用do while循环

206
00:07:25,920 --> 00:07:28,699
我们可以省去一次衣服的判断

207
00:07:28,699 --> 00:07:31,500
那一次衣服的判断是在循环里头的

208
00:07:31,839 --> 00:07:33,459
原来我们用do while的代码

209
00:07:33,459 --> 00:07:34,660
每次要做两次

210
00:07:34,660 --> 00:07:35,920
number不等于负的判断

211
00:07:35,920 --> 00:07:37,300
现在我们只要做一次了

212
00:07:37,300 --> 00:07:39,639
尽管我们程序里面出现了两个skin f

213
00:07:39,639 --> 00:07:42,879
但是前面的那个scaf在整个程序来说

214
00:07:42,879 --> 00:07:44,149
他只做一遍

215
00:07:44,149 --> 00:07:46,189
所以我们这样做的循环

216
00:07:51,500 --> 00:07:55,089
所以我们看到在写这样的程序的过程当中

217
00:07:55,089 --> 00:07:59,170
你怎么做选择其实还是很重要的

218
00:07:59,170 --> 00:08:00,220
同一个程序

219
00:08:00,220 --> 00:08:03,040
同一个问题你可以用不同的方式去解决

220
00:08:03,040 --> 00:08:04,879
你可以用不同的循环去解决

221
00:08:04,879 --> 00:08:07,819
但是他们多少会有些差异

222
00:08:08,779 --> 00:08:12,750
你的不同的选择会决定了你的程序的优劣

223
00:08:12,750 --> 00:08:14,069
你的程序运行的速度

224
00:08:14,069 --> 00:08:15,899
你程序占用内存的大小等等

225
00:08:15,899 --> 00:08:18,319
这都是我们衡量程序的标志

226
00:08:20,579 --> 00:08:21,988
是不是容易被别人理解

227
00:08:21,988 --> 00:08:23,879
我相信我们把它写成while这个样子

228
00:08:23,879 --> 00:08:25,439
他还是很容易被别人理解的

