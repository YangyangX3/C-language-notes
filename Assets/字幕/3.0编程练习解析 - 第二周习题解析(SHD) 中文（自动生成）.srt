1
00:00:04,599 --> 00:00:05,860
我们来看第二题

2
00:00:05,860 --> 00:00:07,160
第二题

3
00:00:07,500 --> 00:00:10,800
实际上我们在视频当中给了类似的例子

4
00:00:10,800 --> 00:00:11,250
对吧

5
00:00:11,250 --> 00:00:14,378
因此当你有一个米的

6
00:00:14,378 --> 00:00:16,899
你去除0.3048

7
00:00:16,899 --> 00:00:20,618
你得到的是十进制的英尺

8
00:00:20,618 --> 00:00:23,010
对不对好

9
00:00:23,010 --> 00:00:25,140
所以这道题目实际上是什么呢

10
00:00:25,140 --> 00:00:27,089
我们读进来了一个厘米

11
00:00:27,089 --> 00:00:30,640
我们如果拿这个厘米去除以30.48

12
00:00:31,239 --> 00:00:34,698
这就是一个十进制的音质

13
00:00:35,799 --> 00:00:38,219
所以我们可以把它保

14
00:00:38,219 --> 00:00:41,369
保存在一个表示英尺的变量里头

15
00:00:41,369 --> 00:00:44,250
因为我们最后的结果也确实

16
00:00:44,250 --> 00:00:45,270
只要这个十进制的

17
00:00:45,270 --> 00:00:47,520
因此的整数部分它就是因此的数据

18
00:00:47,520 --> 00:00:51,198
那个小数部分我们还要给它换算成英寸的

19
00:00:51,198 --> 00:00:54,558
所以我们不妨就直接把这个浮点运算的结

20
00:00:54,558 --> 00:00:55,719
果也在这里

21
00:00:55,719 --> 00:00:58,090
cm虽然是整数

22
00:00:58,090 --> 00:00:59,920
但是因为后面是一个浮点数

23
00:00:59,920 --> 00:01:02,369
所以这已经是浮点数了

24
00:01:02,369 --> 00:01:04,859
但是我们把它保存在一个整数变量的时候

25
00:01:04,859 --> 00:01:07,920
它会自动帮我去做从整形

26
00:01:07,920 --> 00:01:10,618
从浮点到整数变量之间的转换

27
00:01:10,700 --> 00:01:12,769
这件事情在c可以这么做

28
00:01:12,769 --> 00:01:14,719
但是如果你学过其他的

29
00:01:14,719 --> 00:01:16,159
比如说c加加或者java

30
00:01:16,159 --> 00:01:17,480
其实它是不能这么做的

31
00:01:17,480 --> 00:01:19,519
他要用到我们后面才会讲到的一种技术

32
00:01:19,519 --> 00:01:21,340
叫做强制类型转换

33
00:01:21,340 --> 00:01:22,989
我们这正好现在没讲到

34
00:01:22,989 --> 00:01:24,989
但是正好c可以这么干

35
00:01:24,989 --> 00:01:27,599
然后那inch的事情呢

36
00:01:27,599 --> 00:01:31,019
就等于这个东西除以0.3048

37
00:01:31,019 --> 00:01:33,000
这是在这是它的实际制部分

38
00:01:33,000 --> 00:01:33,739
对不对

39
00:01:38,379 --> 00:01:40,540
这是它的整数部分

40
00:01:40,540 --> 00:01:41,980
所以减掉减下来

41
00:01:41,980 --> 00:01:43,659
减下来的结果是那个小数部分

42
00:01:43,659 --> 00:01:45,370
然后这个小数部分是十进制的

43
00:01:45,370 --> 00:01:47,968
我们要把它换算成12进制的

44
00:01:47,968 --> 00:01:49,528
因此这个是进制的

45
00:01:49,528 --> 00:01:50,799
要乘以12

46
00:01:52,299 --> 00:01:54,269
最后输出这两个字就可以了

47
00:01:54,269 --> 00:01:56,349
这道题目其实更简单

48
00:01:56,349 --> 00:01:56,769
对不对

49
00:01:56,769 --> 00:01:59,289
我们在呃课程当中讲过了

50
00:01:59,289 --> 00:02:00,578
如果我有两个数

51
00:02:00,578 --> 00:02:02,289
两个时间怎么做减法

52
00:02:02,289 --> 00:02:05,560
现在呢是给一个起始时间

53
00:02:05,560 --> 00:02:07,480
给一个经过的分钟数

54
00:02:07,480 --> 00:02:09,719
要去求后面的一个时间

55
00:02:10,819 --> 00:02:13,360
当然这里面首先呢第一件事情是

56
00:02:13,360 --> 00:02:15,639
他会输入这样一个数来表示时间

57
00:02:15,639 --> 00:02:19,740
我们要从里面去分离出小时和分钟

58
00:02:19,740 --> 00:02:24,419
现在如果我们有1120这样一个数字

59
00:02:24,419 --> 00:02:25,409
这个数字读进来

60
00:02:25,409 --> 00:02:27,419
这是一个十进制的整数

61
00:02:27,419 --> 00:02:29,009
1120

62
00:02:29,009 --> 00:02:29,550
但是呢

63
00:02:29,550 --> 00:02:33,199
我们知道它其实可以从中间分成两部分

64
00:02:33,199 --> 00:02:35,539
我们要用它前面那两位表示小数

65
00:02:35,539 --> 00:02:36,800
后面两位表示分钟

66
00:02:36,800 --> 00:02:40,879
所以怎么把一个四位数或者三位数的整数

67
00:02:40,879 --> 00:02:43,189
给它分割成前面两前后两部分呢

68
00:02:43,189 --> 00:02:45,439
我们用的是100

69
00:02:45,679 --> 00:02:49,998
如果对它拿它对100座整数除法

70
00:02:49,998 --> 00:02:51,530
我们就得到了11

71
00:02:51,530 --> 00:02:54,680
我们如果拿它对100做百分号

72
00:02:54,680 --> 00:02:56,870
也就是取余我们就得到了后面两位

73
00:02:56,870 --> 00:02:58,319
就是得到了20

74
00:02:58,719 --> 00:03:02,000
所以这样子我们就分离出了小时和分钟

75
00:03:02,618 --> 00:03:04,859
分离出小时和分钟以后

76
00:03:04,859 --> 00:03:08,639
我们需要把它统一到分钟那个单位上

77
00:03:08,639 --> 00:03:11,800
所以这个11要去乘以60

78
00:03:12,259 --> 00:03:15,500
再和这个20去加起来

79
00:03:15,500 --> 00:03:19,879
因此我们有了660加

80
00:03:22,498 --> 00:03:24,019
60+20

81
00:03:25,158 --> 00:03:29,599
于是这相当于680分钟

82
00:03:29,599 --> 00:03:30,349
对不对

83
00:03:30,349 --> 00:03:32,900
然后我们说经过了110分钟

84
00:03:32,900 --> 00:03:35,699
然后再和110分钟去做一个加法

85
00:03:35,879 --> 00:03:38,419
那我们得到了790

86
00:03:40,020 --> 00:03:40,819
790

87
00:03:40,819 --> 00:03:44,750
这是以分钟表达的那个时间数时间的数字

88
00:03:44,750 --> 00:03:47,460
然后这个790里头

89
00:03:47,460 --> 00:03:49,620
我们要去分离出小时和分钟

90
00:03:49,620 --> 00:03:51,240
但是小时和分钟是60进制的

91
00:03:51,240 --> 00:03:55,569
因此对这个790去除60的整数

92
00:03:55,569 --> 00:03:57,879
得到了13

93
00:03:57,879 --> 00:04:02,300
然后对790拿60来做取余

94
00:04:02,300 --> 00:04:05,360
于是我们得到了啊

95
00:04:05,360 --> 00:04:06,400
得到了十

96
00:04:07,819 --> 00:04:10,229
这题目就是这么做的啊

97
00:04:10,229 --> 00:04:11,520
没没有其他的技巧

98
00:04:11,520 --> 00:04:13,680
也不需要用到什么呃

99
00:04:13,680 --> 00:04:17,170
这个我们第三周呃

100
00:04:17,170 --> 00:04:19,240
后面才会讲到的那些东西对吧

101
00:04:19,240 --> 00:04:21,639
那我现在有了两个数字

102
00:04:21,639 --> 00:04:22,540
13和十

103
00:04:22,540 --> 00:04:24,259
怎么把它最后再输出呢

104
00:04:24,259 --> 00:04:26,180
最后我们还得把它还原成

105
00:04:26,180 --> 00:04:27,740
像1120这样的东西

106
00:04:27,740 --> 00:04:31,759
所以还原的方法就是13去乘以十

107
00:04:31,860 --> 00:04:32,610
100

108
00:04:32,610 --> 00:04:33,779
13去乘以100

109
00:04:33,779 --> 00:04:35,639
再和这个十加起来是

110
00:04:35,639 --> 00:04:38,610
所以我们就有了1300+10

111
00:04:38,610 --> 00:04:40,899
于是就得到了1310

112
00:04:42,720 --> 00:04:44,420
我们在第二周出的题目

113
00:04:44,420 --> 00:04:47,959
一定是只用到第二周讲到的编程手段

114
00:04:47,959 --> 00:04:49,899
就能做的啊

115
00:04:49,899 --> 00:04:51,899
肯定不会用到以后的东西的

116
00:04:52,098 --> 00:04:53,629
这道逆序的三位数

117
00:04:53,629 --> 00:04:54,499
它已经告诉你了

118
00:04:54,499 --> 00:04:55,728
一定是三位数

119
00:04:55,728 --> 00:04:57,560
所以接下去的事情就是

120
00:04:57,560 --> 00:05:00,379
我要怎么去把它的每一位数给分离出来

121
00:05:00,379 --> 00:05:03,920
然后分离出来以后怎么再去把它给拼起来

122
00:05:03,920 --> 00:05:05,110
对不对啊

123
00:05:05,110 --> 00:05:06,279
再去拼起来

124
00:05:06,279 --> 00:05:09,790
所以这里面呢他而且明确强调说

125
00:05:09,790 --> 00:05:12,060
如果输入的数字有结尾零

126
00:05:12,060 --> 00:05:13,019
比如说输入700

127
00:05:13,019 --> 00:05:14,360
那输出应该是七

128
00:05:14,360 --> 00:05:15,589
而不是007

129
00:05:15,589 --> 00:05:18,139
所以我不是把每一位数字拿出来就输出

130
00:05:18,139 --> 00:05:20,329
而是应该把它拼成一个整数

131
00:05:20,329 --> 00:05:22,720
我们来看这个计算呢其实是这样子

132
00:05:22,720 --> 00:05:24,600
如果我有一个数叫做712

133
00:05:24,978 --> 00:05:26,538
那么这里的核心就是

134
00:05:26,538 --> 00:05:28,819
我如何去分离出这里的每一位数字来

135
00:05:28,819 --> 00:05:29,298
对不对

136
00:05:29,298 --> 00:05:30,769
对于一个三位数来说

137
00:05:30,769 --> 00:05:35,100
如果我们拿它去对100做整除

138
00:05:35,199 --> 00:05:37,420
那就相当于把后面的这两位扔掉

139
00:05:37,420 --> 00:05:40,699
因此我们就会得到它的百位数

140
00:05:40,939 --> 00:05:45,170
如果我们拿它对十取余

141
00:05:45,170 --> 00:05:48,889
就是除以十取余数部分

142
00:05:48,889 --> 00:05:51,528
这个时候呢我们就会得到它的个位数

143
00:05:51,528 --> 00:05:53,959
所以这两个比较容易拿到

144
00:05:53,959 --> 00:05:54,259
对不对

145
00:05:54,259 --> 00:05:57,990
百位数除以100个位数取余十

146
00:05:57,990 --> 00:06:00,269
那么中间这个数字怎么得到呢

147
00:06:00,269 --> 00:06:01,800
中间这个数字其实有两种方案

148
00:06:01,800 --> 00:06:02,639
来得到一种方案

149
00:06:02,639 --> 00:06:03,240
是这样

150
00:06:03,240 --> 00:06:05,600
我对100取余

151
00:06:05,639 --> 00:06:07,949
这就得到了12

152
00:06:07,949 --> 00:06:11,370
然后这个12呢我再去除以整除十

153
00:06:11,370 --> 00:06:13,339
于是就可以得到那个一了

154
00:06:13,459 --> 00:06:14,660
还有一种方案呢

155
00:06:14,660 --> 00:06:16,480
我可以对十

156
00:06:18,839 --> 00:06:20,480
做整除对十

157
00:06:20,480 --> 00:06:21,199
做整除的时候

158
00:06:21,199 --> 00:06:22,939
我得到的是71

159
00:06:23,218 --> 00:06:27,238
然后我对71再来对十做取余

160
00:06:27,238 --> 00:06:29,000
于是我就得到了这个一

161
00:06:29,259 --> 00:06:30,939
那么通过这个方案

162
00:06:30,939 --> 00:06:32,379
我得到了这三个数

163
00:06:32,379 --> 00:06:34,779
然后剩下来的事情无非是那个

164
00:06:34,779 --> 00:06:39,399
如果我们把呃百位叫做a中间这个是b

165
00:06:39,399 --> 00:06:40,060
十位是b

166
00:06:40,060 --> 00:06:40,720
这是c的话

167
00:06:40,720 --> 00:06:44,189
那么剩下的事情就是c去乘以多少100

168
00:06:44,189 --> 00:06:47,100
再加上b去乘以十

169
00:06:47,100 --> 00:06:50,939
再加上a那最后这就是结果了啊

170
00:06:50,939 --> 00:06:53,819
为什么我们不希望你是直接去说哎

171
00:06:53,819 --> 00:06:55,079
我做这样一个事情行不行

172
00:06:55,079 --> 00:06:58,339
我输出百分号d百分号d百分号d啊

173
00:06:58,579 --> 00:06:59,660
都连在一起的

174
00:06:59,660 --> 00:07:01,819
百分号d双引号

175
00:07:01,819 --> 00:07:07,339
然后呢后面说哎我就来c b如果这样输出

176
00:07:08,000 --> 00:07:09,699
什么情况下会不对呢

177
00:07:09,699 --> 00:07:14,019
比如说我们题目里的那个例子700对吧

178
00:07:14,019 --> 00:07:15,430
如果你是700的话

179
00:07:15,430 --> 00:07:17,319
这种情况下它就会输出007

180
00:07:17,319 --> 00:07:18,639
而不是输出七了

181
00:07:18,639 --> 00:07:22,660
这个题目是大家觉得最难的题目呃

182
00:07:22,660 --> 00:07:26,139
这个题目其实最后程序写出来会吓你一跳

183
00:07:28,019 --> 00:07:29,060
非常简单

184
00:07:29,060 --> 00:07:30,379
所以这个题目难在哪儿呢

185
00:07:30,379 --> 00:07:31,459
其实难在数学

186
00:07:31,459 --> 00:07:32,120
难在

187
00:07:32,120 --> 00:07:35,000
很多同学可能不是特别理解

188
00:07:35,000 --> 00:07:36,019
bcd是怎么回事

189
00:07:36,019 --> 00:07:36,740
或者不理解

190
00:07:39,120 --> 00:07:40,379
这些进制是怎么回事

191
00:07:40,379 --> 00:07:42,420
甚至可能不理解0x12 是什么意思

192
00:07:42,420 --> 00:07:44,538
好我们慢慢来讲这件事情

193
00:07:44,538 --> 00:07:46,860
那么关于bcd是怎么回事呢

194
00:07:46,920 --> 00:07:48,720
呃首先我们要知道

195
00:07:48,720 --> 00:07:51,720
无论在外面表现出来是什么样子的东西

196
00:07:51,720 --> 00:07:54,519
在计算机的内部它都是二进制

197
00:07:54,939 --> 00:07:58,660
所以在外面表现就是它可能是一个整数啊

198
00:07:58,660 --> 00:07:59,620
比如说int型的变量

199
00:07:59,620 --> 00:08:00,620
它是一个整数

200
00:08:00,620 --> 00:08:01,459
可能它是一个

201
00:08:01,459 --> 00:08:03,500
我们后面会学到像字符类型啊

202
00:08:03,500 --> 00:08:05,329
或者是我们已经学过的double类型

203
00:08:05,329 --> 00:08:06,769
它在战争内部呢

204
00:08:06,769 --> 00:08:08,779
都是以二进制的形式存在的

205
00:08:09,699 --> 00:08:11,939
比如说如果我们有一个整数是八

206
00:08:12,439 --> 00:08:14,750
那么这个18这个整数呢

207
00:08:14,750 --> 00:08:16,730
它变成二进制是多少呢

208
00:08:16,730 --> 00:08:18,548
如果你不知道怎么算

209
00:08:18,548 --> 00:08:21,428
你可以用你的计算机上的那个计算器啊

210
00:08:21,428 --> 00:08:22,778
电脑上都会有计算器

211
00:08:22,778 --> 00:08:24,218
比如我的这个计算器

212
00:08:24,218 --> 00:08:27,759
如果把它设置到这个编程模式的话

213
00:08:27,759 --> 00:08:29,949
那么它就可以用来做十进制

214
00:08:29,949 --> 00:08:31,779
16进制之间的这些换算

215
00:08:31,779 --> 00:08:33,538
现在我们如果有18

216
00:08:33,759 --> 00:08:35,080
那么在这里它就列出来

217
00:08:35,080 --> 00:08:35,500
告诉你说

218
00:08:35,500 --> 00:08:39,068
它对应的二进制呢就是00010010

219
00:08:39,068 --> 00:08:42,339
那也就是说18呢就是0001

220
00:08:42,339 --> 00:08:44,440
0010啊

221
00:08:44,440 --> 00:08:46,639
这样的这个二进制的一个序列

222
00:08:46,639 --> 00:08:49,759
因为二进制每一个位上面只有零或者一

223
00:08:49,759 --> 00:08:51,799
所以呢哪怕18这么小的数

224
00:08:51,799 --> 00:08:53,360
它也变得很大啊

225
00:08:53,360 --> 00:08:54,769
有八个呃

226
00:08:54,769 --> 00:08:56,870
未来表达这样一个18的数

227
00:08:56,870 --> 00:09:01,100
那么所以呢我们在程序当中

228
00:09:01,100 --> 00:09:03,769
如果想要表达一个二进制的数呢

229
00:09:03,769 --> 00:09:05,720
直接用二进制会显得太长

230
00:09:05,720 --> 00:09:08,149
因此呢人们会用另外一种形式

231
00:09:08,149 --> 00:09:10,120
就是它的16进制

232
00:09:10,759 --> 00:09:12,460
我们回到计算器来看一下

233
00:09:12,460 --> 00:09:14,719
如果现在我们点一下16

234
00:09:15,039 --> 00:09:18,220
他就会给我们看到18这个十进制的数

235
00:09:18,220 --> 00:09:21,419
如果用16进制的方式去表达出来

236
00:09:21,419 --> 00:09:23,220
它是0x12 

237
00:09:23,220 --> 00:09:25,950
这里头呢0x是一个前缀

238
00:09:25,950 --> 00:09:29,279
这个前缀只是用来说明后面跟着的东西

239
00:09:29,279 --> 00:09:30,720
它不是十进制的

240
00:09:30,720 --> 00:09:32,669
因为如果你没有0x

241
00:09:32,669 --> 00:09:34,860
那么一二这两个字符放在那

242
00:09:34,860 --> 00:09:36,419
它可以是12 十进制的

243
00:09:36,419 --> 00:09:38,809
12也可以是16进制的

244
00:09:38,809 --> 00:09:39,750
0x12 

245
00:09:39,750 --> 00:09:41,100
也可以是八进制的

246
00:09:41,100 --> 00:09:42,509
还可以是其他进制的

247
00:09:42,509 --> 00:09:44,610
所以呢我们需要用0x来表达

248
00:09:44,610 --> 00:09:46,230
说它是16进制的

249
00:09:46,230 --> 00:09:49,139
因此呢这个00010010

250
00:09:49,139 --> 00:09:51,339
也可以被表达为0x12 

251
00:09:52,259 --> 00:09:55,500
所以实际上在计算机的内存里头

252
00:09:55,500 --> 00:09:57,779
存放的是00010010

253
00:09:57,779 --> 00:10:00,059
但是呢你可以把它表达为18

254
00:10:00,059 --> 00:10:03,059
你也可以把它表达为0x12 

255
00:10:03,720 --> 00:10:04,700
就是那么一个数

256
00:10:04,700 --> 00:10:06,809
看你把它理解成什么

257
00:10:06,809 --> 00:10:09,750
他在计算机内部呢其实是没有变化啊

258
00:10:09,750 --> 00:10:11,250
只是你把它理解为十进制

259
00:10:11,250 --> 00:10:13,460
还是把它理解为16 16进制

260
00:10:13,460 --> 00:10:15,919
那b c d的意思呢是说

261
00:10:15,919 --> 00:10:20,039
如果我有这样一个00010010的数

262
00:10:20,080 --> 00:10:21,610
我把这样的一个数

263
00:10:21,610 --> 00:10:23,019
每四个比特

264
00:10:23,019 --> 00:10:25,740
每四个二进制的位拿出来

265
00:10:26,139 --> 00:10:28,210
当做是一个十进制的v

266
00:10:28,210 --> 00:10:31,610
因为二的四次方是16

267
00:10:31,610 --> 00:10:36,109
可以表达十进制的0~9这十个数字

268
00:10:36,109 --> 00:10:37,969
所以呢对b c d来说

269
00:10:37,969 --> 00:10:40,788
0001就是bcd的一

270
00:10:40,788 --> 00:10:43,818
0010就是bcd的二

271
00:10:43,818 --> 00:10:45,500
把这个事情组合起来

272
00:10:45,539 --> 00:10:48,120
那么00010010

273
00:10:48,120 --> 00:10:50,219
在bcd里面就是12

274
00:10:50,340 --> 00:10:53,399
换句话说我们又多了一种表达形式

275
00:10:53,399 --> 00:10:55,899
同样还是00010010

276
00:10:55,940 --> 00:10:58,789
现在我们作为bcd来说

277
00:10:58,789 --> 00:11:00,259
它就是12

278
00:11:02,620 --> 00:11:06,000
所以你看同样是这八个比特

279
00:11:06,000 --> 00:11:07,320
八个位的二进制数

280
00:11:07,320 --> 00:11:08,859
十进制是18

281
00:11:08,940 --> 00:11:10,620
16进制是0x12 

282
00:11:10,620 --> 00:11:13,049
可是我们拿它当做b c d来理解

283
00:11:13,049 --> 00:11:15,179
它就是12

284
00:11:16,159 --> 00:11:20,859
因此如果现在告诉你它是18

285
00:11:21,460 --> 00:11:23,279
你怎么能够得到12呢

286
00:11:25,019 --> 00:11:29,000
无非就是把这个18变成16进制

287
00:11:29,000 --> 00:11:29,919
就可以了

288
00:11:30,860 --> 00:11:32,950
我们的题目里面已经限定说

289
00:11:32,950 --> 00:11:37,179
他绝对不会出现有a到f的所有进制数字

290
00:11:37,419 --> 00:11:38,500
换句话说

291
00:11:38,500 --> 00:11:41,139
你把这个我们给你的这个数

292
00:11:41,139 --> 00:11:42,879
变成16进制的时候

293
00:11:42,940 --> 00:11:45,820
他的那两位一定只有0~9

294
00:11:45,820 --> 00:11:47,139
一定只有0~9

295
00:11:47,139 --> 00:11:50,919
所以就正好是一个比cd数啊

296
00:11:50,919 --> 00:11:51,580
b c d也好

297
00:11:51,580 --> 00:11:52,360
16进制也好

298
00:11:52,360 --> 00:11:53,019
十进制也好

299
00:11:53,019 --> 00:11:55,059
其实都是同一个数

300
00:11:55,059 --> 00:11:56,860
在计算机内存里头的同一个数

301
00:11:56,860 --> 00:11:59,559
我们在外面以什么样的方式去看它

302
00:11:59,559 --> 00:12:02,019
所以这道题目最简单的方案是什么

303
00:12:02,019 --> 00:12:04,629
就是把一个你读一个十进制的数进来

304
00:12:04,629 --> 00:12:05,590
你读一个整数进来

305
00:12:05,590 --> 00:12:08,379
然后把这个整数呢换算成16进制

306
00:12:08,379 --> 00:12:10,379
可是我拿了一个整数

307
00:12:11,179 --> 00:12:12,340
比如这个18

308
00:12:12,340 --> 00:12:14,440
我怎么能够把它换算成16进制呢

309
00:12:14,440 --> 00:12:15,549
方法非常简单

310
00:12:15,549 --> 00:12:17,578
用16去做整除

311
00:12:18,399 --> 00:12:20,458
我们就得到了一

312
00:12:21,139 --> 00:12:24,250
我们用16去取余

313
00:12:24,250 --> 00:12:26,019
我们就得到了二

314
00:12:26,179 --> 00:12:29,539
然后把这个1x10加上那个二

315
00:12:29,539 --> 00:12:31,159
我们就得到了12

316
00:12:32,080 --> 00:12:33,779
这就是这道题目的做法

317
00:12:33,779 --> 00:12:36,299
当然也有同学看到一个非常简单的方案

318
00:12:36,299 --> 00:12:37,950
我们知道我们在print f的时候

319
00:12:37,950 --> 00:12:39,299
我们要给出一个格式字符串

320
00:12:39,299 --> 00:12:41,779
如果我们是2%d那个x

321
00:12:41,779 --> 00:12:44,330
它会以十进制的方式去输出那个x

322
00:12:44,330 --> 00:12:46,198
而如果我们是2%x

323
00:12:47,279 --> 00:12:49,759
他就会以16进制的方式去输出x

324
00:12:49,759 --> 00:12:52,940
可是这个时候他的输出不会带有前面的零

325
00:12:52,940 --> 00:12:53,330
x

326
00:12:53,330 --> 00:12:56,860
所以如果你前面做一个skin f

327
00:12:56,860 --> 00:12:58,870
说我要读进来一个百分号d

328
00:12:58,870 --> 00:13:00,639
这表示我也要以十进制的形式

329
00:13:00,639 --> 00:13:01,870
去读那个数进来

330
00:13:01,870 --> 00:13:04,500
然后以16进制的方式去输出

331
00:13:04,539 --> 00:13:07,080
就刚好能够完成我们这道题目

