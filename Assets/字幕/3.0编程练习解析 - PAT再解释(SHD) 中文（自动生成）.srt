1
00:00:04,639 --> 00:00:05,360
我们来研究一下

2
00:00:05,360 --> 00:00:07,820
我们第二周的这些编程题啊

3
00:00:07,820 --> 00:00:09,880
嗯他们到底是怎么样子的

4
00:00:10,500 --> 00:00:12,330
我们的编程题呢

5
00:00:12,330 --> 00:00:16,019
是在一个叫做p a t的这个网站上做的

6
00:00:16,019 --> 00:00:19,019
那么p a t呢是一个在线裁判系统

7
00:00:19,019 --> 00:00:22,379
它背后是计算机的程序

8
00:00:22,620 --> 00:00:25,079
你提交上去的这个源代码呢

9
00:00:25,079 --> 00:00:27,539
在服务器上会被重新编译

10
00:00:27,539 --> 00:00:29,160
然后运行

11
00:00:29,160 --> 00:00:34,500
运行的时候会给这个程序呢测试的数据

12
00:00:34,500 --> 00:00:37,140
然后取得你程序的输出

13
00:00:37,140 --> 00:00:41,140
拿你的输出和事先保存在那边的

14
00:00:41,140 --> 00:00:43,098
正确的输出做一个比较

15
00:00:43,719 --> 00:00:46,200
计算机是非常愚昧的

16
00:00:46,200 --> 00:00:49,198
或者说计算机是非常死板

17
00:00:49,359 --> 00:00:52,240
他只会做一个一比一的比较

18
00:00:52,240 --> 00:00:55,840
你的输出必须要和出题的人

19
00:00:55,840 --> 00:00:58,299
预想的输出完全一样才行

20
00:00:59,140 --> 00:01:01,459
所以在做ppt的题目的时候

21
00:01:02,420 --> 00:01:04,900
我们有一些需要注意的事项

22
00:01:04,900 --> 00:01:07,540
首先第一件事情就是你在读题的时候

23
00:01:07,540 --> 00:01:11,340
你不能只读题干部分

24
00:01:11,739 --> 00:01:15,099
你需要仔细的去读它的输入格式

25
00:01:15,099 --> 00:01:16,269
输出格式

26
00:01:16,269 --> 00:01:18,219
甚至你要仔细的去读它的

27
00:01:18,219 --> 00:01:20,759
输入样例和输出样例

28
00:01:21,120 --> 00:01:24,480
那我们读这些输入和输出样例呢

29
00:01:24,480 --> 00:01:26,399
其实是有几个目的的

30
00:01:26,420 --> 00:01:27,439
第一个目的呢

31
00:01:27,439 --> 00:01:27,859
就是

32
00:01:27,859 --> 00:01:30,500
就是我需要通过这些输出样例和输出样例

33
00:01:30,500 --> 00:01:34,109
来知道我到底读的格式是怎么样写的

34
00:01:34,109 --> 00:01:34,709
格式怎么样

35
00:01:34,709 --> 00:01:36,150
输入输出的格式是怎么样

36
00:01:36,150 --> 00:01:38,069
比如说对于第一道题目来说

37
00:01:38,069 --> 00:01:40,659
它的输出让你明白的告诉你说

38
00:01:40,760 --> 00:01:42,560
如果我们把这一行给他选起来

39
00:01:42,560 --> 00:01:43,870
我们会看得更清楚

40
00:01:43,870 --> 00:01:45,730
在三和家之间是有空格的

41
00:01:45,730 --> 00:01:47,379
加和二之间是有空格的

42
00:01:47,379 --> 00:01:48,790
二和等之间有空格

43
00:01:48,790 --> 00:01:50,170
等和五之间有空格

44
00:01:50,170 --> 00:01:53,129
而五后面是没有空格的

45
00:01:53,129 --> 00:01:55,230
所以我们写出来的那个print f

46
00:01:55,230 --> 00:01:56,549
就要照着这个样子写

47
00:01:56,549 --> 00:01:58,920
事实上有人有个很好的建议

48
00:01:58,920 --> 00:02:02,489
你就把这一段ctrl c拷贝下来

49
00:02:02,489 --> 00:02:04,260
然后到你的源代码里面去

50
00:02:04,260 --> 00:02:05,040
ctrl v

51
00:02:05,040 --> 00:02:07,560
然后再把它改成print def里面

52
00:02:07,560 --> 00:02:08,849
那个双引号里面的格式

53
00:02:08,849 --> 00:02:10,800
那就肯定该有什么空格

54
00:02:10,800 --> 00:02:12,240
该有什么符号都不会差了

55
00:02:12,240 --> 00:02:12,829
对不对

56
00:02:12,829 --> 00:02:14,028
另外的有的题目啊

57
00:02:14,028 --> 00:02:14,959
像这道题目

58
00:02:14,959 --> 00:02:17,808
你可能一下子从这个题目描述里面

59
00:02:17,808 --> 00:02:20,139
不容易看明白到底是怎么回事情

60
00:02:20,319 --> 00:02:25,180
那么可以通过样例的输入和输出

61
00:02:25,679 --> 00:02:27,508
来揣摩一下

62
00:02:27,508 --> 00:02:32,150
到底程序讲的题目讲的是什么意思对吧

63
00:02:32,150 --> 00:02:33,979
他说这是110分钟

64
00:02:33,979 --> 00:02:35,360
所以从11:20以后

65
00:02:35,360 --> 00:02:36,259
过了110分钟

66
00:02:36,259 --> 00:02:39,530
110分钟我们知道是两小时差十分

67
00:02:39,530 --> 00:02:42,889
因此如果11:20加两小时的话

68
00:02:42,889 --> 00:02:44,030
是13:20

69
00:02:44,030 --> 00:02:45,469
在差十分再减掉十分

70
00:02:45,469 --> 00:02:47,599
于是得到了13.10分

71
00:02:47,599 --> 00:02:50,598
ok通过这两个输入输出

72
00:02:50,598 --> 00:02:51,799
我们可以理解哦

73
00:02:51,799 --> 00:02:53,449
原来你要我做的是这个意思

74
00:02:53,449 --> 00:02:54,859
我们有的时候可能会遇到

75
00:02:54,859 --> 00:02:57,439
说那个题目描述非常晦涩难懂

76
00:02:58,020 --> 00:03:00,560
但是从输入输出的数字

77
00:03:00,560 --> 00:03:02,240
我们大概可以反而能猜出来

78
00:03:02,240 --> 00:03:03,719
你题目到底在讲什么

79
00:03:03,959 --> 00:03:06,239
这个也是在这一类的题目当中

80
00:03:06,239 --> 00:03:07,649
有时候会遇到的情况

81
00:03:07,649 --> 00:03:09,479
所以我们第一条是说看样例

82
00:03:09,479 --> 00:03:12,139
数据和看题目是一样的重要

83
00:03:13,938 --> 00:03:15,938
那实际上从样例数据我们可以看到

84
00:03:15,938 --> 00:03:18,128
很多东西除了前面说的以外

85
00:03:18,128 --> 00:03:19,899
还有一点你要理解

86
00:03:19,899 --> 00:03:21,889
对于p a t这样的练习系统来说

87
00:03:21,889 --> 00:03:24,319
不需要有任何交互的输出

88
00:03:24,579 --> 00:03:26,919
我们在上课的时候会说啊

89
00:03:26,919 --> 00:03:29,258
我们的程序呢应该有一些用户的友好性

90
00:03:29,258 --> 00:03:29,769
对不对

91
00:03:29,769 --> 00:03:33,020
我们希望呢一上来先说出一句打招呼的话

92
00:03:33,020 --> 00:03:35,900
有一个说这个要做什么样的输入之前呢

93
00:03:35,900 --> 00:03:37,520
先提示你要什么什么的输入

94
00:03:37,520 --> 00:03:40,639
但是你看p a t的输入和输出

95
00:03:40,759 --> 00:03:42,590
你像这道题目他写的很明白

96
00:03:42,590 --> 00:03:45,020
输入的时候就是这些东西

97
00:03:45,020 --> 00:03:46,460
输出的时候就是这些东西

98
00:03:46,460 --> 00:03:49,580
意味着你的程序在整个运行过程

99
00:03:49,580 --> 00:03:52,550
当中只能够输出这个东西

100
00:03:52,550 --> 00:03:55,430
绝对不能说出其他任何多余的东西

101
00:03:55,430 --> 00:03:56,689
有任何多余的东西

102
00:03:56,689 --> 00:03:58,069
都会被服务器上

103
00:03:58,069 --> 00:04:00,199
那个计算机程序认为你的程序错了

104
00:04:00,199 --> 00:04:01,180
另外呢

105
00:04:01,180 --> 00:04:04,780
pat的题目里面会告诉你数据的范围

106
00:04:04,859 --> 00:04:06,748
这个数据范围的意思是

107
00:04:06,748 --> 00:04:08,519
他会遵守这个数据的范围

108
00:04:08,519 --> 00:04:09,340
我们来看

109
00:04:09,340 --> 00:04:10,629
比如这道题目说

110
00:04:10,629 --> 00:04:13,599
题目保证起始时间和终止时间在同一天内

111
00:04:13,599 --> 00:04:15,020
这句话的意思是

112
00:04:15,280 --> 00:04:18,459
题目给的数据服务器上测试的数据

113
00:04:18,459 --> 00:04:21,279
一定起始和终止是在同一天的

114
00:04:21,279 --> 00:04:24,860
你在家时间再加时间不会加过24点去

115
00:04:25,199 --> 00:04:27,600
而不是说你需要在程序里面去判断

116
00:04:27,600 --> 00:04:29,089
他有没有过那个范围

117
00:04:29,089 --> 00:04:30,050
像这道题目

118
00:04:30,050 --> 00:04:32,810
他说每一个测试是个三位的正整数

119
00:04:32,810 --> 00:04:34,910
那就是题目保证了一定是三位的

120
00:04:34,910 --> 00:04:36,290
正整数不会是四位的

121
00:04:36,290 --> 00:04:37,329
不会是两位的

122
00:04:37,329 --> 00:04:39,189
所以这些都不需要你的题目里面

123
00:04:39,189 --> 00:04:40,990
你的在你的程序里面去判断

124
00:04:40,990 --> 00:04:44,160
你只要心安理得的去读进数据

125
00:04:44,160 --> 00:04:45,779
来照着做就可以了

126
00:04:45,779 --> 00:04:47,160
所以不要检查输入

127
00:04:47,160 --> 00:04:50,240
当然最后要严格遵守输出的格式

128
00:04:51,000 --> 00:04:52,639
我们先来看第一道题目

129
00:04:52,639 --> 00:04:55,160
其实第一道题目用意很明显

130
00:04:55,160 --> 00:04:58,399
就是看大家是不是习惯p a t的

131
00:04:58,399 --> 00:05:00,110
这种做题的方式

132
00:05:00,110 --> 00:05:02,779
是不是习惯p a t这种严格的

133
00:05:02,779 --> 00:05:04,829
对输出格式的检查

134
00:05:04,829 --> 00:05:07,649
第一道题目说要读入两个整数

135
00:05:07,649 --> 00:05:09,300
比如说这儿读入了三和二

136
00:05:09,300 --> 00:05:11,910
然后呢你要输出的是3+2

137
00:05:11,910 --> 00:05:12,569
3-2

138
00:05:12,569 --> 00:05:14,339
3x23÷2的结果

139
00:05:15,540 --> 00:05:17,129
每个是一行

140
00:05:17,129 --> 00:05:19,170
所以对于这道题目来说

141
00:05:19,170 --> 00:05:20,129
输入很简单

142
00:05:20,129 --> 00:05:21,540
一句skyf就进来了

143
00:05:21,540 --> 00:05:24,158
可是这个sky f明确的告诉你说

144
00:05:24,158 --> 00:05:26,139
他输入的是三空格二

145
00:05:26,139 --> 00:05:30,129
因此你scaf的时候也应该是百分号d空格

146
00:05:30,129 --> 00:05:32,579
百分号d caf是这样子的

147
00:05:32,579 --> 00:05:35,339
你出现在这个字符串里面的格式

148
00:05:35,339 --> 00:05:38,139
字符串里面的所有东西都是他要读的东西

149
00:05:39,060 --> 00:05:41,269
当然百分号d就表明

150
00:05:41,269 --> 00:05:42,980
他要在这里读一个整数

151
00:05:42,980 --> 00:05:44,360
交给后面的某一个变量

152
00:05:44,360 --> 00:05:45,379
如果百分号lf

153
00:05:45,379 --> 00:05:46,620
那是读一个浮点数

154
00:05:46,620 --> 00:05:48,540
那其他的东西是什么意思

155
00:05:48,540 --> 00:05:50,759
其他东西是他要你输入的东西

156
00:05:50,759 --> 00:05:52,980
他必须得到那个东西才能够继续下去

157
00:05:52,980 --> 00:05:54,839
所以如果我们现在做的是百分号b

158
00:05:54,839 --> 00:05:55,589
百分号d

159
00:05:55,589 --> 00:05:57,209
ok我们输入很正常

160
00:05:57,209 --> 00:05:58,500
我们写了一个测试程序

161
00:05:58,500 --> 00:05:59,759
看看我们这样的输入

162
00:05:59,759 --> 00:06:01,220
它会得到什么样的输出

163
00:06:01,220 --> 00:06:02,660
如果百分号d空格

164
00:06:02,660 --> 00:06:03,860
百分号d是很正常的

165
00:06:03,860 --> 00:06:05,360
如果我们现在中间是逗号

166
00:06:05,360 --> 00:06:06,548
它会怎么样子呢

167
00:06:06,548 --> 00:06:07,809
现在我们编译的这个程序

168
00:06:07,809 --> 00:06:08,468
我们要输入

169
00:06:08,468 --> 00:06:11,120
如果我们输入的还是一空格二

170
00:06:12,220 --> 00:06:14,399
他告诉我们说第一个一读到了

171
00:06:14,399 --> 00:06:17,759
但是第二个二呢他没有读到那个零是什么

172
00:06:17,759 --> 00:06:19,800
因为我们在程序里面初始化为零了

173
00:06:19,800 --> 00:06:22,750
实际上他没有读到那个b程序是出错的

174
00:06:22,750 --> 00:06:24,560
我们以后会讲scaf啊

175
00:06:24,560 --> 00:06:26,180
怎么去判断是gf有没有出错

176
00:06:26,180 --> 00:06:27,500
我们应该怎么去读它呢

177
00:06:27,500 --> 00:06:29,779
我们应该给他的是一和二

178
00:06:29,779 --> 00:06:30,829
一逗号二

179
00:06:30,829 --> 00:06:32,990
于是他能够得到一和二

180
00:06:32,990 --> 00:06:34,339
因为我们在程序里面是说

181
00:06:34,339 --> 00:06:37,269
我需我需要这两个数字中间有逗号

182
00:06:37,269 --> 00:06:38,170
所以同样的

183
00:06:38,170 --> 00:06:40,870
如果我在后面有一个空格是什么意思呢

184
00:06:40,870 --> 00:06:41,709
我们来试一下

185
00:06:41,709 --> 00:06:43,389
这时候是一空格二

186
00:06:43,389 --> 00:06:47,819
如果这样子还要你再给他一个空格才行

187
00:06:47,819 --> 00:06:49,199
你再打回车都没有用

188
00:06:49,199 --> 00:06:50,399
因为他没有得到那个空格

189
00:06:50,399 --> 00:06:52,339
你需要再给他一个东西

190
00:06:52,639 --> 00:06:54,199
你随便给他一个东西

191
00:06:54,199 --> 00:06:56,600
那个东西可以去满足那个空格

192
00:06:57,480 --> 00:07:00,639
然后我们程序读到了一和二

193
00:07:00,639 --> 00:07:03,639
所以有同学说我在这放了一个回车

194
00:07:03,639 --> 00:07:05,500
因为他觉得print ea有个回车嘛

195
00:07:05,500 --> 00:07:07,660
我scp f这边也要有个回车

196
00:07:09,600 --> 00:07:11,980
这件事情就会变成这样一二

197
00:07:13,339 --> 00:07:15,579
我必须再随便给他一个什么东西

198
00:07:15,579 --> 00:07:17,709
那个东西用来满足那个回车

199
00:07:17,709 --> 00:07:19,750
然后才能够继续下去

200
00:07:19,750 --> 00:07:21,850
当然那个东西其实不会真的

201
00:07:21,850 --> 00:07:23,240
被读到程序里面去

202
00:07:23,240 --> 00:07:25,459
所以你出现在scaf里面的东西

203
00:07:25,459 --> 00:07:27,449
都是不是他要输出的

204
00:07:27,449 --> 00:07:28,589
而是他要你输入的

205
00:07:28,589 --> 00:07:29,550
如果我们在前面来一个

206
00:07:29,550 --> 00:07:31,379
比如说有人说我这样来个price

207
00:07:33,139 --> 00:07:36,038
于是这个时候你说一和二他多大了

208
00:07:36,038 --> 00:07:36,579
两个零

209
00:07:36,579 --> 00:07:36,999
为什么

210
00:07:36,999 --> 00:07:39,100
其实这时候skin f已经出错了

211
00:07:42,100 --> 00:07:43,649
这才是正确的方法

212
00:07:43,649 --> 00:07:45,259
你要给他一个price

213
00:07:45,699 --> 00:07:47,259
你要给他一个price

214
00:07:47,259 --> 00:07:48,459
你如果不给他price

215
00:07:48,459 --> 00:07:49,839
他就继续不下去

216
00:07:49,839 --> 00:07:51,279
他就认为这是错了的

217
00:07:51,279 --> 00:07:53,319
你如果给他的不是不是price

218
00:07:53,319 --> 00:07:54,879
随便给个什么东西

219
00:07:55,740 --> 00:07:56,300
没多大

220
00:07:56,300 --> 00:07:57,199
正确的东西

221
00:07:57,199 --> 00:07:59,810
出现在caf的格式字符串里面的东西

222
00:07:59,810 --> 00:08:02,089
是他一定要你输入的东西

223
00:08:02,089 --> 00:08:03,740
而不是他会给你看的东西

224
00:08:03,740 --> 00:08:05,899
要特别小心这件事情

225
00:08:06,139 --> 00:08:07,699
那对于第一道题目来说

226
00:08:07,699 --> 00:08:09,290
接下去的事情其实很简单

227
00:08:09,290 --> 00:08:12,110
我们可以把这一行拷贝

228
00:08:12,110 --> 00:08:15,949
然后到我们的代码这里来粘贴

229
00:08:15,949 --> 00:08:18,439
当然别忘了最后一定要加上这个

230
00:08:18,439 --> 00:08:19,639
这是你拷贝不来的

231
00:08:19,639 --> 00:08:22,610
每一行的输出都要有反斜杠n

232
00:08:22,610 --> 00:08:24,949
如果这个程序只要输入一行东西

233
00:08:24,949 --> 00:08:26,300
你也要加上反斜杠n

234
00:08:26,300 --> 00:08:29,538
然后把这里的数字换成必要的东西

235
00:08:29,538 --> 00:08:31,939
这是必要的东西

236
00:08:31,939 --> 00:08:33,198
这是必要的东西

237
00:08:33,198 --> 00:08:34,678
我们要的是a加b

238
00:08:36,379 --> 00:08:38,240
好然后一行行的照着做就可以了

239
00:08:38,240 --> 00:08:41,440
但是别忘了这个scaf你要改回来好

240
00:08:41,440 --> 00:08:42,429
这是第一题

241
00:08:42,429 --> 00:08:44,559
这题应该怎么都不难

242
00:08:44,559 --> 00:08:47,289
很多同学都栽在这个空格上面

243
00:08:47,289 --> 00:08:50,320
我们再强调一遍

244
00:08:50,320 --> 00:08:51,700
p a t的服务器上

245
00:08:51,700 --> 00:08:53,740
那个计算器程序是很死板的

246
00:08:53,740 --> 00:08:56,919
必须完全按照题目里给的那个输入

247
00:08:56,919 --> 00:08:57,940
输出的格式来走

