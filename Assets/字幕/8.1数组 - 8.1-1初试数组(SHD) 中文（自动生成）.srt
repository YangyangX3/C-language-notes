1
00:00:04,219 --> 00:00:06,410
我们在第四周讲循环的时候

2
00:00:06,410 --> 00:00:08,419
曾经介绍过这样一个事情

3
00:00:08,638 --> 00:00:10,618
如果我们现在要写一个程序

4
00:00:10,618 --> 00:00:14,619
让用户输入很多的整数正整数

5
00:00:15,398 --> 00:00:17,099
然后用户输入-1来

6
00:00:17,099 --> 00:00:19,100
表示说它的输入结束了

7
00:00:19,219 --> 00:00:20,690
那我们的程序呢

8
00:00:20,690 --> 00:00:25,239
要计算所有用户输入的这些数的平均数

9
00:00:26,420 --> 00:00:28,059
当时我们在讲到这个程序的时候

10
00:00:28,059 --> 00:00:30,829
我们就在说我们做这样的一个程序

11
00:00:30,829 --> 00:00:32,719
要读入用户输入的每一个数

12
00:00:32,719 --> 00:00:34,070
把它们都加起来

13
00:00:34,070 --> 00:00:37,719
除以它们的个数来算到那个平均数

14
00:00:37,799 --> 00:00:40,920
这样的一个程序是不需要去记录他们的

15
00:00:40,920 --> 00:00:42,018
每一个数的

16
00:00:42,979 --> 00:00:44,240
我们不需要记录每一个数

17
00:00:44,240 --> 00:00:45,859
我们不需要把每一个数都读进来

18
00:00:45,859 --> 00:00:46,710
都记下来

19
00:00:46,710 --> 00:00:48,329
等到输入完成以后

20
00:00:48,329 --> 00:00:49,590
我们再来把它加起来

21
00:00:49,590 --> 00:00:50,490
再来做除法

22
00:00:50,490 --> 00:00:52,649
因为我们可以一个一个加起来

23
00:00:52,649 --> 00:00:54,128
同时一个一个的计数

24
00:00:54,128 --> 00:00:56,679
所以那时候我们写出了这样的一个程序

25
00:00:56,679 --> 00:00:59,850
我们的程序去读入这个x

26
00:00:59,850 --> 00:01:02,070
每次都一个x如果不等于-1的话

27
00:01:02,070 --> 00:01:03,149
我们要不断的做的事情

28
00:01:03,149 --> 00:01:05,099
就是把x加到sum里头去

29
00:01:05,099 --> 00:01:06,599
让计数值加加

30
00:01:06,599 --> 00:01:08,090
然后读下一个数

31
00:01:08,090 --> 00:01:09,109
如果等于-1了

32
00:01:09,109 --> 00:01:10,010
我们就出来判断一下

33
00:01:10,010 --> 00:01:10,969
如果c n t是大于零的

34
00:01:10,969 --> 00:01:13,280
也就是说确实曾经输入过数字的

35
00:01:13,280 --> 00:01:16,219
那我们来输出上除以c n t的结果

36
00:01:17,140 --> 00:01:18,840
这是不需要输入每个数字的

37
00:01:19,920 --> 00:01:21,759
如果题目变了

38
00:01:22,620 --> 00:01:27,759
我们要求说写一个程序输入很多数字

39
00:01:28,019 --> 00:01:29,579
-1表示结束

40
00:01:29,579 --> 00:01:32,459
要计算用户输入的数字的平均数

41
00:01:32,459 --> 00:01:36,000
但是要输出的不是那个平均数

42
00:01:36,000 --> 00:01:39,930
而是用户曾经输入过的所有的数当中

43
00:01:39,930 --> 00:01:41,939
大于那个平均数的数

44
00:01:43,640 --> 00:01:47,519
这个时候我们不记录就不行了

45
00:01:48,099 --> 00:01:49,840
因为每一个输出进来的时候

46
00:01:49,840 --> 00:01:51,310
我不知道它的平均数是多少

47
00:01:51,310 --> 00:01:53,739
所以单独的一个数进来

48
00:01:53,739 --> 00:01:56,459
我无法去确定这个数要不要输出

49
00:01:56,680 --> 00:01:58,750
我一定要把所有的数都存下来

50
00:01:58,750 --> 00:02:02,109
然后等到输入完成以后再算出平均数

51
00:02:02,109 --> 00:02:04,989
再来判断每一个数该不该输出

52
00:02:04,989 --> 00:02:07,640
那么能不能这么写程序呢

53
00:02:07,640 --> 00:02:08,780
说我有number 1

54
00:02:08,780 --> 00:02:09,900
number 2 number 3

55
00:02:09,900 --> 00:02:12,419
我有很多的number什么什么的变量

56
00:02:12,419 --> 00:02:15,120
然后第一个数用number一读进来

57
00:02:15,120 --> 00:02:16,860
判断一下它不是-1

58
00:02:16,860 --> 00:02:18,319
继续读第二个number 2

59
00:02:19,838 --> 00:02:21,658
这程序没个头啊

60
00:02:21,658 --> 00:02:23,338
这不就跟我们循环

61
00:02:23,338 --> 00:02:25,280
刚开始遇到的情况是一样的吗

62
00:02:25,379 --> 00:02:26,879
一件一件一件的做

63
00:02:26,879 --> 00:02:27,599
可是他没个头啊

64
00:02:27,599 --> 00:02:28,770
什么时候是个结束呢

65
00:02:28,770 --> 00:02:30,360
我的程序得要写多长呢

66
00:02:30,360 --> 00:02:32,539
我到底要定义多少个变量呢

67
00:02:32,679 --> 00:02:34,959
所以我们需要用到

68
00:02:34,959 --> 00:02:38,199
我们今天要学的新的编程手段

69
00:02:38,199 --> 00:02:40,240
就是数组

70
00:02:40,379 --> 00:02:44,058
我们可以在之前的那个代码的基础上

71
00:02:44,058 --> 00:02:45,199
做点修改

72
00:02:45,199 --> 00:02:49,319
让他有能力去记录下来读进来的每一个数

73
00:02:50,199 --> 00:02:51,900
然后来做一些判断

74
00:02:51,900 --> 00:02:53,580
我们看这代码要怎么修改

75
00:02:53,580 --> 00:02:56,490
首先呢我们得要定义那个数组出来

76
00:02:56,490 --> 00:03:00,780
所以我们要有一个int型的

77
00:03:01,219 --> 00:03:04,069
用来记录很多个数字的数组

78
00:03:04,069 --> 00:03:07,800
我们不妨呢先说这个数组是100个那么大

79
00:03:09,438 --> 00:03:12,218
这一行我们就定义了一个新的变量

80
00:03:12,218 --> 00:03:14,319
这个变量的名字叫做number

81
00:03:14,579 --> 00:03:16,558
这个变量是一个数组

82
00:03:16,558 --> 00:03:20,120
这个数组里面的每一个单元都是一个int

83
00:03:20,120 --> 00:03:22,460
这个数组它的大小是100

84
00:03:22,460 --> 00:03:26,680
也就是说这个数组里头可以放100个int

85
00:03:26,979 --> 00:03:28,599
然后再读进来的时候

86
00:03:28,599 --> 00:03:30,639
除了做原来要做的一些事情之外

87
00:03:30,639 --> 00:03:31,900
我们再做一件事情

88
00:03:31,900 --> 00:03:38,580
说我们让number的c n t等于那个

89
00:03:39,659 --> 00:03:42,800
因为刚好呢c n t起到了一个作用

90
00:03:42,800 --> 00:03:44,860
一开始的时候cn t是零

91
00:03:44,959 --> 00:03:46,218
等到他加完以后

92
00:03:46,218 --> 00:03:46,639
它是一

93
00:03:46,639 --> 00:03:48,599
所以c nt会不断的递增

94
00:03:48,599 --> 00:03:49,800
那我们在这儿呢

95
00:03:49,800 --> 00:03:53,099
就在说number这个数组里头的c n t

96
00:03:53,099 --> 00:03:55,530
那个位置上的那个单元

97
00:03:55,530 --> 00:03:57,159
我们让它等于x

98
00:03:58,498 --> 00:04:01,338
所以随着这个在这个瓦尔循环当中

99
00:04:01,338 --> 00:04:03,159
随着x的不断的读入

100
00:04:03,419 --> 00:04:04,740
只要x不是-1

101
00:04:04,740 --> 00:04:07,469
我们都会把它放到number这个数组里头去

102
00:04:07,469 --> 00:04:10,549
放进去的位置呢随着c n t的递增

103
00:04:10,549 --> 00:04:11,838
每一次再往后放

104
00:04:11,838 --> 00:04:13,878
第一次放的是number的零的那个位置

105
00:04:13,878 --> 00:04:16,199
第二次放的是number一的那个位置

106
00:04:16,199 --> 00:04:17,579
等到都出来了

107
00:04:17,579 --> 00:04:19,259
有这个平均数了

108
00:04:19,259 --> 00:04:21,019
我们再来做一件事情

109
00:04:21,098 --> 00:04:24,879
我们需要有一个变量i我们来做一个循环

110
00:04:24,879 --> 00:04:25,059
数

111
00:04:25,059 --> 00:04:26,129
i等于零

112
00:04:26,129 --> 00:04:27,750
i小于c n t

113
00:04:27,750 --> 00:04:29,769
因为这个时候c n t表达的是说

114
00:04:29,769 --> 00:04:32,110
在这个数组里头有多少个数

115
00:04:32,110 --> 00:04:34,449
我们让i小于c n t i加加

116
00:04:34,449 --> 00:04:36,490
然后我们来判断说

117
00:04:36,490 --> 00:04:42,470
如果这个number的i呢是大于这个some

118
00:04:42,470 --> 00:04:44,540
除以c n t的这个平均数的

119
00:04:44,540 --> 00:04:50,180
那么我们就输出这个number的i

120
00:04:53,100 --> 00:04:54,980
这样就把我们的程序改造了

121
00:04:54,980 --> 00:04:59,269
改造成为说我们现在有一个int的数组number

122
00:04:59,269 --> 00:05:02,250
我们在每一次读到一个x之后

123
00:05:02,250 --> 00:05:04,170
我们会把它赋给number

124
00:05:04,170 --> 00:05:06,509
这个数组当中的某一个单元

125
00:05:06,509 --> 00:05:10,120
这个单元的位置随着我们的程序的走

126
00:05:10,120 --> 00:05:12,279
它会不断的递增递增

127
00:05:12,279 --> 00:05:13,540
不断的走到后面去的

128
00:05:13,540 --> 00:05:16,720
然后算出了那个这个平均数之后

129
00:05:16,720 --> 00:05:20,100
我们会再用一个循环去便利它

130
00:05:20,259 --> 00:05:22,149
遍历整个数组

131
00:05:22,149 --> 00:05:25,050
把当中所有的元素都找出来

132
00:05:25,050 --> 00:05:27,810
然后去判断它是不是大于那个平均数

133
00:05:27,810 --> 00:05:28,290
如果是的话

134
00:05:28,290 --> 00:05:29,069
我们来做输出

135
00:05:29,069 --> 00:05:30,269
这就是我们看到的

136
00:05:30,269 --> 00:05:33,399
我们第一次使用数组的程序的样子

137
00:05:33,658 --> 00:05:36,899
为了搞清楚这句话到底是怎么做事情的

138
00:05:36,899 --> 00:05:39,059
我们可以来做这样一件事情

139
00:05:39,059 --> 00:05:42,680
我们在他做了这个之后

140
00:05:42,959 --> 00:05:46,500
我们在这儿加入一段做调试用的代码

141
00:05:46,500 --> 00:05:47,639
这段做调试用的代码呢

142
00:05:47,639 --> 00:05:48,660
我们做这样一件事情

143
00:05:48,660 --> 00:05:51,949
说我们有一个int型的变量i

144
00:05:51,949 --> 00:05:54,619
然后呢我们for这个i等于零

145
00:05:54,619 --> 00:05:57,600
i小于等于c n t i加加

146
00:05:57,600 --> 00:05:58,139
因为c n t

147
00:05:58,139 --> 00:06:00,509
现在是他已经放进去一个直的地方

148
00:06:00,509 --> 00:06:07,149
然后呢我们让它依次的来输出那个number的i

149
00:06:07,149 --> 00:06:11,379
从中我们可以观察到这个number数组里面的值

150
00:06:11,379 --> 00:06:12,519
是怎么变化的

151
00:06:12,519 --> 00:06:14,740
那顺便呢在这个之前

152
00:06:14,740 --> 00:06:17,259
我们先让他输出那个cnt的值

153
00:06:17,259 --> 00:06:18,100
给我们看一下

154
00:06:18,100 --> 00:06:20,569
最后呢我们还需要有一个回车

155
00:06:20,569 --> 00:06:24,040
让这每一次的输出呢比较清爽一点好

156
00:06:24,040 --> 00:06:26,319
现在呢我们来试着运行一下这个程序

157
00:06:26,319 --> 00:06:27,519
看看在输入的每一轮

158
00:06:27,519 --> 00:06:29,560
这个number的数组里面是怎么变化的

159
00:06:29,560 --> 00:06:31,420
现在呢我们要输入一些数字给他

160
00:06:31,420 --> 00:06:32,920
我们我们有很多种输入的方法

161
00:06:32,920 --> 00:06:35,560
我们可以让这些数字在一行里面呃

162
00:06:35,560 --> 00:06:38,740
出现我们输入1234

163
00:06:38,740 --> 00:06:41,269
5678 90 十个数字回车

164
00:06:41,269 --> 00:06:43,819
于是呢我们的程序在循环的每一轮

165
00:06:43,819 --> 00:06:45,680
会依次读1234

166
00:06:45,680 --> 00:06:46,819
依次读每一个数字

167
00:06:46,819 --> 00:06:47,930
我们现在回车

168
00:06:47,930 --> 00:06:50,750
我们看到循环的第一轮c n t等于零

169
00:06:50,750 --> 00:06:51,889
在零那个位置上

170
00:06:51,889 --> 00:06:53,959
number的零那个位置上放了一个一

171
00:06:53,959 --> 00:06:56,899
然后循环的第二轮cnt等于一了

172
00:06:56,899 --> 00:06:59,370
他就在number的一那个位置上放了一个二

173
00:06:59,370 --> 00:07:01,170
第三轮c n t等于二了

174
00:07:01,170 --> 00:07:03,600
他会在number的二那个位置上放了一个三

175
00:07:03,600 --> 00:07:07,428
一直到最后c n t等于九了

176
00:07:07,428 --> 00:07:08,959
这是第十个数字

177
00:07:08,959 --> 00:07:13,038
他把number的九那个位置上面填了一个十

178
00:07:13,038 --> 00:07:14,939
现在我们要给它一个-1

179
00:07:15,860 --> 00:07:19,149
他算出来说这个平均数呢是5.5

180
00:07:19,149 --> 00:07:22,540
然后高于5.5的是678 90

181
00:07:22,540 --> 00:07:23,540
这几个数

182
00:07:23,920 --> 00:07:27,850
这是我们这个数组在运行过程当中的变化

183
00:07:27,850 --> 00:07:29,290
我们从这儿可以看得到

184
00:07:29,290 --> 00:07:32,139
也就是说我们把这个程序重新整理一下

185
00:07:32,139 --> 00:07:33,790
在我们这个程序里头呢

186
00:07:33,790 --> 00:07:37,019
我们在这儿定义了那个数组

187
00:07:37,259 --> 00:07:40,279
我们定义说这是一个100个int的数组

188
00:07:40,459 --> 00:07:43,459
然后我们在这个地方以这种形式

189
00:07:43,459 --> 00:07:45,529
对数组当中的元素做了赋值

190
00:07:45,529 --> 00:07:49,129
我们让number当中的d c n t

191
00:07:49,129 --> 00:07:51,649
那个位置上的那个元素等于了x

192
00:07:51,649 --> 00:07:54,220
所以对数组中的元素做了复制

193
00:07:54,220 --> 00:07:56,288
在做完计算之后

194
00:07:56,288 --> 00:07:58,329
我们要去使用数组中的元素

195
00:07:58,329 --> 00:07:59,439
你看我们说

196
00:07:59,439 --> 00:08:03,038
我们要拿number中的第i个元素来做判断

197
00:08:03,038 --> 00:08:04,819
这是一个关系运算

198
00:08:04,819 --> 00:08:08,029
我们要拿number中的第i个元素的值

199
00:08:08,029 --> 00:08:10,009
交给print f去做输出

200
00:08:10,009 --> 00:08:12,649
这都是在使用数组中的元素

201
00:08:12,649 --> 00:08:15,740
而整个这个for循环

202
00:08:15,740 --> 00:08:17,910
这是在便利数组

203
00:08:17,910 --> 00:08:20,550
这是我们计算机的一个专业的名词

204
00:08:20,550 --> 00:08:22,110
便利意思是说

205
00:08:22,110 --> 00:08:23,430
我要把这个数组当中的每

206
00:08:23,430 --> 00:08:24,930
一个单元都走透透

207
00:08:24,930 --> 00:08:27,060
从第一个单元开始走

208
00:08:27,060 --> 00:08:28,199
走到他的最后一个单元

209
00:08:28,199 --> 00:08:30,180
当然我们现在并没有走到最后一个单元

210
00:08:30,180 --> 00:08:31,620
我们走到最后一个

211
00:08:31,620 --> 00:08:34,320
我们有放了有意义的数据的那个单元

212
00:08:34,320 --> 00:08:36,599
从零开始走到c nt

213
00:08:37,460 --> 00:08:41,798
当然这个程序是有安全隐患的

214
00:08:44,059 --> 00:08:45,779
什么是它的安全隐患

215
00:08:48,179 --> 00:08:49,700
我们在这个程序当中

216
00:08:49,700 --> 00:08:51,799
定义的数组大小是100

217
00:08:52,480 --> 00:08:56,580
可是我们在整个的数组的运算当中

218
00:08:56,580 --> 00:08:58,080
从来没有去判断说

219
00:08:58,080 --> 00:09:01,669
我的c n t会不会超过number

220
00:09:01,669 --> 00:09:04,379
可以使用的最大的下标

221
00:09:04,580 --> 00:09:07,580
ok这件事情我们等一会儿再来仔细讲

