1
00:00:05,870 --> 00:00:07,790
其实你应该有一个体会

2
00:00:07,790 --> 00:00:11,080
就是作为这个语言本身

3
00:00:11,080 --> 00:00:12,130
它不难

4
00:00:12,130 --> 00:00:13,419
不就这么点东西吗

5
00:00:13,419 --> 00:00:15,189
加加减减乘乘除除

6
00:00:15,189 --> 00:00:16,739
print f gf

7
00:00:16,980 --> 00:00:18,480
if while do while

8
00:00:20,039 --> 00:00:21,179
很少很简单

9
00:00:21,179 --> 00:00:23,079
规则也很很少很简单

10
00:00:23,699 --> 00:00:27,440
那变成男人男男在想问题

11
00:00:28,359 --> 00:00:30,838
难在怎么把问题变成程序

12
00:00:30,838 --> 00:00:32,219
怎么去处理

13
00:00:32,219 --> 00:00:33,899
在这个程序当中

14
00:00:33,899 --> 00:00:36,079
可能遇到的一些细微的

15
00:00:36,079 --> 00:00:38,500
一些具体的一些小的情况

16
00:00:39,539 --> 00:00:41,210
我们再来看一些例子

17
00:00:41,210 --> 00:00:43,880
比如我们现在要算log 2

18
00:00:43,880 --> 00:00:48,738
x就是x是二的几次方

19
00:00:49,979 --> 00:00:50,840
当然呃

20
00:00:50,840 --> 00:00:53,179
我们现在这个程序只能算出一个呃

21
00:00:53,179 --> 00:00:54,759
比较接近的值啊

22
00:00:55,659 --> 00:00:57,960
我们完全做的是整数运算

23
00:00:57,960 --> 00:00:59,789
所以肯定只能做比较接近的值

24
00:00:59,789 --> 00:01:01,560
我们可以试着做这样一个事情

25
00:01:01,560 --> 00:01:05,718
就是说我拿我现在这个x对二做除法

26
00:01:07,578 --> 00:01:08,299
不断地出

27
00:01:08,299 --> 00:01:10,659
每出一次他就得到1/2

28
00:01:10,659 --> 00:01:11,680
每次得到1/2

29
00:01:11,680 --> 00:01:13,629
然后这个过程当中我就计数对吧

30
00:01:13,629 --> 00:01:15,189
那计数出来以后

31
00:01:15,189 --> 00:01:16,480
我就可以得到一个结果

32
00:01:16,480 --> 00:01:18,969
说我这个是几次

33
00:01:18,969 --> 00:01:20,709
于是呢我就写了那么一个程序

34
00:01:20,709 --> 00:01:22,780
说while x大于一

35
00:01:25,060 --> 00:01:25,780
每次除二

36
00:01:25,780 --> 00:01:27,420
然后r e t加加

37
00:01:28,140 --> 00:01:29,359
那it加加

38
00:01:29,359 --> 00:01:31,219
那这样的一个程序

39
00:01:31,219 --> 00:01:34,150
我们给它做出来之后呃

40
00:01:34,150 --> 00:01:35,140
循环算完之后

41
00:01:38,200 --> 00:01:42,099
这个x的这个拉格二呢是多少多少

42
00:01:42,180 --> 00:01:44,040
我们来看这程序呃

43
00:01:44,040 --> 00:01:45,400
运行的结果怎么样

44
00:01:45,400 --> 00:01:46,480
为了方便起见呢

45
00:01:46,480 --> 00:01:47,859
我们直接就在程序里面写了

46
00:01:47,859 --> 00:01:48,879
x等于64啊

47
00:01:48,879 --> 00:01:50,909
这是为了我们啊演示的方便

48
00:01:50,909 --> 00:01:52,500
不是说程序就该是这个样子

49
00:01:52,500 --> 00:01:53,609
我们来试一下这个程序

50
00:01:53,609 --> 00:01:55,890
我们要算64是二的几次幂

51
00:01:55,890 --> 00:01:56,618
对不对

52
00:02:03,439 --> 00:02:05,500
呃我们知道这个六他算对了是吧

53
00:02:05,500 --> 00:02:07,390
呃64是二的六次方

54
00:02:12,759 --> 00:02:14,780
为什么他这里输出的是一

55
00:02:15,778 --> 00:02:17,239
为什么他这输出是一

56
00:02:17,239 --> 00:02:20,269
是因为你看我们这个循环算完的时候

57
00:02:20,269 --> 00:02:24,060
这个x一定不大于一了对吧

58
00:02:25,338 --> 00:02:26,919
所以你想如果我是别的数

59
00:02:26,919 --> 00:02:27,878
比如说我现在说啊

60
00:02:27,878 --> 00:02:29,819
我这是128

61
00:02:34,318 --> 00:02:36,300
二的七次方是128

62
00:02:37,438 --> 00:02:39,318
他每次不管我这个x是多少

63
00:02:39,318 --> 00:02:42,288
他这总是说一是因为循环算完以后

64
00:02:42,288 --> 00:02:46,979
我这个x就肯定是一对不对

65
00:02:46,979 --> 00:02:49,139
因为我们是初二初二初二初二初下来嘛

66
00:02:50,699 --> 00:02:52,699
那这个log rx错哪了

67
00:02:53,300 --> 00:02:55,479
实际上问题就在于这个x对吧

68
00:02:55,479 --> 00:02:58,360
这个x是它计算完以后已经用过的x

69
00:02:58,360 --> 00:02:59,319
我们在计算过程当中

70
00:02:59,319 --> 00:03:01,500
会不断的去改这个x的值的

71
00:03:01,560 --> 00:03:04,050
所以呢我们的解决方案应该是要这样

72
00:03:04,050 --> 00:03:07,949
我们需要在开始对x做修改之前

73
00:03:07,949 --> 00:03:10,360
把原始的那个x保存一下

74
00:03:11,039 --> 00:03:14,080
然后到后面再要输出的时候

75
00:03:14,080 --> 00:03:17,199
我们去输出的是那个原来留下来的啊

76
00:03:17,199 --> 00:03:19,050
临时保存的那个x的值

77
00:03:19,050 --> 00:03:20,819
比如说像现在这个程序里面

78
00:03:20,819 --> 00:03:23,699
我们用一个变量t记录那个x

79
00:03:23,699 --> 00:03:24,449
到输出的时候

80
00:03:24,449 --> 00:03:25,349
我们不再输出x

81
00:03:25,349 --> 00:03:28,139
而是输出t这就是一种小套路

82
00:03:28,459 --> 00:03:31,308
这种小套路你你要说简单非常简单对吧

83
00:03:31,308 --> 00:03:32,718
他这算不上什么东西

84
00:03:32,718 --> 00:03:33,378
算不上算法

85
00:03:33,378 --> 00:03:35,099
算不上什么复杂的事情

86
00:03:35,099 --> 00:03:37,590
但是呢如果没人跟你讲过一遍

87
00:03:37,590 --> 00:03:39,270
如果你没有看别人的程序

88
00:03:39,270 --> 00:03:40,689
看明白这件事情

89
00:03:40,689 --> 00:03:43,060
你不见得自己一下子能够想得出来

90
00:03:43,060 --> 00:03:44,889
当然如果你能够想得出来的非常好

91
00:03:44,889 --> 00:03:46,870
你也许能够很容易记住它啊

92
00:03:46,870 --> 00:03:48,689
像这种我们就叫做小套路

93
00:03:48,689 --> 00:03:50,610
这是程序写程序过程当中

94
00:03:50,610 --> 00:03:52,830
经常要遇到的一些小手段

95
00:03:52,830 --> 00:03:53,669
小技巧

96
00:03:53,669 --> 00:03:55,500
但是对于这个程序来说

97
00:03:55,500 --> 00:03:57,509
我们更关心的一些事情是这样的

98
00:03:57,509 --> 00:03:58,409
在这个程序当中

99
00:03:58,409 --> 00:03:59,219
我们看到

100
00:03:59,219 --> 00:04:01,280
首先我们用了while循环

101
00:04:01,998 --> 00:04:04,000
我们可不可以用毒娃娃循环

102
00:04:04,439 --> 00:04:06,599
第二我们在这个视频当中看到

103
00:04:06,599 --> 00:04:07,860
我们有一些值

104
00:04:07,860 --> 00:04:09,340
比如说这里的零

105
00:04:11,099 --> 00:04:13,069
为什么我们这个it从零开始

106
00:04:13,069 --> 00:04:15,259
它可不可以从一开始

107
00:04:15,679 --> 00:04:18,949
还有比如说我们这里循环的条件是说

108
00:04:18,949 --> 00:04:19,879
x大于一

109
00:04:19,879 --> 00:04:21,168
为什么是大于一

110
00:04:21,168 --> 00:04:22,488
为什么不是大于零

111
00:04:22,488 --> 00:04:23,538
为什么不是大于二

112
00:04:23,538 --> 00:04:24,939
为什么不是大于等于二

113
00:04:25,339 --> 00:04:27,379
这些值是怎么定出来的

114
00:04:28,899 --> 00:04:30,720
其实呢在程序里面

115
00:04:30,720 --> 00:04:34,300
我们往往会看到这样的一个循环

116
00:04:34,300 --> 00:04:35,860
它要循环多少遍

117
00:04:35,860 --> 00:04:38,740
他要把一些值加多少遍

118
00:04:38,740 --> 00:04:41,319
和这个值的初始是多少

119
00:04:41,319 --> 00:04:43,689
和这个循环的判断的条件是多少

120
00:04:43,689 --> 00:04:45,759
这些是相互牵扯在一起的

121
00:04:45,759 --> 00:04:47,439
我们可以先去想这件事

122
00:04:47,439 --> 00:04:50,620
如果x等于一的时候

123
00:04:50,620 --> 00:04:52,870
我们希望它的结果是零

124
00:04:52,870 --> 00:04:53,410
对不对

125
00:04:53,410 --> 00:04:55,509
因为二的零次方是一

126
00:04:55,509 --> 00:04:56,589
那么这个时候

127
00:04:56,589 --> 00:04:59,110
显然我们希望x等于一的时候

128
00:04:59,110 --> 00:05:00,699
不要进这个循环

129
00:05:00,959 --> 00:05:04,290
所以x要大于一个比一大的东西

130
00:05:04,290 --> 00:05:06,279
它才不会进这个循环

131
00:05:06,920 --> 00:05:08,680
如果x是二的时候

132
00:05:08,680 --> 00:05:10,579
我们希望这个i t是一

133
00:05:11,060 --> 00:05:15,060
那么如果r e t如果x是二

134
00:05:15,699 --> 00:05:16,738
进了这个循环

135
00:05:16,738 --> 00:05:18,279
我们希望它i t加一

136
00:05:18,680 --> 00:05:21,259
所以二是我们希望进这个循环的

137
00:05:21,259 --> 00:05:22,550
最小的那个数

138
00:05:22,550 --> 00:05:27,420
如果我们现在写成说x大于等于二

139
00:05:29,500 --> 00:05:32,259
和x大于一是一致的

140
00:05:32,259 --> 00:05:33,519
这是一回事

141
00:05:33,519 --> 00:05:34,209
对不对

142
00:05:34,209 --> 00:05:35,170
因为对于整数来说

143
00:05:35,170 --> 00:05:36,639
大于一就是大于等于二

144
00:05:36,639 --> 00:05:38,079
这两个当然没有区别

145
00:05:38,079 --> 00:05:39,920
可是如果我把它写成大于二

146
00:05:40,439 --> 00:05:41,819
如果把它写成大于二

147
00:05:41,819 --> 00:05:43,259
意味着我这个循环

148
00:05:43,259 --> 00:05:45,569
当x等于二的时候是不进去的

149
00:05:45,569 --> 00:05:49,230
那么如果我要让x等于二不进这个循环

150
00:05:49,230 --> 00:05:51,389
并且结果i e t还是要能够得到一

151
00:05:51,389 --> 00:05:52,410
我就需要修改

152
00:05:52,410 --> 00:05:54,480
说我的初始值应该是一

153
00:05:55,220 --> 00:05:57,639
但是如果i t的初始值是一的话

154
00:05:57,639 --> 00:06:00,980
那么对于x等于一的情况就不对了

155
00:06:01,199 --> 00:06:02,339
因为x等于一

156
00:06:02,339 --> 00:06:04,490
我们知道它的it应该是零

157
00:06:04,490 --> 00:06:07,610
所以为了兼顾这两个终点

158
00:06:07,610 --> 00:06:09,589
这两个边界上的情况

159
00:06:09,589 --> 00:06:11,899
我们需要把它做成这个样子

160
00:06:13,800 --> 00:06:16,560
当然呃当你写多了程序以后

161
00:06:16,560 --> 00:06:18,899
你就会知道说一般情况下

162
00:06:18,899 --> 00:06:21,420
因为我们的r e t是要做累加的

163
00:06:21,420 --> 00:06:23,819
所以我们会让它的初始值是零

164
00:06:23,819 --> 00:06:29,000
因为我们的这个x是要去不断地做除法的

165
00:06:29,240 --> 00:06:34,189
那我们可以让他去和一个终点做判断

166
00:06:34,189 --> 00:06:36,639
我的除法出到这个时候就够了

167
00:06:37,740 --> 00:06:40,920
当然如果你说哎我可不可以这样

168
00:06:40,920 --> 00:06:42,420
我让它大于零

169
00:06:42,978 --> 00:06:45,798
因为呃零不可能成为一个名词对吧

170
00:06:45,798 --> 00:06:47,238
这个是数学上的知识

171
00:06:47,238 --> 00:06:50,829
所以零大概是最不可能的一件事情

172
00:06:50,829 --> 00:06:53,490
然后我希望这个循环还能够对

173
00:06:53,490 --> 00:06:55,079
这个时候我i t要怎么改

174
00:06:55,079 --> 00:06:56,610
或者我其他部分要怎么改

175
00:06:56,610 --> 00:06:59,129
如果我认为我的循环的条件

176
00:06:59,129 --> 00:07:00,329
是要他大于零的

177
00:07:00,329 --> 00:07:02,399
那么当你一进去的时候

178
00:07:04,100 --> 00:07:06,129
我的x是一的时候

179
00:07:06,129 --> 00:07:07,120
我做了一次除二

180
00:07:07,120 --> 00:07:07,899
它会变成零

181
00:07:07,899 --> 00:07:09,699
因此循环再回来x等于零了

182
00:07:09,699 --> 00:07:12,240
但这个过程当中i t做了一次加法

183
00:07:12,240 --> 00:07:13,949
我希望他还是能够对的

184
00:07:13,949 --> 00:07:17,279
我就需要让这个i e t一开始等于-1

185
00:07:17,718 --> 00:07:19,810
一开始等于-1的时候

186
00:07:19,810 --> 00:07:21,220
i x等于零

187
00:07:21,220 --> 00:07:22,209
循环会进去

188
00:07:22,209 --> 00:07:23,050
r e t会加加

189
00:07:23,050 --> 00:07:25,180
于是i e t得到了一个呃

190
00:07:25,180 --> 00:07:26,079
得到了一个零

191
00:07:26,079 --> 00:07:28,180
这个零是满足x等于零的

192
00:07:28,180 --> 00:07:29,379
等于一的情况的

193
00:07:29,379 --> 00:07:32,779
如果x等于x等于二

194
00:07:32,779 --> 00:07:33,920
进来的时候好吗

195
00:07:33,920 --> 00:07:35,779
我们来把那个列一下哈

196
00:07:35,779 --> 00:07:36,980
我们有x

197
00:07:36,980 --> 00:07:39,319
我们有r e t

198
00:07:39,319 --> 00:07:41,339
然后x如果等于

199
00:07:43,160 --> 00:07:44,829
i t一开始等于-1

200
00:07:44,829 --> 00:07:47,209
然后到了第13行

201
00:07:47,209 --> 00:07:48,798
我们判断说x是大于零的

202
00:07:48,798 --> 00:07:50,778
我们进去x除等于二

203
00:07:50,778 --> 00:07:51,918
于是x得到了一

204
00:07:51,918 --> 00:07:54,879
然后r e t呢就变成了零

205
00:07:55,000 --> 00:07:56,620
这个时候一还是大于零的

206
00:07:56,620 --> 00:07:57,740
然后我们再进去

207
00:07:57,740 --> 00:07:59,240
我回到那个13行

208
00:07:59,240 --> 00:08:01,040
我们发现说啊x还是大于零的

209
00:08:01,040 --> 00:08:02,810
又是x循环进去了

210
00:08:02,810 --> 00:08:04,699
x除以二得到了零

211
00:08:04,699 --> 00:08:06,860
然后r e t得到了

212
00:08:07,800 --> 00:08:08,990
然后我们再出来

213
00:08:08,990 --> 00:08:11,990
所以你看我们如果把循环

214
00:08:11,990 --> 00:08:13,399
把i e t一开始等于-1

215
00:08:13,399 --> 00:08:13,850
然后呢

216
00:08:13,850 --> 00:08:15,920
这个y2 的条件判断呢变成x大于零

217
00:08:15,920 --> 00:08:19,279
这事也是能做对的啊

218
00:08:19,279 --> 00:08:20,600
也是能做对的

219
00:08:20,600 --> 00:08:25,680
所以从来没有人说有一道题目

220
00:08:25,680 --> 00:08:27,300
你给我一个标准答案

221
00:08:27,300 --> 00:08:29,199
只有这个标准答案才是对的

222
00:08:29,300 --> 00:08:30,319
这是不可能的

223
00:08:30,319 --> 00:08:31,160
对于编程来说

224
00:08:31,160 --> 00:08:34,479
你肯定有很多不同的方法去做事情

225
00:08:34,720 --> 00:08:36,370
条条大路通罗马

226
00:08:36,370 --> 00:08:37,210
对不对

227
00:08:37,210 --> 00:08:38,139
然后我们再看一个例子

228
00:08:38,139 --> 00:08:39,100
我们做了这样一个程序

229
00:08:39,100 --> 00:08:40,360
说一开始的时候呢

230
00:08:40,360 --> 00:08:41,230
count等于100

231
00:08:41,230 --> 00:08:43,490
然后呢while count大于等于零

232
00:08:43,490 --> 00:08:45,110
如果看的还是大于等于零的

233
00:08:45,110 --> 00:08:47,059
那么我们要做事情去抗的减减

234
00:08:48,100 --> 00:08:49,860
在循环里面让count减一

235
00:08:49,860 --> 00:08:51,698
然后呢我们输出那个count的值

236
00:08:52,159 --> 00:08:53,720
最后循环结束以后

237
00:08:53,720 --> 00:08:56,000
我们来输出那个发射很简单

238
00:08:56,000 --> 00:08:57,980
一个循环的程序对吧

239
00:08:57,980 --> 00:08:59,600
但对这个程序我们有几个疑问

240
00:08:59,600 --> 00:09:03,830
首先这个循环需要执行多少次

241
00:09:03,830 --> 00:09:06,139
循环体内会跑多少次

242
00:09:06,139 --> 00:09:10,799
100次还是101次还是99次

243
00:09:10,799 --> 00:09:12,600
我们的这个count等于100

244
00:09:12,600 --> 00:09:14,190
和那个count大于等于零之间

245
00:09:14,190 --> 00:09:15,659
到底构成了一个什么样的关系

246
00:09:15,659 --> 00:09:16,919
使得我们的这个循环的次数

247
00:09:16,919 --> 00:09:19,859
到底和100的那个关系是怎么样子的

248
00:09:20,059 --> 00:09:22,639
第二个问题是当循环停下来的时候

249
00:09:23,659 --> 00:09:25,979
最后那个零有没有输出

250
00:09:26,899 --> 00:09:28,899
输出还是没输出对吧

251
00:09:30,100 --> 00:09:31,480
这循环体内的事情

252
00:09:31,480 --> 00:09:34,669
第三个问题是当循环结束的时候

253
00:09:34,669 --> 00:09:37,220
也就是到了print发声内行的时候

254
00:09:37,220 --> 00:09:38,809
count的值是多少

255
00:09:38,809 --> 00:09:40,698
是零还是-1

256
00:09:42,840 --> 00:09:44,600
那这些问题怎么回答呢

257
00:09:44,600 --> 00:09:48,419
当然我们可以跑到这个呃

258
00:09:48,539 --> 00:09:50,340
debug里面去试一下啊

259
00:09:50,340 --> 00:09:50,940
跟踪一下

260
00:09:50,940 --> 00:09:53,340
或者写一下print f的语句来跟踪一下

261
00:09:53,340 --> 00:09:57,599
我们也可以在纸面上去把它模拟运行一下

262
00:09:57,779 --> 00:09:59,639
可是在纸面上运行的时候

263
00:09:59,639 --> 00:10:01,320
或者你去单步下一步

264
00:10:01,320 --> 00:10:02,399
下一步下一步的时候

265
00:10:02,399 --> 00:10:04,339
我们这是有100个啊

266
00:10:05,580 --> 00:10:07,159
这个循环有100个

267
00:10:07,159 --> 00:10:09,919
那你在纸上写100行

268
00:10:09,919 --> 00:10:13,200
你按下一步这里循环体内有两行

269
00:10:13,200 --> 00:10:13,740
这样循环

270
00:10:13,740 --> 00:10:14,580
那就是300个

271
00:10:14,580 --> 00:10:16,379
下一步你才能得到这个结果

272
00:10:16,379 --> 00:10:17,549
才能够知道这里头

273
00:10:17,549 --> 00:10:19,500
我们三个问题的答案是什么

274
00:10:19,799 --> 00:10:23,220
所以在做这一类问题的时候

275
00:10:23,220 --> 00:10:25,500
在看懂这一类程序的时候

276
00:10:25,500 --> 00:10:27,370
我们的另外一个办法是

277
00:10:27,370 --> 00:10:31,059
我们可以模拟比较少的循环次数

278
00:10:31,059 --> 00:10:32,198
然后做推断

279
00:10:32,259 --> 00:10:34,958
假如说我们让count一开始等于三

280
00:10:35,600 --> 00:10:38,919
然后我们去试着去模拟运行这个程序

281
00:10:38,919 --> 00:10:42,299
发现说这个循环呢运行了三轮

282
00:10:42,340 --> 00:10:45,039
然后停下来的时候输出了最后的零

283
00:10:45,039 --> 00:10:46,059
循环结束的时候

284
00:10:46,059 --> 00:10:47,080
count的值是零

285
00:10:47,080 --> 00:10:49,090
那我们可以得到一个结论是

286
00:10:49,090 --> 00:10:50,860
对于n等于三的时候

287
00:10:50,860 --> 00:10:52,470
它是跑三轮的

288
00:10:52,470 --> 00:10:53,970
那么对于n等于100的时候

289
00:10:53,970 --> 00:10:55,320
他是跑100轮的

290
00:10:55,320 --> 00:10:58,389
假如他在我们用三去测试的时候

291
00:10:58,389 --> 00:11:00,309
发现说他跑的是两轮

292
00:11:00,309 --> 00:11:02,610
那么100的时候就是99轮

293
00:11:02,610 --> 00:11:04,740
如果三测试发现他跑了四轮

294
00:11:04,740 --> 00:11:06,818
那么100就是101轮

295
00:11:08,299 --> 00:11:09,399
可以用这样的方法

296
00:11:09,399 --> 00:11:09,970
对不对

297
00:11:09,970 --> 00:11:11,019
我们来试一下

298
00:11:11,019 --> 00:11:12,340
如果这个程序跑三轮

299
00:11:12,340 --> 00:11:13,309
它是什么结果

300
00:11:13,309 --> 00:11:15,830
所以现在我们在这个层上面来看啊

301
00:11:15,830 --> 00:11:18,490
当我们就设这个n为三

302
00:11:18,490 --> 00:11:20,320
我们看这样的一个循环

303
00:11:20,320 --> 00:11:22,389
它到底执行多少遍啊

304
00:11:22,389 --> 00:11:24,090
每一遍它是怎么变化的

305
00:11:24,090 --> 00:11:25,710
那么因为我们只有一个变量

306
00:11:25,710 --> 00:11:27,659
所以我们只要看一个变量n就可以了

307
00:11:27,659 --> 00:11:29,179
一开始它的值是三

308
00:11:29,340 --> 00:11:31,500
那么我们就在了第七行

309
00:11:31,500 --> 00:11:33,570
第七行呢我们判断它是不是大于零

310
00:11:33,570 --> 00:11:34,980
那么它现在当然是大于等于零的

311
00:11:34,980 --> 00:11:35,700
所以我们就进来了

312
00:11:35,700 --> 00:11:36,450
在第八行

313
00:11:36,450 --> 00:11:37,899
到了第八行以后

314
00:11:37,899 --> 00:11:39,700
我们要输出这个n啊

315
00:11:39,700 --> 00:11:40,720
我们把输出写在这里

316
00:11:40,720 --> 00:11:42,159
我们输出了这个三

317
00:11:42,299 --> 00:11:43,980
然后a减减

318
00:11:43,980 --> 00:11:45,818
因此呢就变成了二

319
00:11:45,960 --> 00:11:46,919
n变成r以后

320
00:11:46,919 --> 00:11:47,759
我们又回到第七行

321
00:11:47,759 --> 00:11:48,480
第七行里面

322
00:11:48,480 --> 00:11:49,799
判断大于等于零条件满足

323
00:11:49,799 --> 00:11:51,779
又进循环输出了这个n

324
00:11:51,779 --> 00:11:53,639
这时候的n是那个二

325
00:11:54,100 --> 00:11:55,480
然后n减减

326
00:11:55,480 --> 00:11:56,470
所以n等于一

327
00:11:56,470 --> 00:11:57,279
n得到e以后

328
00:11:57,279 --> 00:11:58,059
再回到第七场

329
00:11:58,059 --> 00:11:59,019
大于等于零条件成立

330
00:11:59,019 --> 00:12:01,659
又进来又输出那个n也就是这个一

331
00:12:01,659 --> 00:12:04,149
然后n减减再减减

332
00:12:05,470 --> 00:12:06,549
n变成了零

333
00:12:06,549 --> 00:12:07,509
n等于零的时候

334
00:12:07,509 --> 00:12:08,110
回到第七

335
00:12:08,110 --> 00:12:08,889
大于等于零

336
00:12:08,889 --> 00:12:10,450
它依然是满足的

337
00:12:10,450 --> 00:12:11,409
零大于等于零

338
00:12:11,409 --> 00:12:12,070
0=0

339
00:12:12,070 --> 00:12:12,549
对不对

340
00:12:12,549 --> 00:12:13,889
所以又进了循环

341
00:12:13,889 --> 00:12:15,330
这时候再进来输出那个n

342
00:12:15,330 --> 00:12:16,979
也就输出了这个零

343
00:12:17,019 --> 00:12:19,090
然后n减减

344
00:12:19,090 --> 00:12:20,698
于是n等于-1

345
00:12:22,679 --> 00:12:24,980
回到第七行大于等于零

346
00:12:24,980 --> 00:12:27,179
不满足了循环结束

347
00:12:28,220 --> 00:12:30,190
所以我们课件上的几个问题怎么回答的

348
00:12:30,190 --> 00:12:31,629
循环做了多少遍呢

349
00:12:31,629 --> 00:12:33,909
我们数一下它有几个输出

350
00:12:33,909 --> 00:12:34,929
有四个输出

351
00:12:34,929 --> 00:12:36,519
所以循环走了四轮

352
00:12:36,519 --> 00:12:38,230
当n等于三的时候

353
00:12:38,230 --> 00:12:39,620
循环走了四轮

354
00:12:40,980 --> 00:12:43,519
这个零有没有输出呢

355
00:12:43,519 --> 00:12:45,230
零是有输出的

356
00:12:45,230 --> 00:12:46,580
当循环结束的时候

357
00:12:46,580 --> 00:12:47,600
n等于多少呢

358
00:12:47,600 --> 00:12:48,679
n等于-1

359
00:12:48,679 --> 00:12:49,399
循环结束的时候

360
00:12:49,399 --> 00:12:50,458
n等于-1

361
00:12:50,679 --> 00:12:53,409
这就是对我们课件上是三个问题的回答

362
00:12:53,409 --> 00:12:56,200
也就是我们这个课件上的这个程序的回答

363
00:12:56,200 --> 00:12:57,740
循环执行多少次

364
00:12:57,899 --> 00:13:00,029
101次

365
00:13:00,029 --> 00:13:01,259
而不是100次

366
00:13:01,259 --> 00:13:02,820
循环停下来的时候有没有输出

367
00:13:02,820 --> 00:13:05,149
最后的零输出了最后的零

368
00:13:05,149 --> 00:13:07,789
因为我们的while条件里面等于零

369
00:13:07,789 --> 00:13:09,570
也是要去做那个循环的

370
00:13:09,570 --> 00:13:10,710
当循环结束以后

371
00:13:10,710 --> 00:13:12,120
看到的值是多少呢

372
00:13:12,120 --> 00:13:13,318
不是零

373
00:13:13,700 --> 00:13:15,259
如果看的还是零的时候

374
00:13:15,259 --> 00:13:16,159
循环是要进去的

375
00:13:16,159 --> 00:13:16,940
不会出来的

376
00:13:16,940 --> 00:13:18,019
所以循环出来的时候

377
00:13:18,019 --> 00:13:19,549
它已经不是零了

378
00:13:19,549 --> 00:13:20,659
而是什么

379
00:13:20,659 --> 00:13:22,818
而是那个-1

380
00:13:23,059 --> 00:13:26,240
当然如果你细心足够细心

381
00:13:26,240 --> 00:13:29,779
你会发现我们课件上的这个代码

382
00:13:29,779 --> 00:13:32,360
和我们刚才在试的那个代码

383
00:13:32,360 --> 00:13:35,279
有一个不一样的地方

384
00:13:35,279 --> 00:13:39,379
这个不一样的地方会使得另外一个问题

385
00:13:39,379 --> 00:13:40,399
我们没有列在这里的

386
00:13:40,399 --> 00:13:41,779
第四个问题的答案不一样

387
00:13:41,779 --> 00:13:42,620
那个问题的答案

388
00:13:42,620 --> 00:13:44,960
那个问题是循环

389
00:13:44,960 --> 00:13:47,818
最后输出的那个数字是多少

390
00:13:50,559 --> 00:13:52,279
我们再来看这件事情

391
00:13:52,419 --> 00:13:54,820
也就是说呢我们应该把这两句啊

392
00:13:54,820 --> 00:13:57,039
按照我们课件上去换一下啊

393
00:13:57,039 --> 00:13:58,029
交换一下位置

394
00:13:58,029 --> 00:14:00,220
我们在循环里面先做减减

395
00:14:00,220 --> 00:14:01,539
再做输出

396
00:14:01,580 --> 00:14:03,059
他们有不同吗

397
00:14:03,059 --> 00:14:05,009
不就是都在一个循环里面

398
00:14:05,009 --> 00:14:06,240
反正要剪一下

399
00:14:06,240 --> 00:14:07,379
然后要输出一下

400
00:14:07,379 --> 00:14:08,340
两个颠倒一下

401
00:14:08,340 --> 00:14:09,179
结果会不一样吗

402
00:14:09,179 --> 00:14:11,519
我们来看如果颠倒一下的话

403
00:14:11,580 --> 00:14:14,220
那我们n还是从三开始的

404
00:14:14,220 --> 00:14:14,759
对不对

405
00:14:14,759 --> 00:14:18,460
然后呢进在这个第七行可以进y

406
00:14:18,460 --> 00:14:19,360
进入了y以后

407
00:14:19,360 --> 00:14:20,740
i先减了一

408
00:14:20,740 --> 00:14:22,099
所以n变成二了

409
00:14:22,840 --> 00:14:24,240
然后我们再来做输出

410
00:14:24,240 --> 00:14:26,009
因此第一个输出的是二

411
00:14:26,009 --> 00:14:27,299
而不是三

412
00:14:28,399 --> 00:14:32,679
那么12回到第七行大于等于零条件成立

413
00:14:32,679 --> 00:14:36,710
于是又进来再做n减减n得到了一

414
00:14:36,710 --> 00:14:40,659
然后输出那个一再回来到第七行

415
00:14:40,659 --> 00:14:42,009
大于等于零条件成立

416
00:14:42,009 --> 00:14:44,350
于是再减减变成零

417
00:14:44,350 --> 00:14:45,759
输出了那个零

418
00:14:47,679 --> 00:14:50,970
现在n是零了

419
00:14:50,970 --> 00:14:52,110
再回到第七行

420
00:14:52,110 --> 00:14:53,039
零还是满足的

421
00:14:53,039 --> 00:14:54,240
进来n减减

422
00:14:54,240 --> 00:14:56,958
所以an变成了-1

423
00:14:58,179 --> 00:15:01,110
这个-1仍然会被输出

424
00:15:01,110 --> 00:15:02,779
因此他输出了-1

425
00:15:03,340 --> 00:15:05,320
然后当然再回来的时候

426
00:15:05,320 --> 00:15:06,460
-1不满足条件了

427
00:15:06,460 --> 00:15:07,938
律师循环结束

428
00:15:08,220 --> 00:15:10,019
我们看到什么东西变了

429
00:15:11,039 --> 00:15:14,139
循环的次数还是四次没有变

430
00:15:14,860 --> 00:15:17,580
零还是输出了没有变

431
00:15:17,580 --> 00:15:19,458
循环结束以后

432
00:15:20,700 --> 00:15:23,000
n的值是-1没有变

433
00:15:23,000 --> 00:15:24,479
那变的是什么呢

434
00:15:25,659 --> 00:15:29,039
第一个输出的值和最后一个输出的值

435
00:15:29,039 --> 00:15:30,099
改变了

436
00:15:31,179 --> 00:15:32,759
所以你看这两句话

437
00:15:33,600 --> 00:15:36,479
我们的程序也是不一样的

438
00:15:37,600 --> 00:15:39,990
那没有所谓你该选择哪一个的问题

439
00:15:39,990 --> 00:15:42,059
而是你要解决的那个程序

440
00:15:42,059 --> 00:15:43,299
到底是要求怎么样

441
00:15:43,299 --> 00:15:45,580
你的程序希望他最后有-1输出

442
00:15:45,580 --> 00:15:46,690
还是没有-1输出

443
00:15:46,690 --> 00:15:50,039
你要去有效的调整你你的代码

