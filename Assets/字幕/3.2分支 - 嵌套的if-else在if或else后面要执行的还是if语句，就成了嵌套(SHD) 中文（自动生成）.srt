1
00:00:04,379 --> 00:00:06,870
我们前面啊有过这样一个程序

2
00:00:06,870 --> 00:00:08,339
有两个数

3
00:00:08,339 --> 00:00:11,179
我要比较哪个是最大的

4
00:00:11,539 --> 00:00:13,130
那么这事挺容易的

5
00:00:13,130 --> 00:00:15,199
我有一个if语句啊

6
00:00:15,199 --> 00:00:16,699
如果a是大于b的

7
00:00:16,699 --> 00:00:17,719
那么最大的是a

8
00:00:17,719 --> 00:00:19,379
否则最大的就是b

9
00:00:20,339 --> 00:00:26,739
如果现在情况是说我们有三个数a b c

10
00:00:26,739 --> 00:00:28,928
然后我要找出其中最大的

11
00:00:28,928 --> 00:00:30,068
这应该怎么办

12
00:00:30,068 --> 00:00:32,140
也就是说假如我们有三个数

13
00:00:32,759 --> 00:00:36,679
正好是456

14
00:00:36,679 --> 00:00:38,058
哪个是最大

15
00:00:38,679 --> 00:00:41,880
这个是随便随便谁眼睛一看就知道对吧

16
00:00:41,880 --> 00:00:42,719
这非常明确

17
00:00:42,719 --> 00:00:43,789
这就是六嘛

18
00:00:43,789 --> 00:00:47,780
可是对于人是如此简单的一件事情

19
00:00:47,780 --> 00:00:49,338
对于计算机来说

20
00:00:49,719 --> 00:00:50,619
他不会做

21
00:00:52,960 --> 00:00:55,179
如果你没有给他一个规则

22
00:00:55,179 --> 00:00:57,369
你没有设计一套步骤

23
00:00:57,369 --> 00:01:00,820
告诉他怎么一步一步的去比较三个数

24
00:01:02,450 --> 00:01:06,260
他没有办法一演看出来哪个是最大的

25
00:01:06,260 --> 00:01:06,799
计算机

26
00:01:06,799 --> 00:01:09,840
最不会做的事情就是一眼看出一件事情来

27
00:01:10,280 --> 00:01:11,719
我们一眼就能认出来

28
00:01:11,719 --> 00:01:12,739
这是小明

29
00:01:12,739 --> 00:01:13,790
计算机

30
00:01:13,790 --> 00:01:17,459
需要很复杂的算法才能做出人脸的识别

31
00:01:17,780 --> 00:01:18,650
同样的

32
00:01:18,650 --> 00:01:22,010
我要去得到说这三个数里面哪个是最大的

33
00:01:22,010 --> 00:01:24,780
我也得要有一些复杂的办法

34
00:01:25,700 --> 00:01:29,739
比方说我们可以先拿头两个数来比较一下

35
00:01:29,739 --> 00:01:31,840
我们发现说五是更大的

36
00:01:31,840 --> 00:01:33,069
所以我们留下五

37
00:01:33,069 --> 00:01:35,640
再拿后面这两个数

38
00:01:35,640 --> 00:01:38,099
那留下来的这个五和那个六去比较一下

39
00:01:38,099 --> 00:01:40,640
我们发现说这时候六是更大的

40
00:01:41,900 --> 00:01:44,680
但如果我们发现说前面两个数比较下来

41
00:01:44,680 --> 00:01:46,680
不是五最大好吧

42
00:01:48,959 --> 00:01:51,719
如果是a b c3 个数的话

43
00:01:51,719 --> 00:01:55,230
那么a和b比较的结果可能是b大

44
00:01:55,230 --> 00:01:56,819
也可能是a大

45
00:01:57,519 --> 00:02:00,000
所以大概我们的局面就会变成这样子

46
00:02:00,000 --> 00:02:02,879
我们先要来做一个判断

47
00:02:03,219 --> 00:02:05,579
a和b随大

48
00:02:05,620 --> 00:02:08,259
如果a确实大于b的

49
00:02:08,259 --> 00:02:10,810
那么就意味着b k被踢掉了

50
00:02:10,810 --> 00:02:13,019
因为a比b来的大

51
00:02:13,019 --> 00:02:15,628
这时候的c如果bb还来得小

52
00:02:15,628 --> 00:02:17,149
是肯定不用考虑的

53
00:02:17,149 --> 00:02:19,489
如果c比b来的大

54
00:02:19,489 --> 00:02:21,288
我们只要比较a和c的关系

55
00:02:21,288 --> 00:02:23,508
所以只要发现说a是比b大的

56
00:02:23,508 --> 00:02:24,528
b就可以踢掉

57
00:02:24,528 --> 00:02:27,778
于是我们接下来再来做一个判断

58
00:02:27,778 --> 00:02:30,538
说a和c去做一个比较

59
00:02:30,538 --> 00:02:33,769
那么如果又发现说a是大的

60
00:02:33,769 --> 00:02:35,209
那结果就是a了

61
00:02:35,209 --> 00:02:38,568
如果发现说a不是大于c的

62
00:02:38,568 --> 00:02:42,430
那么其实胜出的一定就是c对吧

63
00:02:42,430 --> 00:02:45,919
如果这个时候a大于b是不成立的

64
00:02:46,879 --> 00:02:48,939
那我们再要来比较谁和谁呢

65
00:02:48,939 --> 00:02:50,979
我们再来比较的就是b和c了

66
00:02:50,979 --> 00:02:52,960
因为这个时候a可以被抛掉了

67
00:02:52,960 --> 00:02:55,699
a是第一次比较小的那一方

68
00:02:55,699 --> 00:02:58,699
如果在这个时候b大于c的

69
00:02:58,699 --> 00:03:00,800
那我们可以明确得到这个结论

70
00:03:00,800 --> 00:03:03,270
说这个时候因为a已经扔掉了

71
00:03:03,270 --> 00:03:05,490
剩下b和c里头b比c还要来得大

72
00:03:05,490 --> 00:03:07,530
所以b就是胜出的最大值

73
00:03:07,530 --> 00:03:11,180
否则的话这个结果是c好

74
00:03:11,180 --> 00:03:12,379
那根据这个

75
00:03:12,379 --> 00:03:14,360
我们来看看代码可以写成什么样子

76
00:03:14,360 --> 00:03:16,500
这就是我们这边写出来的这个代码

77
00:03:16,500 --> 00:03:18,629
我们caf读出了三个数啊

78
00:03:18,629 --> 00:03:21,659
然后一开始呢我们先初始化这个max为零

79
00:03:21,659 --> 00:03:23,159
如果a大于b的

80
00:03:23,159 --> 00:03:25,879
那么我们再来看a是否大于c

81
00:03:25,919 --> 00:03:27,240
如果a不大于c

82
00:03:27,240 --> 00:03:29,099
那么max就是c了

83
00:03:29,099 --> 00:03:29,759
如果a大于c

84
00:03:29,759 --> 00:03:31,129
那么max就是a了

85
00:03:31,129 --> 00:03:34,250
这边呢就是刚才我手绘的那个流程图啊

86
00:03:34,250 --> 00:03:35,870
我们给他画的整齐一点是吧

87
00:03:35,870 --> 00:03:37,009
那么a大于b的话

88
00:03:37,009 --> 00:03:37,490
如果成立

89
00:03:37,490 --> 00:03:39,139
我们排了来判断a大于c

90
00:03:39,139 --> 00:03:41,338
这个这个菱形

91
00:03:41,338 --> 00:03:43,859
正好就对应的是我们的第一个ef啊

92
00:03:43,859 --> 00:03:44,338
然后呢

93
00:03:44,338 --> 00:03:44,878
这个菱形的

94
00:03:44,878 --> 00:03:47,960
是在这个衣服满足的情况下做的

95
00:03:47,960 --> 00:03:51,560
所以是在这个衣服里头的那个衣服啊

96
00:03:51,560 --> 00:03:53,780
在这里if里头当它成立的时候

97
00:03:53,780 --> 00:03:55,699
我们要再做一次衣服来判断

98
00:03:55,699 --> 00:03:57,680
那么还有else等它不成立的时候

99
00:03:57,680 --> 00:04:00,139
我们同样还会有if else的判断

100
00:04:00,139 --> 00:04:02,349
最后呢我们来说说这个结果

101
00:04:02,349 --> 00:04:03,610
按照我们刚才讲的

102
00:04:03,610 --> 00:04:07,340
我们知道说你的这个if else后面的大括号

103
00:04:07,340 --> 00:04:09,680
如果当你大括号里面只有一句话的时候

104
00:04:09,680 --> 00:04:11,370
你是可以把大括号省了的

105
00:04:11,370 --> 00:04:13,919
所以呢我们整个代码也可以写成这个样子

106
00:04:13,919 --> 00:04:16,478
f a大于b如果成立

107
00:04:16,478 --> 00:04:18,369
那么if a大于c

108
00:04:18,369 --> 00:04:19,418
那么max等于a

109
00:04:19,418 --> 00:04:20,798
否则的话max等于c

110
00:04:20,798 --> 00:04:22,060
否则的话

111
00:04:22,860 --> 00:04:27,319
这个否则就是对应于外面的那个衣服了

112
00:04:27,478 --> 00:04:29,459
当我们把代码写成这个样子

113
00:04:29,459 --> 00:04:30,538
不是不可以

114
00:04:30,538 --> 00:04:32,879
但是呢我们在冒很大的风险

115
00:04:32,879 --> 00:04:34,750
就很大的风险是什么呢

116
00:04:34,750 --> 00:04:38,170
我们所想的和计算机

117
00:04:38,170 --> 00:04:41,230
看到我们的代码和第三个人

118
00:04:41,230 --> 00:04:43,269
其他人来看我们的代码

119
00:04:43,269 --> 00:04:45,720
是不是真的完全是一样的

120
00:04:45,879 --> 00:04:47,839
如果我们的if语句

121
00:04:47,839 --> 00:04:49,759
他的条件满足或者不满足的时候

122
00:04:49,759 --> 00:04:52,819
要执行的语句也是一句if或者else语句

123
00:04:52,819 --> 00:04:55,939
那么我们就形成了一个嵌套的if语句

124
00:04:56,079 --> 00:04:57,579
比如说像这样子

125
00:04:57,579 --> 00:04:59,579
如果扣的是ready

126
00:05:00,639 --> 00:05:01,959
code是ready的时候

127
00:05:01,959 --> 00:05:03,430
我们再来做下面的判断

128
00:05:03,430 --> 00:05:06,279
在f下面要在if条件成立的时候

129
00:05:06,279 --> 00:05:08,949
要做的依然是另外一只if

130
00:05:08,949 --> 00:05:12,009
这就是嵌套的if或者叫做嵌套的判断

131
00:05:12,009 --> 00:05:13,269
所以如果code是ready

132
00:05:13,269 --> 00:05:15,279
我们再来看can't是不是小于20

133
00:05:15,279 --> 00:05:16,240
如果小于20

134
00:05:16,240 --> 00:05:17,500
那么一切正常

135
00:05:17,500 --> 00:05:18,129
否则的话

136
00:05:18,129 --> 00:05:19,620
我们要继续等待

137
00:05:20,459 --> 00:05:23,100
我们来试一下这个代码会是怎么样运行的

138
00:05:23,100 --> 00:05:25,949
这就是我们刚才的那段代码啊

139
00:05:25,949 --> 00:05:29,439
我们从用户输入那里读两个数

140
00:05:29,439 --> 00:05:30,040
一个是扣的

141
00:05:30,040 --> 00:05:32,300
一个是count code

142
00:05:32,420 --> 00:05:33,500
要等于24

143
00:05:33,500 --> 00:05:34,699
他才是ready啊

144
00:05:34,699 --> 00:05:36,500
那么如果扣的不是24

145
00:05:36,500 --> 00:05:38,430
这些判断是不会做的

146
00:05:38,430 --> 00:05:40,139
那么如果扣的是24

147
00:05:40,139 --> 00:05:42,449
我们来看如果看的是不是小于20

148
00:05:42,449 --> 00:05:43,350
如果是小于20的

149
00:05:43,350 --> 00:05:45,060
我们输出一些正常啊

150
00:05:45,060 --> 00:05:48,920
现在呢我们在这个衣服前面是一个断点啊

151
00:05:48,920 --> 00:05:51,800
我们的断点表示的是说这一行正要执行

152
00:05:51,800 --> 00:05:52,860
还没有执行

153
00:05:53,098 --> 00:05:55,528
那么我们来调试运行一下这个程序

154
00:05:55,528 --> 00:05:57,538
现在呢我们要来输入这两个值啊

155
00:05:57,538 --> 00:05:59,129
我们给扣的24

156
00:05:59,129 --> 00:06:04,220
然后呢count呢如果我们给他的十回车以后呢

157
00:06:04,420 --> 00:06:06,189
我们运行在了这里

158
00:06:06,189 --> 00:06:09,730
这个时候呢code的值是24

159
00:06:09,730 --> 00:06:11,889
而count的值呢是十

160
00:06:11,889 --> 00:06:14,540
那么我们下一步下一步呢

161
00:06:14,540 --> 00:06:16,399
因为code等于ready条件满足

162
00:06:16,399 --> 00:06:19,319
所以我们进了衣服的要做的那句话

163
00:06:19,319 --> 00:06:20,519
现在要做的那句话呢

164
00:06:20,519 --> 00:06:21,180
还是一句if

165
00:06:21,180 --> 00:06:23,279
那么我们继续来判断说这个count呢

166
00:06:23,279 --> 00:06:24,509
是不是小于20

167
00:06:24,509 --> 00:06:25,709
现在看的是十

168
00:06:25,709 --> 00:06:29,839
我们下一步它就会在第二个ef的那个

169
00:06:29,839 --> 00:06:31,399
正常要做的那句话里面

170
00:06:31,399 --> 00:06:31,939
条件满足的

171
00:06:31,939 --> 00:06:34,310
要做的那话里面去执行那个print f

172
00:06:34,310 --> 00:06:38,610
然后再下一步就会离开整个嵌套的if语句

173
00:06:38,610 --> 00:06:43,790
那在刚才的那个if if else里头对吧

174
00:06:43,790 --> 00:06:45,290
我们的衣服里头有个衣服

175
00:06:45,290 --> 00:06:46,370
那个衣服里面还有个else

176
00:06:46,370 --> 00:06:48,779
if if else里头我们有个else

177
00:06:48,879 --> 00:06:50,319
这个else到底是谁的

178
00:06:50,319 --> 00:06:53,350
else是里面那个if的else

179
00:06:53,350 --> 00:06:55,240
还是外面那个大衣服的else

180
00:06:55,420 --> 00:06:57,579
那么在这种情况下

181
00:06:57,579 --> 00:06:59,259
它的基本原则很简单

182
00:06:59,259 --> 00:07:03,319
else总是要和他最近的那个去匹配

183
00:07:03,399 --> 00:07:05,019
对于我们刚才那个代码来说

184
00:07:05,019 --> 00:07:06,879
最近的f就是里面的那个f

185
00:07:06,879 --> 00:07:10,000
但是如果我们加了大括号

186
00:07:10,000 --> 00:07:11,139
情况就会不一样

187
00:07:11,139 --> 00:07:12,259
我们来试一下

188
00:07:12,300 --> 00:07:16,680
现在呢我们在这个衣服的后面有了大括号

189
00:07:16,680 --> 00:07:19,620
并且这个大括号的结尾是在这儿

190
00:07:20,240 --> 00:07:21,560
在这种情况下

191
00:07:21,560 --> 00:07:24,439
这个else的意义就发生了变化

192
00:07:24,439 --> 00:07:25,519
我们来试一下

193
00:07:25,519 --> 00:07:28,959
现在我们依然在这里有个断点

194
00:07:28,959 --> 00:07:31,329
我们来调试运行它

195
00:07:31,329 --> 00:07:37,360
我们输入24和40

196
00:07:38,500 --> 00:07:40,300
现在我们的code是24

197
00:07:40,300 --> 00:07:42,079
所以这个条件还是满足的

198
00:07:42,720 --> 00:07:46,920
下一步就会进到这个衣服里头

199
00:07:47,098 --> 00:07:50,180
现在我们要去看count是不是小于20

200
00:07:50,180 --> 00:07:51,800
现在我们的count是多少呢

201
00:07:51,800 --> 00:07:52,879
我们的count是40

202
00:07:52,879 --> 00:07:55,850
所以这个count小于20的条件是不满足的

203
00:07:55,850 --> 00:07:57,408
不满足的时候

204
00:07:57,408 --> 00:07:59,418
这个衣服有没有else呢

205
00:07:59,418 --> 00:08:00,588
它没有else

206
00:08:00,588 --> 00:08:03,158
因为下面的这个else

207
00:08:03,158 --> 00:08:06,728
虽然我们看起来好像排在这里

208
00:08:06,728 --> 00:08:09,759
但是实际上这个大括号说

209
00:08:09,879 --> 00:08:12,100
对于这个外面的衣服来说

210
00:08:12,100 --> 00:08:16,329
里面的这一句f语句是它的内容

211
00:08:16,329 --> 00:08:18,199
而后头的这个else

212
00:08:18,300 --> 00:08:20,759
是和我们的这个衣服去匹配的

213
00:08:20,759 --> 00:08:23,839
所以我们在下一步的时候就会离开

214
00:08:23,839 --> 00:08:24,680
整个衣服

215
00:08:24,680 --> 00:08:26,360
不会去到这个else里头

216
00:08:26,360 --> 00:08:27,170
因为这个else

217
00:08:27,170 --> 00:08:30,279
已经不是里面这个衣服的l s了

218
00:08:30,439 --> 00:08:31,668
同样的

219
00:08:31,668 --> 00:08:33,229
我们在代码当中会看到

220
00:08:33,229 --> 00:08:34,849
有各种各样的缩进啊

221
00:08:34,849 --> 00:08:37,339
我们做各种各样的对齐

222
00:08:37,339 --> 00:08:38,479
但是这些对齐

223
00:08:38,479 --> 00:08:40,668
这些缩进也不能去暗示else的匹配

224
00:08:40,668 --> 00:08:41,928
我们可以再试一下

225
00:08:41,928 --> 00:08:43,219
我们现在代码看吗

226
00:08:43,219 --> 00:08:44,178
看上去是这样子的

227
00:08:44,178 --> 00:08:46,850
这里有个衣服条件成立的时候有个f

228
00:08:46,850 --> 00:08:47,779
然后下面有个else

229
00:08:47,779 --> 00:08:50,859
这个else呢和外面的f是对齐的

230
00:08:51,820 --> 00:08:53,820
那这个x是不是外面这个衣服呢

231
00:08:53,820 --> 00:08:55,590
是不是code等于ready的衣服呢

232
00:08:55,590 --> 00:08:57,029
我们可以试一下

233
00:08:57,029 --> 00:09:00,679
我们还是给他24和40

234
00:09:01,379 --> 00:09:04,100
现在呢我们代码在这扣的是24

235
00:09:04,100 --> 00:09:05,450
所以我们会进去

236
00:09:05,450 --> 00:09:07,519
下一步我们在这儿

237
00:09:07,720 --> 00:09:09,490
这个时候的count是40

238
00:09:09,490 --> 00:09:10,360
count是40

239
00:09:10,360 --> 00:09:13,389
所以if这个count小于20的条件是不满足的

240
00:09:13,389 --> 00:09:14,950
因此这句话是不会做的

241
00:09:14,950 --> 00:09:17,710
那么他会不会去做这句else

242
00:09:17,710 --> 00:09:20,399
下面的句子我们看下一步在哪

243
00:09:20,639 --> 00:09:22,860
下一步到了这下一步会到这

244
00:09:22,860 --> 00:09:25,529
说明这个else是这个if的else

245
00:09:25,529 --> 00:09:27,458
而不是外面那个if的else

246
00:09:27,539 --> 00:09:28,799
我们可以再看一些例子

247
00:09:28,799 --> 00:09:30,240
比如说你在这说

248
00:09:30,240 --> 00:09:32,059
如果game over等于等于零

249
00:09:32,379 --> 00:09:34,480
如果pay to move等于等于二

250
00:09:34,480 --> 00:09:36,109
我们会print f yton

251
00:09:36,109 --> 00:09:38,269
也就是说我们先判断game over是不是等于零

252
00:09:38,269 --> 00:09:38,989
如果成立的话

253
00:09:38,989 --> 00:09:41,629
我们说去判断player to move是不是等于二

254
00:09:41,629 --> 00:09:43,590
然后会输出条件都满足

255
00:09:43,590 --> 00:09:44,940
我们会输出your turn

256
00:09:44,940 --> 00:09:46,839
现在如果我们加了一个else

257
00:09:46,940 --> 00:09:50,539
那么这个else呢离它最近的显然是这个if

258
00:09:50,539 --> 00:09:53,179
所以当per to move不等于二的时候

259
00:09:53,179 --> 00:09:54,818
我们会输出说mon

260
00:09:54,820 --> 00:09:57,279
但是game over不等于零的时候

261
00:09:57,279 --> 00:09:59,339
跟这个else没有任何关系

262
00:10:00,220 --> 00:10:02,879
如果我们给外面的game over等于零

263
00:10:02,879 --> 00:10:03,960
也配对else

264
00:10:03,960 --> 00:10:04,740
也配一个else

265
00:10:04,740 --> 00:10:08,700
那么这个game over是当game over不等于零的时候

266
00:10:08,700 --> 00:10:10,179
会做的这个else

267
00:10:10,740 --> 00:10:13,620
如果现在变成这个样子

268
00:10:13,620 --> 00:10:15,299
我们想要的是

269
00:10:16,320 --> 00:10:19,200
不管这个pay to move有没有要什么

270
00:10:19,200 --> 00:10:19,500
无所谓

271
00:10:19,500 --> 00:10:20,759
我不关心这个事情

272
00:10:20,759 --> 00:10:22,860
我们想要的是game over不等于零的时候

273
00:10:22,860 --> 00:10:24,419
我们要输出这个game over

274
00:10:24,419 --> 00:10:25,559
但是现在这个时候呢

275
00:10:25,559 --> 00:10:27,979
我们里头的那个f是没有带else的

276
00:10:29,379 --> 00:10:32,940
那么按照我们刚才看到的这个运行的情况

277
00:10:32,940 --> 00:10:33,539
我们会知道

278
00:10:33,539 --> 00:10:37,059
其实我们会以为else是那个衣服的

279
00:10:37,059 --> 00:10:39,279
但是c语言的编译器会认为

280
00:10:39,279 --> 00:10:41,559
这个else是里头那个衣服的

281
00:10:42,440 --> 00:10:45,909
所以安全的方式是我们得加上大括号

282
00:10:45,909 --> 00:10:50,240
我们得要说这个衣服后头要做的事情

283
00:10:50,240 --> 00:10:51,379
到此为止了

284
00:10:51,379 --> 00:10:55,259
而这个else是要和我这个衣服去匹配的

285
00:10:56,700 --> 00:10:59,750
所以给大家的建议就是

286
00:10:59,750 --> 00:11:03,870
在if或者else后面始终加上一堆大括号

287
00:11:05,639 --> 00:11:07,019
你敲完那个衣服的圆括号

288
00:11:07,019 --> 00:11:09,059
你就敲一个开口的大括号

289
00:11:09,059 --> 00:11:10,818
然后一回车现在的编辑器

290
00:11:10,818 --> 00:11:12,798
现在的ide都会帮你去补上

291
00:11:12,798 --> 00:11:14,220
那个结尾的大括号的

292
00:11:14,220 --> 00:11:15,330
你敲完else

293
00:11:15,330 --> 00:11:17,940
你也马上就敲上那个开头的大括号

294
00:11:17,940 --> 00:11:18,899
然后我后面那个大括号

295
00:11:18,899 --> 00:11:20,580
会有人帮你主动去补上的

296
00:11:22,299 --> 00:11:25,450
在if和else后面始终跟上大括号

297
00:11:25,450 --> 00:11:27,370
这样你的理解

298
00:11:27,370 --> 00:11:28,600
编译器的理解

299
00:11:28,600 --> 00:11:29,799
其他读你的代码

300
00:11:29,799 --> 00:11:31,799
人的理解就不会有差异了

