1
00:00:04,599 --> 00:00:07,000
虽然我们已经知道怎么做rap啊

2
00:00:07,000 --> 00:00:09,400
我们可以通过s t r u c t这个关键字

3
00:00:09,400 --> 00:00:11,599
我们去声明一个结构类型

4
00:00:11,798 --> 00:00:13,419
声明出这个结构类型之后

5
00:00:13,419 --> 00:00:15,278
我们可以用这个结构类型去定义变量

6
00:00:16,719 --> 00:00:18,000
但你觉不觉得

7
00:00:18,859 --> 00:00:22,030
我们每次在用这个结构类型的时候

8
00:00:22,030 --> 00:00:23,260
都要跟上那个rap

9
00:00:23,260 --> 00:00:26,210
那个关键字和int flow的不一样

10
00:00:26,210 --> 00:00:29,780
我们不能说那个point那个date

11
00:00:29,780 --> 00:00:31,879
那个time直接就像类型一样

12
00:00:31,879 --> 00:00:33,439
说我date什么什么

13
00:00:34,100 --> 00:00:35,859
总觉得好像他不是亲生的对吧

14
00:00:35,859 --> 00:00:37,859
他前面要跟上stra的关键字

15
00:00:38,899 --> 00:00:39,460
c语言

16
00:00:39,460 --> 00:00:42,820
有一个办法可以让我们摆脱那个rap

17
00:00:42,820 --> 00:00:43,539
关键词

18
00:00:43,539 --> 00:00:45,878
这个办法叫做type death

19
00:00:46,759 --> 00:00:49,030
typedef也是一个关键字啊

20
00:00:49,030 --> 00:00:53,279
比如说我们这儿说type def int l

21
00:00:53,659 --> 00:00:55,880
当然别忘了后面有分号是吧

22
00:00:55,880 --> 00:00:56,719
这是一个语句嘛

23
00:00:56,719 --> 00:00:58,359
你总要有个结束的地方

24
00:00:59,479 --> 00:01:03,429
他的意思是说我们就定义说这个lance呢

25
00:01:03,429 --> 00:01:07,150
现在就代表int了以后

26
00:01:07,150 --> 00:01:08,439
在任何地方程序里面

27
00:01:08,439 --> 00:01:09,730
如果出现length

28
00:01:09,730 --> 00:01:11,500
他的意思就是int

29
00:01:11,920 --> 00:01:14,680
也就是说length成为int的别名

30
00:01:14,680 --> 00:01:15,879
所以这样做完之后

31
00:01:15,879 --> 00:01:17,680
我们就可以说lens a b c啊

32
00:01:17,680 --> 00:01:20,060
我们所以说length numbers 10

33
00:01:20,060 --> 00:01:22,340
这相当于int numbers是

34
00:01:22,340 --> 00:01:27,359
所以如果我们有一个结构

35
00:01:30,480 --> 00:01:35,039
如果我们在这儿说tab death这个东西date

36
00:01:36,200 --> 00:01:39,329
你看这这这里头我们得这么看哈

37
00:01:39,329 --> 00:01:41,459
在tab def的后面

38
00:01:41,459 --> 00:01:43,230
我们有两个东西

39
00:01:43,230 --> 00:01:46,239
第一个东西呢是它的什么

40
00:01:46,980 --> 00:01:47,750
好吧

41
00:01:47,750 --> 00:01:49,579
按照你们的顺序哈

42
00:01:49,579 --> 00:01:50,540
这是第一个东西

43
00:01:50,540 --> 00:01:52,069
是不是从左边数过来

44
00:01:52,069 --> 00:01:52,819
time后

45
00:01:52,819 --> 00:01:54,629
def后面的第一个东西

46
00:01:54,629 --> 00:01:58,519
是原来的实际的数据类型

47
00:01:58,519 --> 00:02:02,420
而第二个东西是你给他起的新名字

48
00:02:02,859 --> 00:02:07,000
这个学其实说句老实话

49
00:02:07,000 --> 00:02:08,590
到我这把年纪

50
00:02:08,590 --> 00:02:10,479
我有的时候台湾有的时候还会忘了

51
00:02:10,479 --> 00:02:13,460
到底哪个是哪个嗯

52
00:02:14,319 --> 00:02:16,469
趁年轻你可以先记住他哈

53
00:02:16,469 --> 00:02:18,000
趁年轻你可以记住

54
00:02:18,000 --> 00:02:23,340
第一个是他原来的那个类型啊

55
00:02:23,340 --> 00:02:24,419
第一个原来类型

56
00:02:24,419 --> 00:02:26,879
第二个呢是它新的那个名字

57
00:02:26,879 --> 00:02:30,240
所以在这儿呢date是新的名字

58
00:02:30,240 --> 00:02:31,740
而原来的类型是什么呢

59
00:02:31,740 --> 00:02:33,659
出现在type def和de中间的

60
00:02:33,659 --> 00:02:36,080
因为新的名字只能是一个单词

61
00:02:36,080 --> 00:02:36,620
对不对

62
00:02:36,620 --> 00:02:39,439
所以在他def和最后的那个单词

63
00:02:39,439 --> 00:02:42,229
中间的所有的东西是它原来的类型

64
00:02:42,229 --> 00:02:45,680
现在呢我们这个原来的类型是一个strong

65
00:02:46,338 --> 00:02:49,338
因此今后我们直接用data的意思

66
00:02:49,338 --> 00:02:51,199
就相当于我们在这儿

67
00:02:51,199 --> 00:02:54,240
我可以把data替换成raw a date

68
00:02:55,699 --> 00:02:56,860
它们是等价的

69
00:02:56,860 --> 00:02:57,849
它们是一样的

70
00:02:57,849 --> 00:03:00,639
我们的date就代表了type def和date

71
00:03:00,639 --> 00:03:02,300
中间的所有的东西

72
00:03:02,599 --> 00:03:04,340
你可以把它想象成

73
00:03:04,340 --> 00:03:05,659
虽然不一定完全是这样

74
00:03:05,659 --> 00:03:06,860
你可以把它想象成

75
00:03:06,860 --> 00:03:10,538
我们在这儿从rada data开始

76
00:03:10,538 --> 00:03:11,258
所有的这些东西

77
00:03:11,258 --> 00:03:13,419
一直到这个data前面那个结尾的大括号为止

78
00:03:13,419 --> 00:03:15,098
所有东西摆到这儿来了

79
00:03:15,098 --> 00:03:18,039
我们说这儿有一个这样的敌

80
00:03:18,519 --> 00:03:19,840
他们是一个意思

81
00:03:21,338 --> 00:03:24,058
所以这就是tab def

82
00:03:24,058 --> 00:03:27,400
比如说tab def j date

83
00:03:27,400 --> 00:03:29,180
这种形式是什么

84
00:03:30,159 --> 00:03:32,219
如果没有这个tab def

85
00:03:32,219 --> 00:03:33,300
我们在干什么

86
00:03:34,378 --> 00:03:35,718
如果没有这个typedef

87
00:03:35,718 --> 00:03:37,818
我们在说我们有一个没有名字的rap

88
00:03:37,818 --> 00:03:40,199
然后它有一个变量叫做date

89
00:03:40,838 --> 00:03:41,860
对不对

90
00:03:42,139 --> 00:03:44,599
如果我们把这个date移到这儿去

91
00:03:44,599 --> 00:03:45,500
并且没有typedef

92
00:03:45,500 --> 00:03:47,060
我们说我们有个street of the date

93
00:03:47,060 --> 00:03:49,250
现在呢我们把type def放在前面

94
00:03:49,250 --> 00:03:51,370
我们说这样的一个rap

95
00:03:51,370 --> 00:03:53,060
我们把它命名为date

96
00:03:53,079 --> 00:03:54,938
至于这个rap叫什么呢

97
00:03:54,938 --> 00:03:56,199
我们已经不关心了

98
00:03:56,199 --> 00:03:58,439
因为我们有个更好的方式去表达它了

99
00:04:00,878 --> 00:04:02,848
所以typedef的意思就是

100
00:04:02,848 --> 00:04:07,590
我要把这个typedef到最后一个单词

101
00:04:07,590 --> 00:04:10,169
中间所有东西命名为最后那个单词

102
00:04:10,169 --> 00:04:11,819
只有最后那一个单词

103
00:04:11,819 --> 00:04:12,990
因为有的时候我们经常是这样

104
00:04:12,990 --> 00:04:14,939
就看那个type def它很复杂

105
00:04:14,939 --> 00:04:17,220
它可以可以连着很多东西

106
00:04:17,220 --> 00:04:18,480
那你怎么认出来

107
00:04:18,480 --> 00:04:20,769
到底最后定出来的那个名字是什么呢

108
00:04:20,769 --> 00:04:24,980
最后那个啊最后那一个单词才是他的名字

109
00:04:25,000 --> 00:04:26,319
所以这是什么意思呢

110
00:04:26,319 --> 00:04:30,779
rength是这个c h a r新的十

111
00:04:30,779 --> 00:04:33,660
也就是十个字符串的数组

112
00:04:33,660 --> 00:04:36,480
十个数字符指针的数组

