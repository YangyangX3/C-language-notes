1
00:00:04,400 --> 00:00:09,119
当然跟这个c语言固有的int float double一样

2
00:00:09,179 --> 00:00:11,519
一旦我们声明了一个结构类型之后

3
00:00:11,519 --> 00:00:14,519
我们也可以做出这种结构类型的变量

4
00:00:14,519 --> 00:00:16,879
我们也可以做出这种结构类型的数组

5
00:00:16,919 --> 00:00:19,228
这里就是一个结构类型数组的例子

6
00:00:19,228 --> 00:00:22,039
我们有d阿汉军

7
00:00:22,039 --> 00:00:26,239
我们有100个date组成的那么一个数组

8
00:00:26,798 --> 00:00:28,618
它的每一个元素

9
00:00:28,618 --> 00:00:29,789
这个数组的每一个元素

10
00:00:29,789 --> 00:00:32,399
是一个data的那个结构变量

11
00:00:32,780 --> 00:00:35,018
那当我们去初始化它的时候呢

12
00:00:35,100 --> 00:00:36,960
就要多一层括号了

13
00:00:36,960 --> 00:00:38,759
我们在最外面的那一层括号

14
00:00:38,759 --> 00:00:40,920
说我们在初始化一个数组

15
00:00:40,920 --> 00:00:41,820
然后呢

16
00:00:41,820 --> 00:00:43,619
里面的每一层大括号呢

17
00:00:43,619 --> 00:00:46,259
是在说这是这个dates的第一个

18
00:00:46,259 --> 00:00:47,460
也是d0 

19
00:00:47,460 --> 00:00:49,689
它的值这是对的

20
00:00:49,689 --> 00:00:51,899
第二个也是dae它的值

21
00:00:52,659 --> 00:00:54,479
我们来看看具体的程序

22
00:00:54,479 --> 00:00:57,259
我们我们在date之外

23
00:00:57,259 --> 00:00:59,179
我们做了一个结构叫time啊

24
00:00:59,179 --> 00:01:02,450
表达时间的time里面有our minute和second

25
00:01:02,450 --> 00:01:04,299
有小十分钟和秒

26
00:01:04,400 --> 00:01:07,400
我们做了一个函数啊

27
00:01:07,400 --> 00:01:09,349
time update给他一个rap time

28
00:01:09,349 --> 00:01:11,379
然后呢它会返回一个strong time

29
00:01:12,239 --> 00:01:14,129
我们做了一个数组

30
00:01:14,129 --> 00:01:17,549
这个time start time的一个数组叫做test time

31
00:01:17,549 --> 00:01:19,049
然后呢我们说这里有五个

32
00:01:19,049 --> 00:01:20,189
我明确的给出了五

33
00:01:20,189 --> 00:01:22,349
但其实我们都知道这个五可以不给啊

34
00:01:22,349 --> 00:01:23,459
编辑和第五个数

35
00:01:23,459 --> 00:01:25,079
然后这句话的时候说啊

36
00:01:25,079 --> 00:01:26,280
我们有这样一个东西

37
00:01:26,280 --> 00:01:30,900
那这个呢就是给text times的零的

38
00:01:30,900 --> 00:01:33,310
它表示说11给our

39
00:01:33,310 --> 00:01:34,930
59给minutes

40
00:01:34,930 --> 00:01:36,799
59给seconds

41
00:01:36,859 --> 00:01:40,219
所以现在我们依次定义了五个struct

42
00:01:40,219 --> 00:01:41,840
time的结构

43
00:01:41,840 --> 00:01:45,959
放在这个ram的数组叫做test time里头

44
00:01:45,959 --> 00:01:48,200
然后我们对这个数组做一个便利

45
00:01:48,540 --> 00:01:50,400
每一次呢我们就取出

46
00:01:50,400 --> 00:01:52,140
所以这东西就看起来就比较复杂了

47
00:01:52,140 --> 00:01:52,650
对不对

48
00:01:52,650 --> 00:01:54,209
test time是一个数组

49
00:01:54,209 --> 00:01:54,780
然后呢

50
00:01:54,780 --> 00:01:56,579
我们用方括号加上下标

51
00:01:56,579 --> 00:01:59,519
来取出它里面的每一个单元

52
00:01:59,519 --> 00:02:02,289
而它的每一个单元是一个ragtime

53
00:02:02,289 --> 00:02:03,009
于是呢

54
00:02:03,009 --> 00:02:04,929
我们就可以让他再用点

55
00:02:04,929 --> 00:02:07,829
去得到它的那个成员our啊

56
00:02:07,829 --> 00:02:10,590
所以依此我们得到our得到了minute

57
00:02:10,590 --> 00:02:11,430
得到了second

58
00:02:12,689 --> 00:02:17,879
然后我们做这个test hai呢

59
00:02:17,879 --> 00:02:21,000
既然这是一个这个stra time

60
00:02:21,000 --> 00:02:22,990
的一个b结构变量

61
00:02:22,990 --> 00:02:23,530
对不对

62
00:02:23,530 --> 00:02:26,269
那么它可以像结构为变量一样被腐蚀

63
00:02:26,269 --> 00:02:27,769
它可以像结构变量一样

64
00:02:27,769 --> 00:02:30,468
被传递给另外一个函数内函数

65
00:02:30,468 --> 00:02:32,259
如果需要一个结构变量的话

66
00:02:32,679 --> 00:02:35,438
现在我们的time update就是需要一个结构变量的

67
00:02:35,438 --> 00:02:38,150
于是呢我们就可以在里面做些处理了啊

68
00:02:38,150 --> 00:02:40,219
我们知道他要做的事就是下一秒嘛

69
00:02:47,838 --> 00:02:50,019
总的来说这事没有什么特别的是吧

70
00:02:50,019 --> 00:02:52,669
无非就是说原来我们定义数组的数组

71
00:02:52,669 --> 00:02:55,189
前面那个类型是我们已知的基础类型

72
00:02:55,189 --> 00:02:56,180
int float double

73
00:02:56,180 --> 00:02:58,430
现在呢这个类型是我们自己声明的

74
00:02:58,430 --> 00:02:59,319
那么一个类型

75
00:02:59,319 --> 00:03:00,099
仅此而已

76
00:03:00,099 --> 00:03:01,599
其他没有什么特别的地方

77
00:03:01,599 --> 00:03:05,740
还有结构里面的变量可以是基础类型

78
00:03:05,740 --> 00:03:06,819
int float double

79
00:03:06,819 --> 00:03:08,539
也可以是另外一个结构

80
00:03:09,699 --> 00:03:11,319
好你看呃

81
00:03:11,319 --> 00:03:12,759
我们如果之前有了date

82
00:03:12,759 --> 00:03:13,360
有了time

83
00:03:13,360 --> 00:03:16,090
我们就可以定义一个叫做date and time的结构

84
00:03:16,090 --> 00:03:19,669
那个里头呢它的第一个成员变量是一个date

85
00:03:19,669 --> 00:03:21,469
第二个成员变量是一个time

86
00:03:21,469 --> 00:03:23,219
完全可以做这样的事情

87
00:03:24,718 --> 00:03:27,498
如果我们有point point

88
00:03:27,498 --> 00:03:29,538
表达两个点来表达一个点啊

89
00:03:29,538 --> 00:03:32,189
point是x y表达的一个点

90
00:03:32,189 --> 00:03:35,620
然后呢我们需要有个rectangle矩形

91
00:03:35,899 --> 00:03:37,788
那为了表达一个矩形呢

92
00:03:37,788 --> 00:03:40,399
我们可以表达它的左上角一个点

93
00:03:40,399 --> 00:03:41,838
和右下角一个点

94
00:03:41,838 --> 00:03:42,919
我们通过两个点

95
00:03:42,919 --> 00:03:44,658
就可以表达出一个矩形来了

96
00:03:44,658 --> 00:03:45,349
对不对

97
00:03:45,349 --> 00:03:47,629
所以我们可以说我们的rectangle呢

98
00:03:47,629 --> 00:03:48,500
有两个point

99
00:03:48,500 --> 00:03:49,430
一个pg one

100
00:03:49,430 --> 00:03:50,400
一个p t two

101
00:03:50,500 --> 00:03:53,020
因此如果我们有个rectangle的变量r

102
00:03:53,020 --> 00:03:55,900
那我们就可以说r的pd wx

103
00:03:55,979 --> 00:03:57,629
r的pd wy

104
00:03:57,629 --> 00:03:58,979
r的p t two的x

105
00:03:58,979 --> 00:04:02,558
r的p t two的这个点的符号的左边

106
00:04:02,558 --> 00:04:03,579
它必须是一个结构

107
00:04:03,579 --> 00:04:05,639
所以对于第一个点来说

108
00:04:05,639 --> 00:04:06,419
它的左边是r

109
00:04:06,419 --> 00:04:07,080
这是一个结构

110
00:04:07,080 --> 00:04:07,800
没问题

111
00:04:07,800 --> 00:04:08,819
对第二个点来说

112
00:04:08,819 --> 00:04:09,930
它的左边是什么呢

113
00:04:09,930 --> 00:04:12,330
是r的p t i one

114
00:04:12,330 --> 00:04:15,030
而这个r的p t one呢是一个结构

115
00:04:15,030 --> 00:04:18,680
所以这个点它的左边也依然是一个结构

116
00:04:19,639 --> 00:04:23,259
那如果我们有这样的定义

117
00:04:23,740 --> 00:04:25,990
也就是说我们这时候有个变量r

118
00:04:25,990 --> 00:04:28,389
这个r里是一个rectangle

119
00:04:28,389 --> 00:04:30,279
而这个rectangle呢是什么呢

120
00:04:30,279 --> 00:04:32,120
这个rectangle里面啊

121
00:04:32,199 --> 00:04:35,259
是有一个叫做pone的东西

122
00:04:35,259 --> 00:04:37,158
和一个叫做p图的东西

123
00:04:37,158 --> 00:04:39,738
而这个p d5 呢是一个point

124
00:04:39,738 --> 00:04:42,560
它里面呢有一个x还有一个y

125
00:04:42,620 --> 00:04:44,720
这个p d two呢也是一个point

126
00:04:44,720 --> 00:04:47,629
它里面呢也有一个x还有一个y

127
00:04:47,629 --> 00:04:50,480
接着呢我们又有一个指针啊

128
00:04:50,480 --> 00:04:53,129
叫做这个rp

129
00:04:53,129 --> 00:04:56,779
这个指针指的就是这个r

130
00:04:57,680 --> 00:05:00,040
于是呢在这个事情上面呢

131
00:05:00,040 --> 00:05:01,870
这么几件事情是等价的

132
00:05:01,870 --> 00:05:05,730
一个是r.p t one

133
00:05:05,730 --> 00:05:10,949
点x也就是通过这个r访问了他的p t问

134
00:05:10,949 --> 00:05:12,170
访问了他的x

135
00:05:12,170 --> 00:05:16,100
这是一种形式表达的就是这个东西

136
00:05:16,100 --> 00:05:21,779
第二种形式呢说rp说rp呢所指的p t one

137
00:05:23,079 --> 00:05:25,499
也就是通过rp这个指针

138
00:05:25,499 --> 00:05:29,680
它指向了这个结构体里面的那个x x

139
00:05:29,680 --> 00:05:31,990
p t one的x啊

140
00:05:31,990 --> 00:05:35,550
那第三种形式呢是说呃我们加了一个括号

141
00:05:35,550 --> 00:05:37,740
但是这个括号加不加其实没有关系

142
00:05:37,740 --> 00:05:41,040
因为本来相同的两个点的运算呢

143
00:05:41,040 --> 00:05:42,829
就是从左往右走的啊

144
00:05:42,829 --> 00:05:44,930
所以呢下面的这个加加括号呢

145
00:05:44,930 --> 00:05:46,129
也是没有任何关系的

146
00:05:46,129 --> 00:05:47,600
因为都是从左往右走的

147
00:05:47,600 --> 00:05:51,720
但是呢没有rp所指的p t one所指的x

148
00:05:51,720 --> 00:05:53,579
因为p t one并不是一个指针

149
00:05:53,579 --> 00:05:56,339
p t one是一个结构本身对吧

150
00:05:56,339 --> 00:05:59,350
所以呢这种形式是不存在的啊

151
00:05:59,350 --> 00:06:00,860
这种形式是不存在的

152
00:06:01,579 --> 00:06:03,699
这个东西可以组合起来以后啊

153
00:06:03,699 --> 00:06:07,139
这个人类组合东西的能力是没有止境的

154
00:06:07,139 --> 00:06:08,879
所以我们有结构

155
00:06:08,879 --> 00:06:09,480
有数组

156
00:06:09,480 --> 00:06:13,100
我们可以做这个结构的数组

157
00:06:13,100 --> 00:06:14,990
数组里面都是结构

158
00:06:14,990 --> 00:06:18,639
我们也可以做这个数组的结构

159
00:06:18,639 --> 00:06:20,639
说这个结构里头有个数组

160
00:06:21,180 --> 00:06:24,540
那我们也可以说做这种结构中的结

161
00:06:24,540 --> 00:06:25,410
构的数组

162
00:06:25,410 --> 00:06:28,199
我们的数组里头的单元式结构

163
00:06:28,199 --> 00:06:30,538
结构里头还有别的结构对吧

164
00:06:30,538 --> 00:06:32,488
比如说我们前面做了retango了

165
00:06:32,488 --> 00:06:34,709
retango里面有两个point啊

166
00:06:34,709 --> 00:06:36,769
然后我们可以做rectangle的数组

167
00:06:36,769 --> 00:06:39,069
这个时候对他做初始化就很有意思了

168
00:06:39,069 --> 00:06:40,810
它是好多层的东西

169
00:06:40,810 --> 00:06:42,129
因为这是个数组嘛

170
00:06:42,129 --> 00:06:43,870
所以当然我们初始化可以有大括号

171
00:06:43,870 --> 00:06:46,540
最外头的大括号表达的是数组

172
00:06:46,540 --> 00:06:50,439
然后第二次能打括号表达的是数组的单元

173
00:06:50,439 --> 00:06:51,569
也就是那个结构

174
00:06:51,569 --> 00:06:53,490
可是那个结构里头还有结构不是

175
00:06:53,490 --> 00:06:55,699
所以呢在里头还会出现一层

176
00:06:55,699 --> 00:06:57,439
所以你看我们现在这个地方呢

177
00:06:57,439 --> 00:06:58,040
实际上是什么呢

178
00:06:58,040 --> 00:07:01,040
你看这儿有有四对数值对吧

179
00:07:01,040 --> 00:07:04,519
这个一二呢是rex 0的

180
00:07:04,519 --> 00:07:07,730
那个p t问的x和y

181
00:07:07,730 --> 00:07:13,189
这个呢三四呢是rx 0的p t two的x y啊

182
00:07:13,189 --> 00:07:16,600
然后呢下一个呢是rex的啊

183
00:07:16,600 --> 00:07:19,180
他的第二个这个rectango里面的东西

184
00:07:19,259 --> 00:07:22,990
当然呃我们可以把它写得好看一点是吧

185
00:07:22,990 --> 00:07:25,449
这个把它给它分一些行啊

186
00:07:25,449 --> 00:07:26,500
分一些行以后呢

187
00:07:26,500 --> 00:07:28,209
他看上去其实是这个样子是吧

188
00:07:28,209 --> 00:07:30,870
这每一行呢是这个数组的每一个单元

189
00:07:30,870 --> 00:07:32,339
可是在这一行里头呢

190
00:07:32,339 --> 00:07:34,370
因为这是一个结构

191
00:07:34,370 --> 00:07:36,319
那么这个结构里头又有俩结构

192
00:07:36,319 --> 00:07:39,980
所以呢我们又要再来两个大括号啊

193
00:07:39,980 --> 00:07:42,990
来表达它里面的这个point p t one

194
00:07:42,990 --> 00:07:47,089
这个p n和p two啊啊所以是这样的形式

195
00:07:47,089 --> 00:07:49,009
但是总的来说这不难对吧

196
00:07:49,009 --> 00:07:51,079
这这这只是说它复杂了

197
00:07:51,079 --> 00:07:52,459
它的层次多了

198
00:07:52,459 --> 00:07:54,129
它的属性多了

199
00:07:54,129 --> 00:07:54,790
但是呢

200
00:07:54,790 --> 00:07:57,250
它它没有超出我们之前所学的那些东西的

201
00:07:57,250 --> 00:07:57,680
范围

